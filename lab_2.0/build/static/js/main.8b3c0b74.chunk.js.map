{"version":3,"sources":["polyfill.js","static/administratorMenuConfig.js","components/Administrator/LeftNav.js","components/Administrator/Header.js","constants/actionTypes.js","redux/actionCreators/admin.js","utils/commonFunction.js","components/Administrator/StudentInformation.js","components/Administrator/RegisterUser.js","components/Administrator/LabCourse.js","redux/actionCreators/resource.js","components/Administrator/TeacherCourse.js","components/Administrator/StudentCourse.js","components/Administrator/StudyInformation.js","components/Administrator/StudySoftware.js","redux/actionCreators/announce.js","components/Administrator/LabAnnounce.js","components/Administrator/dataMana.js","components/Administrator/AdminMessage.js","components/Administrator/TeacherMessage.js","pages/Administrator.js","lib/Service.js","redux/sagas/announceSagas/announceSaga.js","pages/Home.js","components/SearchCourse.js","components/AllTasks.js","components/StudentTasks.js","lib/Export2Excel.js","components/AllCourse.js","components/addStudents.jsx","components/TeacherTasks.js","components/nav/index.jsx","pages/Tasks.js","components/Search.js","pages/LearningData.js","pages/Software.js","components/UpLoad.js","components/MyData.js","pages/teacherData.js","components/MySoftware.js","pages/TeacherSoftware.js","components/StudentTable.js","components/SearchStudent.js","components/Header.js","redux/actionCreators/user.js","components/Footer.js","pages/Users.js","Routes.js","App.js","serviceWorker.js","redux/reducers/userMana/student.js","redux/reducers/userMana/common.js","redux/reducers/userMana/index.js","redux/reducers/resource/resource.js","redux/reducers/resource/index.js","redux/reducers/announce.js","redux/reducers/course.js","redux/reducers/adminMana/userManage.js","redux/reducers/adminMana/resourceManage.js","redux/reducers/adminMana/labCourse.js","redux/reducers/adminMana/index.js","redux/reducers/index.js","redux/sagas/userSagas/allUser.js","redux/sagas/userSagas/user.js","redux/sagas/userSagas/index.js","redux/sagas/resourceSagas/studyResource.js","redux/sagas/resourceSagas/softwareResource.js","redux/sagas/resourceSagas/search.js","redux/sagas/resourceSagas/upload.js","redux/sagas/resourceSagas/index.js","redux/sagas/announceSagas/index.js","redux/sagas/courseSagas/courseResource.js","redux/sagas/courseSagas/myCourse.js","redux/sagas/courseSagas/handleCourse.js","redux/sagas/courseSagas/teacherCourse.js","redux/sagas/courseSagas/handleTasks.js","redux/sagas/courseSagas/index.js","redux/sagas/adminSagas/userManage.js","redux/sagas/adminSagas/resourceManage.js","redux/sagas/adminSagas/labCourse.js","redux/sagas/adminSagas/dataMana.js","redux/sagas/adminSagas/labAnnounce.js","redux/sagas/adminSagas/index.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["Object","setPrototypeOf","setprototypeof","menuConfig","title","key","icon","children","type","SubMenu","withRouter","props","path","location","pathname","$path","substring","lastIndexOf","style","height","mode","selectedKeys","defaultOpenKeys","Item","marginLeft","fontWeight","getMenuNodes","map","item","to","connect","state","userName","getIn","login","dispatch","handleLogOut","forEach","cItem","find","getTitle","background","width","display","justifyContent","alignItems","padding","onClick","e","preventDefault","localStorage","removeItem","window","href","borderTop","className","fontSize","resetPassword","args","CryptoJS","enc","Utf8","parse","iv","openNotification","message","description","notification","open","placement","duration","isChinese","str","pattern","test","checkNumber","Encrypto","srcs","AES","encrypt","CBC","pad","Pkcs7","ciphertext","toString","toUpperCase","Decrypt","encryptedHexStr","Hex","Base64","stringify","decrypt","Search","InputGroup","Group","Option","total","adminStudentData","addStudentFlag","temp","modifyStudentTemp","studentPage","searchFlag","userId_i","addVisible","handleStudentData","admin","handleAddStudent","userId","length","grade","cls","academy","discipline","phone","handleDeleteStudent","handleModifyStudent","handleSearchAdminStudent","handleImportUser","useState","id","setId","isEditing","record","useRef","$columns","dataIndex","editable","render","text","ref","defaultValue","overlay","menu","sex","current","value","el","onCell","editing","addFlag","changeAddFlag","changeSelectedRowKeys","selectedRowKeys","setSelectedRowKeys","setSex","list","setList","file","setFile","setValue","presentPage","setPresentPage","deleteBtn","setDeleteBtn","flag","textAlign","useEffect","page","Math","ceil","disabled","name","beforeUpload","FileList","customRequest","showUploadList","compact","flexWrap","onChange","placeholder","onSearch","enterButton","tableLayout","rowKey","size","columns","rowSelection","selectedRows","dataSource","Array","from","pagination","pageSize","defaultCurrent","destroyOnClose","visible","onCancel","okText","onOk","adminRegisterUserData","handleRegisterUserData","handleAgreeRegister","handleDeleteRegisterUser","color","confirm","Reg","numberReg","labCourses","labCourseTotal","addCourseFlag","deleteCourseFlag","importCourseFlag","handleQueryLabCourse","handleAddlabCourse","handleDeletelabCourse","handleImportlabCourse","showAdd","setShowAdd","showImport","setShowImport","courseName","setCourseName","courseNumber","setCourseNumber","selected","setSelected","uploadBtn","setUploadBtn","fileList","setFileList","uploadProps","push","onRemove","index","indexOf","originFileObj","splice","margin","marginRight","courseIdList","cancelText","error","target","loading","downloadResource","downloadSoftware","fetchStudentMes","fetchSearchValue","fetchSearchCourse","fetchCourse","fetchCourseTask","teacherCourseId","taskResource","queryMyCourse","taskTotal","courseResource","courseTask","teacherCourseFlag","handleFetchCourseRes","course","handleSearchCourse","handleDeleteTeacherCourse","selectedRow","setSelectedRow","arr","setArr","setSearchFlag","teacherCourseIdList","teacherName","studentCourseFlag","studentCourses","studentCourseTotal","handleQueryStudentCourse","handleDeleteStudentCourse","selectedKey","setSelectedKey","studentName","studentId","studentCourseId","studentCourseIdList","resourceData","learningDataTemp","handleAdminResourceData","handleDeleteResource","handleSearchResourceData","handleImportResource","handleDownloadResource","resource","download","setCurrent","resourceId","softwareData","softwareDataTemp","handleAdminSoftwareData","handleDeleteSoftwareData","handleSearchSoftwareData","handleImportSoftware","handleDownloadSoftware","queryAnnounce","announceResource","releaseAnnounceFlag","deleteAnnounceFlag","handleQueryAnnounce","announce","handleReleaseAnnounce","handleEditAnnounce","handleDeleteAnnounce","announceId","showBraft","setShowBraft","braftType","setBraftType","BraftEditor","createEditorState","editorState","setEditorState","setFilelist","selectedId","setSelectedId","announceTit","setAnnounceTit","setAnnounceId","rows","align","dangerouslySetInnerHTML","__html","content","url","fileName","editOrAddAnnounce","slice","undefined","bordered","hideOnSinglePage","editorContent","toHTML","marginTop","paramSystem","adminTotal","handleAdminClearData","handleParam","modifyParam","workLimit","setWorkLimit","taskLimit","setTaskLimit","softwareLimit","setSoftwareLimit","meterialLimit","setMeterialLimit","announceLimit","setAnnounceLimit","keyValue","span","min","max","adminData","addAdminFlag","modifyAdminTemp","handleAdminData","handleAddAdmin","handleModifyAdmin","console","log","adminTeacherData","addTeacherFlag","modifyTeacherTemp","teacherPage","handleTeacherData","handleAddTeacher","handleDeleteTeacher","handleModifyTeacher","handleSearchTeacherData","department","clearCheck","Footer","Sider","Content","userIdentify","history","minHeight","component","AdminMessage","TeacherMessage","StudentInformation","RegisterUser","LabCourse","TeacherCourse","StudentCourse","StudyInformation","StudySoftware","LabAnnounce","DataMana","Service","axios","create","baseURL","headers","get","post","timeout","transformRequest","data","prototype","call","qs","validateStatus","transformResponse","startsWith","JSON","interceptors","request","use","config","token","getItem","common","msg","Promise","resolve","response","status","400","401","403","404","408","500","501","502","503","504","505","showStatus","queryAnnounceRes","rootAnnounceSagas","res","error_code","put","payload","takeEvery","handleFetchAnnounceRes","modalContent","setModalContent","modalVisible","setModalVisible","handleShowModal","simple","centered","footer","autoplay","addCourse_S","updateCourseFlag","handleFetchTaskRes","handleStudentAddCourse","cursor","added","expandedRowRender","onExpand","expanded","myCourse","checkList","studentUploadFlag","param","handleMyCourseRes","handleStudentDeleteCourse","handleStudentQuerySubmit","handleStudentUploadWork","handleStudentDeleteHomework","uploadVisible","setUploadVisible","checkWorkVisible","setCheckWorkVisible","setStudentCourseId","taskId","setTaskId","uploadLoading","setUploadLoading","deleteConfirm","action","workId","taskFileName","closed","showIcon","isArray","multiple","scroll","y","sheet_from_array_of_arrays","opts","v","ws","range","s","c","r","R","C","cell","cell_ref","XLSX","utils","encode_cell","t","Date","z","SSF","_table","datenum","UTC","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","export_json_to_excel2","th","jsonSource","jsonFillter","multiHeader","header","filename","merges","autoWidth","bookType","unshift","ws_name","wb","decode_range","colWidth","row","val","result","j","wbout","write","bookSST","saveAs","Blob","export_json_to_excel","formatJson","courseTotal","allCourse","handleTeacherAddCourse","handleTeacherQueryCourse","setArgs","courseId","teacherId","studentMessage","handleTeacherAddStudent","teacherAddStudent","handleSearchStudent","input","searchInfo","setSearchInfo","visibleCallback","addStudentVisible","addCourse","unSubmitList","submitList","submitTotal","downloadUrl","studentCourseList","teacherUploadFlag","teacherUpdateFlag","handleTeacherDeleteCourse","handleTeacherReleaseTask","handleTeacherUpdateTask","handleAddRemark","handleTeacherDeleteTask","handleToggleUpload","handleTeacherQueryUnsubmit","handleTeacherQuerySubmit","handleTeacherDownloadSubmit","handleCheckStudent","releaseVisible","setReleaseVisible","remarkVisible","setRemarkVisible","textVisible","setTextVisible","updateVisible","setUpdateVisible","unSubmitVisible","setUnSubmitVisible","submitVisible","setSubmitVisible","downloadVisible","setDownloadVisible","checkStudentVisible","setCheckStudentVisible","addCourseVisible","setAddCourseVisible","setAddStudentVisible","setTeacherCourseId","taskName","setTaskName","userIdList","setUserIdList","updateName","setUpdateName","remark","setRemark","files","setFiles","updateFiles","setUpdateFiles","updateLoading","setUpdateLoading","updateBtn","setUpdateBtn","checkSubmit","setCheckSubmit","downloadWorks","hide","callback","checkWorks","substr","releaseProps","updateProps","marginBottom","trim","setTimeout","deleteStudent","showSizeChanger","onShowSizeChange","studentIdList","idList","Set","join","workName","Nav","setActiveOne","tabList","activeOne","openKey","TeacherTasks","StudentTasks","AllTasks","handleSearchValue","setType","setFlag","resourceName","studyResource","learningUrl","searchResource","time","handleFetchStudyRes","loadResource","handleDownload","softwareResource","handleFetchSoftwareRes","uploadFlag","handleUpload","uploading","setUploading","teacherData","resourceTemp","handleMyData","handleDeleteData","TeacherData","MyData","LearningData","teacherSoftware","softwareTemp","handleMySoftware","handleDeleteSoftware","TeacherSoftware","MySoftware","Software","reUserId","getCheckboxProps","question","teacher","reAcademy","reDiscipline","reGrade","reSex","reClass","reType","rePhone","rePassword","ratify","registerSuccess","registeredFlag","resetPasswardData","isQuestion","isCheck","modifyPassward","forgetFlag","newUser","handleLogin","user","handleRegister","handleTeacher","handlePreserve","handleQueryRegister","handleRegistered","querySecret","secretGuardExistence","checkQuestion","addQuestion","sendForgetFlag","registerUserId","setRegisterUserId","setRegisterVisible","registerVisible","password","modifyUserId","modifyUserName","modifyAcademy","modifyGrade","modifyDiscipline","modifyCls","modifySex","modifyType","modifyPhone","modifyPassword","questionAnswer","newPassward","loginVisible","setLoginVisible","identifyVisible","setIdentifyVisible","studentMessageVisible","setStudentMessageVisible","studentCertification","setStudentCertification","resetVisible","setResetVisible","identify","setIdentify","refs","defaultMessage","keyboard","onPressEnter","zIndex","labelCol","wrapperCol","label","rules","required","Password","htmlFor","handleQuestionChange","handleSexChange","handleTeacherChange","paddingLeft","linkArr","counter","pv","uv","handleCounter","changeType","border","Home","Tasks","Users","Administrator","handleKeepAlive","Routes","Boolean","hostname","match","defaultState","fromJS","handleHomework","defaultSate","class","bigOpenKey","sessionStorage","smallOpenKey","now","registerTotal","registerStudent","gorgetFlag","combineReducers","student","set","merge","setItem","items","allSoftwareTotal","allLearningTotal","mySoftwareTotal","myLearningTotal","searchTotal","studentTotal","storageSoftwareRes","storageSoftwareTotal","softwareTotal","loadUrl","unsubmitList","registerUserTotal","teacherTotal","studentSearchFlag","teacherSearchFlag","resourceTotal","resourcePage","softwarePage","resourceSearchFlag","softwareSearchFlag","userManage","payloadS","newDataS","dataS","pop","payloadA","newDataA","dataA","newData","resourceManage","labCourse","toJS","userMana","obj","newObj","assign","myCourseRes_S","courseResourceRes_S","myCourseArr_S","myCourseIndex_S","checkListRes","checkListSearch","checkListArr","checkListIndex","myCourseRes_T","allCourseRes_T","myCourseArr_T","myCourseIndex_T","teacherDeleteTask","deleteIndex","courseResourceRes","newCourseResource","allCourseRes","updateCourseFlag1","myCourseRes","updateCourseFlag2","teacherCourseId1","myCourseList","toggleCourseTask","releaseTask","teacherUploadFlag2","updateTask","teacherUpdateFlag2","handleQueryHomework","watchStudentSagas","teacherRes","itemsArr","formData","FormData","append","answer","resLogin","rootUserSagas","all","allUser","fetchStudyRes","fetchTeacherRes","deleteStudyData","rootResourceSagas","resData","resourceIdList","fetchSoftwareRes","fetchTeacherSoftwareRes","deleteSoftware","storage","handleSearchStudentMes","$data","uploadData","search","upload","announceSource","queryCourseRes","rootCourseSaga","queryMyCourseRes","rootMyCourse","studentAddCourse","teacherAddCourse","studentDeleteCourse","teacherDeleteCourse","teacherAddRemark","teacherReleaseTask","teacherCheckStudent","teacherDeleteStudent","rootStudentAddCourse","success","updateUrl","updateRes","Url","Res","queryTeacherCourse","rootTeacherCourse","hasOwnProperty","teacherUpdateTask","teacherToggleTaskUpload","teacherQueryUnsubmit","teacherQuerySubmit","teacherDownloadSubmit","studentUploadHomework","studentQuerySubmit","studentDeleteHomework","queryCourseTaskRes","rootHandleTask","err","reason","rootCourseSagas","handleCourse","handleTasks","teacherCourse","addNewAdmin","addNewTeacher","fetchAdminData","modifyAdmin","fetchTeacherData","deleteTeacher","modifyTeacher","searchTeacher","fetchStudentData","addNewStudent","modifyStudent","searchStudent","importStudent","fetchRegisterUserData","agreeRegister","deleteRegisterUser","rootAdminSagas","fetchResourceData","deleteResource","importResourceData","searchSoftware","fetchSoftwareData","importSoftwareData","adminQueryLabCourse","adminAddlabCourse","adminDeletelabCourse","adminImportlabCourse","adminQueryStudentCourse","adminDeleteTeacherCourse","deleteStudentCourse","rootLabCourse","clearData","rootClearDataSaga","releaseAnnounce","editAnnounce","deleteAnnounce","rootAnnounceSaga","arg","addMessage","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","sagas","run","Root","basename","locale","zhCN","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b3c0b74.chunk.js","sourcesContent":["import setprototypeof from  'setprototypeof';\r\n \r\nObject.setPrototypeOf = setprototypeof;","const menuConfig = [\r\n    {\r\n        title: \"用户管理\",\r\n        key: \"/admin/userManage\",\r\n        icon: \"user\",\r\n        children: [\r\n            {\r\n                title: \"管理员信息\",\r\n                key:\"/admin/userManage/administratorInformation\",\r\n            },\r\n            {\r\n                title: \"教师信息\",\r\n                key: \"/admin/userManage/teacherInformation\",\r\n            },\r\n            {\r\n                title: \"学生信息\",\r\n                key: \"/admin/userManage/studentInformation\",\r\n            },\r\n            {\r\n                title: \"注册用户\",\r\n                key: \"/admin/userManage/registerUser\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"实验课程管理\",\r\n        key: \"/admin/courseManage\",\r\n        icon: \"read\",\r\n        children: [\r\n            {\r\n                title: \"实验课程\",\r\n                key:\"/admin/courseManage/labCourse\",\r\n            },\r\n            {\r\n                title: \"教师课程\",\r\n                key: \"/admin/courseManage/teacherCourse\",\r\n            },\r\n            {\r\n                title: \"学生课程\",\r\n                key: \"/admin/courseManage/studentCourse\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"资料管理\",\r\n        key: \"/admin/informationManage\",\r\n        icon: \"file\",\r\n        children: [\r\n            {\r\n                title: \"学习资料\",\r\n                key:\"/admin/informationManage/studyInformation\",\r\n            },\r\n            {\r\n                title: \"学习软件\",\r\n                key: \"/admin/informationManage/studySoftware\",\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: \"实验室管理\",\r\n        key: \"/admin/labManage\",\r\n        icon: \"code\",\r\n        children: [\r\n            {\r\n                title: \"实验室公告\",\r\n                key:\"/admin/labManage/labAnnounce\",\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: \"数据信息管理\",\r\n        type: \"data\",\r\n        key: \"/admin/dataInformationManage\",\r\n        icon: \"inbox\",\r\n    },\r\n\r\n];\r\nexport default menuConfig;","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport menuConfig from \"../../static/administratorMenuConfig\";\r\nconst { SubMenu } = Menu;\r\nconst getMenuNodes = (menuConfig) => {\r\n    return menuConfig.map(item => {\r\n        if(!item.children){\r\n            return (\r\n                <Menu.Item key = {item.key}>\r\n                    <Link to = {item.key}>\r\n                        <span>{item.title}</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n            )\r\n        } else {\r\n            return (\r\n                <SubMenu\r\n                    key={item.key}\r\n                    title={\r\n                        <span>{item.title}</span>\r\n                    }\r\n                >\r\n                    {\r\n                        getMenuNodes(item.children)\r\n                    }\r\n                </SubMenu>\r\n            )\r\n        }\r\n    })\r\n};\r\n\r\nconst LeftNav = props => {\r\n    const path = props.location.pathname;\r\n    const $path = path.substring(0, path.lastIndexOf('/'));\r\n    return(\r\n        <Menu\r\n            style={{height: \"100%\"}}\r\n            mode=\"inline\"\r\n            selectedKeys={[path]}\r\n            defaultOpenKeys = {[$path]}\r\n        >\r\n            <Menu.Item>\r\n                <div\r\n                    style={{ marginLeft: \"20px\", fontWeight: \"bolder\" }}\r\n                >\r\n                    经济管理学院实验室系统\r\n                </div>\r\n            </Menu.Item>\r\n            {\r\n                getMenuNodes(menuConfig, props)\r\n            }\r\n        </Menu>\r\n    )\r\n\r\n};\r\nexport default withRouter(LeftNav)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport menuConfig from \"../../static/administratorMenuConfig\";\r\nimport {LOG_OUT} from \"../../constants/actionTypes\";\r\n\r\nconst Header = props =>{\r\n    const { userName, handleLogOut } = props;\r\n    const getTitle = () =>{\r\n        const path = props.location.pathname;\r\n        let title;\r\n        menuConfig.forEach(item => {\r\n            if(item.key === path){\r\n                title = item.title;\r\n            } else if(item.children){\r\n                const cItem = item.children.find(cItem => cItem.key === path);\r\n                if(cItem){\r\n                    title = cItem.title;\r\n                }\r\n            }\r\n\r\n        });\r\n        return title;\r\n    };\r\n    const title = getTitle();\r\n    return (\r\n        <div style={{ height: \"81px\", background: \"white\" }}>\r\n         <div style={{width: \"100%\", height: \"40px\", display: \"flex\", justifyContent:\"flex-end\", alignItems: \"center\", padding: \"0 20px\"}} >\r\n             <span>欢迎 {userName}</span>\r\n             <span\r\n                 style={{padding: \"0 15px\"}}\r\n             >\r\n                 <a\r\n                     onClick={\r\n                         (e) => {\r\n                             e.preventDefault();\r\n                             localStorage.removeItem('access');\r\n                             handleLogOut();\r\n                             window.location.href=\"/\";\r\n                         }\r\n                     }\r\n                 >\r\n                     退出\r\n                 </a>\r\n             </span>\r\n\r\n         </div>\r\n         <div style={{ height: \"40px\", width: \"100%\", borderTop: \"1px solid #7E7E7E\", display: \"flex\", alignItems: \"center\"}}>\r\n             <span className={\"adminNavTitle\"} style={{padding: \"0 50px\", fontSize: \"18px\", }}>{title}</span>\r\n         </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(connect(\r\n    state => ({\r\n        userName: state.getIn([\"userMana\", \"common\", \"userIdentify\"]),\r\n        login: state.getIn([\"userMana\", \"common\", \"login\"])\r\n        }),\r\n    dispatch => ({\r\n        handleLogOut() {\r\n            dispatch({type: LOG_OUT});\r\n        },\r\n    })\r\n)(Header));\r\n","//用户管理\r\n//游客部分\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const KEEP_ALIVE = \"KEEP_ALIVE\";\r\nexport const REGISTER = \"REGISTER\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const QUERY_RESOURCE = \"QUERY_RESOURCE\";\r\nexport const TEACHERRES = \"TEACHERRES\";\r\nexport const HANDLE_TEACHERRES_SUCCESS = \"HANDLE_TEACHERRES_SUCCESS\";\r\n//密码部分\r\nexport const QUERY_SECRET = \"QUERY_SECRET\";\r\nexport const QUERY_SECRET_SUCCESS = 'QUERY_SECRET_SUCCESS';\r\nexport const RESET_PASSWARD = 'RESET_PASSWARD'\r\nexport const CHECK_QUESTION = 'CHECK_QUESTION';\r\nexport const CHECK_QUESTION_SUCCESS = 'CHECK_QUESTION_SUCCESS';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const ADD_QUESTION_SUCCESS = 'ADD_QUESTION_SUCCESS'\r\n//传送忘记密码标志\r\nexport const SEND_FORGET_FLAG = 'SEND_FORGET_FLAG';\r\nexport const SEND_FORGET_FLAG_SUCCESS = 'SEND_FORGET_FLAG_SUCCESS';\r\n//密保\r\nexport const SECRET_GUARD_EXISTENCE = 'SECRET_GUARD_EXISTENCE';\r\nexport const SECRET_GUARD_EXISTENCE_SUCCESS = 'SECRET_GUARD_EXISTENCE_SUCCESS'\r\n//学生部分\r\nexport const QUERY_HOMEWORK = \"QUERY_HOMEWORK\";\r\nexport const QUERY_HOMEWORK_OK = \"QUERY_HOMEWORK_OK\";\r\n//学生添加课程\r\n//资源管理\r\nexport const CHANGE_TYPE = \"CHANGE_TYPE\";\r\nexport const FETCH_STUDY_RESOURCE = \"FETCH_STUDY_RESOURCE\";\r\nexport const FETCH_STUDY_RES_SUCCESS = \"FETCH_STUDY_RES_SUCCESS\";\r\nexport const FETCH_SOFTWARE_RES_SUCCESS = \"FETCH_SOFTWARE_RES_SUCCESS\";\r\nexport const FETCH_SOFTWARE_RESOURCE = \"FETCH_SOFTWARE_RESOURCE\";\r\n//学习资源下载次数\r\nexport const DOWNLOAD_RESOURCE = \"DOWNLOAD_RESOURCE\";\r\nexport const DOWNLOAD_RESOURCE_SUCCESS = \"DOWNLOAD_RESOURCE_SUCCESS\";\r\n//软件资源下载\r\nexport const DOWNLOAD_SOFTWARE = \"DOWNLOAD_SOFTWARE\";\r\nexport const DOWNLOAD_SOFTWARE_SUCCESS = \"DOWNLOAD_SOFTWARE_SUCCESS\";\r\n//上传\r\nexport const FETCH_UPLOAD_RES = \"FETCH_UPLOAD_RES\";\r\nexport const FETCH_UPLOAD_DATA_SUCCESS = \"FETCH_UPLOAD_DATA_SUCCESS\";\r\nexport const FETCH_UPLOAD_SOFTWARE_SUCCESS = \"FETCH_UPLOAD_SOFTWARE_SUCCESS\";\r\nexport const NOT_UPLOAD = \"NOT_UPLOAD\";\r\n//获取老师资源\r\nexport const FETCH_TEACHER_DATA = \"FETCH_TEACHER_DATA\";\r\nexport const FETCH_TEACHER_DATA_SUCCESS = \"FETCH_TEACHER_DATA_SUCCESS\";\r\nexport const FETCH_TEACHER_SOFTWARE = \"FETCH_TEACHER_SOFTWARE\";\r\nexport const FETCH_TEACHER_SOFTWARE_SUCCESS = \"FETCH_TEACHER_SOFTWARE_SUCCESS\";\r\n//老师查询学生信息\r\nexport const FETCH_STUDENT_MESSAGE = \"FETCH_STUDENT_MESSAGE\";\r\nexport const FETCH_STUDENT_MESSAGE_SUCCESS = \"FETCH_STUDENT_MESSAGE_SUCCESS\";\r\n//老师批准注册用户\r\nexport const REGISTERED = \"REGISTERED\";\r\nexport const REGISTERED_SUCCESS = \"REGISTERED_SUCCESS\";\r\n//老师查询待批准的学生\r\nexport const FETCH_QUERY_REGISTER = \"FETCH_QUERY_REGISTER\";\r\nexport const FETCH_QUERY_REGISTER_SUCCESS = \"FETCH_QUERY_REGISTER_SUCCESS\";\r\n//删除学习资源\r\nexport const DELETE_DATA = \"DELETE_DATA\";\r\nexport const DELETE_DATA_SUCCESS = \"DELETE_DATA_SUCCESS\";\r\n//删除软件资源\r\nexport const DELETE_SOFTWARE = \"DELETE_SOFTWARE\";\r\nexport const DELETE_SOFTWARE_SUCCESS = \"DELETE_SOFTWARE_SUCCESS\";\r\n//搜索资源\r\nexport const FETCH_SEARCH_VALUE = \"FETCH_SEARCH_VALUE\";\r\nexport const FETCH_SEARCH_VALUE_SUCCESS = \"FETCH_SEARCH_VALUE_SUCCESS\";\r\nexport const FETCH_SEARCH_DATA_SUCCESS = \"FETCH_SEARCH_DATA_SUCCESS\";\r\nexport const FETCH_SEARCH_SOFTWARE_SUCCESS = \"FETCH_SEARCH_SOFTWARE_SUCCESS\";\r\n//下载资源\r\nexport const MATERIAL_LOAD = \"MATERIAL_LOAD\";\r\nexport const FETCH_LOAD_RESOURCE_SUCCESS = \"FETCH_LOAD_RESOURCE_SUCCESS\";\r\n//实验室公告\r\nexport const QUERY_ANNOUNCE = \"QUERY_ANNOUNCE\";\r\nexport const QUERY_ANNOUNCE_SUCCESS = \"QUERY_ANNOUNCE_SUCCESS\";\r\n//上机任务\r\nexport const QUERY_COURSE = \"QUERY_COURSE\";\r\nexport const QUERY_COURSE_RES_SUCCESS = \"QUERY_COURSE_RES_SUCCESS\";\r\nexport const QUERY_COURSE_TASK = \"QUERY_COURSE_TASK\";\r\nexport const QUERY_COURSE_TASK_SUCCESS = \"QUERY_COURSE_TASK_SUCCESS\";\r\n//修改学生信息\r\nexport const PRESERVE = \"PRESERVE\";\r\nexport const PRESERVE_SUCCESS = \"PRESERVE_SUCCESS\";\r\n//教师查询课程\r\nexport const FETCH_SEARCH_COURSE = \"FETCH_SEARCH_COURSE\";\r\nexport const FETCH_SEARCH_COURSE_SUCCESS = \"FETCH_SEARCH_COURSE_SUCCESS\";\r\n\r\n\r\n//超级管理员\r\nexport const FETCH_ADMINSIDE = \"FETCH_ADMINSIDE\";\r\n//获取管理员信息\r\nexport const FETCH_ADMINISTRATOR_DATA = \"FETCH_ADMINISTRATOR_DATA\";\r\nexport const FETCH_ADMINISTRATOR_DATA_SUCCESS = \"FETCH_ADMINISTRATOR_DATA_SUCCESS\";\r\n//添加新的管理员\r\nexport const ADD_NEW_ADMIN = \"ADD_NEW_ADMIN\";\r\nexport const ADD_NEW_ADMIN_SUCCESS = \"ADD_NEW_ADMIN_SUCCESS\";\r\n//修改管理员信息\r\nexport const MODIFY_ADMIN = \"MODIFY_ADMIN\";\r\nexport const MODIFY_ADMIN_SUCCESS = \"MODIFY_ADMIN_SUCCESS\";\r\n//获取老师信息\r\nexport const FETCH_TEACHER_RES = \"FETCH_TEACHER_RES\";\r\nexport const FETCH_TEACHER_RES_SUCCESS = \"FETCH_TEACHER_RES_SUCCESS\";\r\n//添加新的教师\r\nexport const ADD_NEW_TEACHER = \"ADD_NEW_TEACHER\";\r\nexport const ADD_NEW_TEACHER_SUCCESS = \"ADD_NEW_TEACHER_SUCCESS\";\r\n//搜索老师\r\nexport const SEARCH_TEACHER = \"SEARCH_TEACHER\";\r\nexport const SEARCH_TEACHER_SUCCESS = \"SEARCH_TEACHER_SUCCESS\";\r\n//删除教师\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\";\r\nexport const DELETE_TEACHER_SUCCESS = \"DELETE_TEACHER_SUCCESS\";\r\n//修改教师信息\r\nexport const MODIFY_TEACHER = \"MODIFY_TEACHER\";\r\nexport const MODIFY_TEACHER_SUCCESS = \"MODIFY_TEACHER_SUCCESS\";\r\n//获取学生信息\r\nexport const FETCH_STUDENT_DATA = \"FETCH_STUDENT_DATA\";\r\nexport const FETCH_STUDENT_DATA_SUCCESS = \"FETCH_STUDENT_DATA_SUCCESS\";\r\n//添加学生\r\nexport const ADD_NEW_STUDENT = \"ADD_NEW_STUDENT\";\r\nexport const ADD_NEW_STUDENT_SUCCESS = \"ADD_NEW_STUDENT_SUCCESS\";\r\n//删除学生\r\nexport const DELETE_STUDENT = \"DELETE_STUDENT\";\r\nexport const DELETE_STUDENT_SUCCESS = \"DELETE_STUDENT_SUCCESS\";\r\n//修改学生\r\nexport const MODIFY_STUDENT = \"MODIFY_STUDENT\";\r\nexport const MODIFY_STUDENT_SUCCESS = \"MODIFY_STUDENT_SUCCESS\";\r\n//导入学生\r\nexport const IMPORT_USER = \"IMPORT_USER\";\r\nexport const IMPORT_USER_success = \"IMPORT_USER_success\";\r\n//重置密码\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD'\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\r\n//搜索学生\r\nexport const SEARCH_STUDENT = \"SEARCH_STUDENT\";\r\nexport const SEARCH_STUDENT_SUCCESS = \"SEARCH_STUDENT_SUCCESS\";\r\n//获取注册用户信息\r\nexport const FETCH_REGISTER_DATA = \"FETCH_REGISTER_DATA\";\r\nexport const FETCH_REGISTER_DATA_SUCCESS = \"FETCH_REGISTER_DATA_SUCCESS\";\r\n//用户授权\r\nexport const AGREE_REGISTER = \"AGREE_REGISTER\";\r\nexport const AGREE_REGISTER_SUCCESS = \"AGREE_REGISTER_SUCCESS\";\r\n//删除注册用户\r\nexport const DELETE_REGISTER_USER = \"DELETE_REGISTER_USER\";\r\nexport const DELETE_REGISTER_USER_SUCCESS = \"DELETE_REGISTER_USER_SUCCESS\";\r\n//获取学习资料\r\nexport const FETCH_ADMIN_RESOURCE_DATA = \"FETCH_ADMIN_RESOURCE_DATA\";\r\nexport const FETCH_ADMIN_RESOURCE_DATA_SUCCESS = \"FETCH_ADMIN_RESOURCE_DATA_SUCCESS\";\r\n//删除学习资料\r\nexport const DELETE_RESOURCE_DATA = \"DELETE_RESOURCE_DATA\";\r\nexport const DELETE_RESOURCE_DATA_SUCCESS = \"DELETE_RESOURCE_DATA_SUCCESS\";\r\n//获取软件\r\nexport const FETCH_ADMIN_SOFTWARE_DATA = \"FETCH_ADMIN_SOFTWARE_DATA\";\r\nexport const FETCH_ADMIN_SOFTWARE_DATA_SUCCESS = \"FETCH_ADMIN_SOFTWARE_DATA_SUCCESS\";\r\n//删除软件按\r\nexport const DELETE_SOFTWARE_DATA = \"DELETE_SOFTWARE_DATA\";\r\nexport const DELETE_SOFTWARE_DATA_SUCCESS = \"DELETE_SOFTWARE_DATA_SUCCESS\";\r\n//搜索学习资料\r\nexport const SEARCH_RESOURCE_DATA = \"SEARCH_RESOURCE_DATA\";\r\nexport const SEARCH_RESOURCE_DATA_SUCCESS = \"SEARCH_RESOURCE_DATA_SUCCESS\";\r\n//搜索软件资料\r\nexport const SEARCH_SOFTWARE_DATA = \"SEARCH_SOFTWARE_DATA\";\r\nexport const SEARCH_SOFTWARE_DATA_SUCCESS = \"SEARCH_SOFTWARE_DATA_SUCCESS\";\r\n//导入学习资料\r\nexport const IMPORT_RESOURCE = \"IMPORT_RESOURCE\";\r\nexport const IMPORT_RESOURCE_SUCCESS = \"IMPORT_RESOURCE_SUCCESS\";\r\n//导入软件\r\nexport const IMPORT_SOFTWARE = \"IMPORT_SOFTWARE\";\r\nexport const IMPORT_SOFTWARE_SUCCESS = \"IMPORT_SOFTWARE_SUCCESS\";\r\n\r\n//访问量\r\nexport const COUNTER = \"COUNTER\";\r\nexport const COUNTER_SUCCESS = \"COUNTER_SUCCESS\";\r\n//获取系统参数\r\nexport const FETCH_PARAM = 'FETCH_PARAM';\r\nexport const FETCH_PARAM_SUCCESS = 'FETCH_PARAM_SUCCESS'\r\n//设置系统参数\r\nexport const MODIFY_PARAM = 'MODIFY_PARAM';\r\nexport const MODIFY_PARAM_SUCCESS = 'MODIFY_PARAM_SUCCESS'\r\n\r\n//morning\r\n//老师请求实验课程\r\nexport const TEACHER_QUERY_COURSE = \"TEACHER_QUERY_COURSE\";\r\nexport const TEACHER_QUERY_COURSE_SUCCESS = \"TEACHER_QUERY_COURSE_SUCCESS\";\r\n//老师查看选课学生\r\nexport const TEACHER_CHECK_STUDENT = \"TEACHER_CHECK_STUDENT\";\r\nexport const TEACHER_CHECK_STUDENT_SUCCESS = \"TEACHER_CHECK_STUDENT_SUCCESS\";\r\n\r\n//学生添加上机课程\r\nexport const STUDENT_ADD_COURSE = \"STUDENT_ADD_COURSE\";\r\nexport const STUDENT_ADD_COURSE_SUCCESS = \"STUDENT_ADD_COURSE_SUCCESS\";\r\n//老师添加上机课程\r\nexport const TEACHER_ADD_COURSE = \"TEACHER_ADD_COURSE\";\r\nexport const TEACHER_ADD_COURSE_SUCCESS = \"TEACHER_ADD_COURSE_SUCCESS\";\r\n//学生删除课程\r\nexport const STUDENT_DELETE_COURSE = \"STUDENT_DELETE_COURSE\";\r\nexport const STUDENT_DELETE_COURSE_SUCCESS = \"STUDENT_DELETE_COURSE_SUCCESS\";\r\n//老师删除课程\r\nexport const TEACHER_DELETE_COURSE = \"TEACHER_DELETE_COURSE\";\r\nexport const TEACHER_DELETE_COURSE_SUCCESS = \"TEACHER_DELETE_COURSE_SUCCESS\";\r\n//老师添加教学班课程备注\r\nexport const TEACHER_ADD_REMARK = \"TEACHER_ADD_REMARK\";\r\nexport const TEACHER_ADD_REMARK_SUCCESS = \"TEACHER_ADD_REMARK_SUCCESS\";\r\n\r\n//老师学生查看自己的上机任务\r\nexport const QUERY_MY_COURSE = \"QUERY_MY_COURSE\";\r\nexport const QUERY_MY_COURSE_SUCCESS = \"QUERY_MY_COURSE_SUCCESS\";\r\n//老师发布任务\r\nexport const TEACHER_RELEASE_TASKS = \"TEACHER_RELEASE_TASKS\";\r\nexport const TEACHER_RELEASE_TASKS_SUCCESS = \"TEACHER_RELEASE_TASKS_SUCCESS\";\r\nexport const TEACHER_RELEASE_TASKS_FAILED = \"TEACHER_RELEASE_TASKS_FAILED\";\r\n//老师删除任务\r\nexport const TEACHER_DELETE_TASK = \"TEACHER_DELETE_TASK\";\r\nexport const TEACHER_DELETE_TASK_SUCCESS = \"TEACHER_DELETE_TASK_SUCCESS\";\r\n//老师开启/关闭任务作业的上传\r\nexport const TEACHER_TOGGLE_TASK_UPLOAD = \"TEACHER_TOGGLE_TASK_UPLOAD\";\r\nexport const TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS = \"TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS\";\r\n//老师查看学生作业\r\nexport const TEACHER_QUERY_SUBMIT = \"TEACHER_QUERY_SUBMIT\";\r\nexport const TEACHER_QUERY_SUBMIT_SUCCESS = \"TEACHER_QUERY_SUBMIT_SUCCESS\";\r\n//老师查看未提交作业名单\r\nexport const TEACHER_QUERY_UNSUBMIT = \"TEACHER_QUERY_UNSUBMIT\";\r\nexport const TEACHER_QUERY_UNSUBMIT_SUCCESS = \"TEACHER_QUERY_UNSUBMIT_SUCCESS\";\r\n//学生上传作业\r\nexport const STUDENT_UPLOAD_HOMEWORK = \"STUDENT_UPLOAD_HOMEWORK\";\r\nexport const STUDENT_UPLOAD_HOMEWORK_SUCCESS = \"STUDENT_UPLOAD_HOMEWORK_SUCCESS\";\r\nexport const STUDENT_UPLOAD_HOMEWORK_FAILED = \"STUDENT_UPLOAD_HOMEWORK_FAILED\";\r\n//学生查看作业\r\nexport const STUDENT_QUERY_SUBMIT = \"STUDENT_QUERY_SUBMIT\";\r\nexport const STUDENT_QUERY_SUBMIT_SUCCESS = \"STUDENT_QUERY_SUBMIT_SUCCESS\";\r\n//学生删除已提交作业\r\nexport const STUDENT_DELETE_HOMEWORK = \"STUDENT_DELETE_HOMEWORK\";\r\nexport const STUDENT_DELETE_HOMEWORK_SUCCESS = \"STUDENT_DELETE_HOMEWORK_SUCCESS\";\r\n//老师修改任务\r\nexport const TEACHER_UPDATE_TASK = \"TEACHER_UPDATE_TASK\";\r\nexport const TEACHER_UPDATE_TASK_SUCCESS = \"TEACHER_UPDATE_TASK_SUCCESS\";\r\nexport const TEACHER_UPDATE_TASK_FAILED = \"TEACHER_UPDATE_TASK_FAILED\";\r\n//老师批量下载作业\r\nexport const TEACHER_DOWNLOAD_SUBMIT = \"TEACHER_DOWNLOAD_SUBMIT\";\r\nexport const TEACHER_DOWNLOAD_SUBMIT_SUCCESS = \"TEACHER_DOWNLOAD_SUBMIT_SUCCESS\";\r\n//老师删除选课学生\r\nexport const TEACHER_DELETE_STUDENT = \"TEACHER_DELETE_STUDENT\";\r\nexport const TEACHER_DELETE_STUDENT_SUCCESS = \"TEACHER_DELETE_STUDENT_SUCCESS\";\r\n\r\n//老师为学生添加课程\r\nexport const TEACHER_ADD_STUDENT = \"TEACHER_ADD_STUDENT\";\r\nexport const TEACHER_ADD_STUDENT_SUCCESS = \"TEACHER_ADD_STUDENT_SUCCESS\";\r\n\r\n\r\n\r\n//管理员\r\n\r\n//管理员的实验课程页面\r\nexport const ADMIN_QUERY_LABCOURSE = \"ADMIN_QUERY_LABCOURSE\";\r\nexport const ADMIN_QUERY_LABCOURSE_SUCCESS = \"ADMIN_QUERY_LABCOURSE_SUCCESS\";\r\n//管理员清除作业产生压缩包\r\nexport const ADMIN_CLEAR_DATA = \"ADMIN_CLEAR_DATA\";\r\n//管理员发布公告\r\nexport const ADMIN_RELEASE_ANNOUNCE = \"ADMIN_RELEASE_ANNOUNCE\";\r\nexport const ADMIN_RELEASE_ANNOUNCE_SUCCESS = \"ADMIN_RELEASE_ANNOUNCE_SUCCESS\";\r\n//删除公告\r\nexport const ADMIN_DELETE_ANNOUNCE = \"ADMIN_DELETE_ANNOUNCE\";\r\nexport const ADMIN_DELETE_ANNOUNCE_SUCCESS = \"ADMIN_DELETE_ANNOUNCE_SUCCESS\";\r\n//编辑公告\r\nexport const ADMIN_EDIT_ANNOUNCE = \"ADMIN_EDIT_ANNOUNCE\";\r\nexport const ADMIN_EDIT_ANNOUNCE_SUCCESS = \"ADMIN_EDIT_ANNOUNCE_SUCCESS\";\r\n//添加课程\r\nexport const ADMIN_ADD_LABCOURSE = \"ADMIN_ADD_LABCOURSE\";\r\nexport const ADMIN_ADD_LABCOURSE_SUCCESS = \"ADMIN_ADD_LABCOURSE_SUCCESS\";\r\n//删除课程\r\nexport const ADMIN_DELETE_LABCOURSE = \"ADMIN_DELETE_LABCOURSE\";\r\nexport const ADMIN_DELETE_LABCOURSE_SUCCESS = \"ADMIN_DELETE_LABCOURSE_SUCCESS\";\r\n//导入\r\nexport const ADMIN_IMPORT_LABCOURSE = \"ADMIN_IMPORT_LABCOURSE\";\r\nexport const ADMIN_IMPORT_LABCOURSE_SUCCESS = \"ADMIN_IMPORT_LABCOURSE_SUCCESS\";\r\n//更新\r\nexport const ADMIN_UPDATE_LABCOURSE = \"ADMIN_UPDATE_LABCOURSE\";\r\nexport const ADMIN_UPDATE_LABCOURSE_SUCCESS = \"ADMIN_UPDATE_LABCOURSE_SUCCESS\";\r\n//学生课程\r\nexport const ADMIN_QUERY_STUDENTCOURSE = \"ADMIN_QUERY_STUDENTCOURSE\";\r\nexport const ADMIN_QUERY_STUDENTCOURSE_SUCCESS = \"ADMIN_QUERY_STUDENTCOURSE_SUCCESS\";\r\n//删除学生课程\r\nexport const DELETE_STUDENTCOURSE = \"ADMIN_DELETE_STUDENTCOURSE\";\r\nexport const DELETE_STUDENTCOURSE_SUCCESS = \"ADMIN_DELETE_STUDENTCOURSE_SUCCESS\";\r\n\r\n//管理员删除教师课程\r\nexport const ADMIN_DELETE_TEACHERCOURSES = \"ADMIN_DELETE_TEACHERCOURSES\";\r\nexport const ADMIN_DELETE_TEACHERCOURSES_SUCCESS = \"ADMIN_DELETE_TEACHERCOURSES_SUCCESS\";\r\n\r\n","import * as constants from \"../../constants/actionTypes\";\r\n\r\nexport const fetchAdministratorData = args => ({\r\n    type: constants.FETCH_ADMINISTRATOR_DATA,\r\n    args\r\n});\r\nexport const addNewAdmin = args => ({\r\n    type: constants.ADD_NEW_ADMIN,\r\n    args\r\n});\r\nexport const modifyAdmin = args => ({\r\n    type: constants.MODIFY_ADMIN,\r\n    args\r\n});\r\nexport const fetchTeacherData = args => ({\r\n    type: constants.FETCH_TEACHER_RES,\r\n    args\r\n});\r\nexport const addNewTeacher = args => ({\r\n    type: constants.ADD_NEW_TEACHER,\r\n    args\r\n});\r\nexport const deleteTeacher = args => ({\r\n    type: constants.DELETE_TEACHER,\r\n    args\r\n});\r\nexport const modifyTeacher = args => ({\r\n    type: constants.MODIFY_TEACHER,\r\n    args\r\n});\r\nexport const searchTeacher = args => ({\r\n    type: constants.SEARCH_TEACHER,\r\n    args\r\n});\r\nexport const fetchStudentData = args => ({\r\n    type: constants.FETCH_STUDENT_DATA,\r\n    args\r\n});\r\nexport const addNewStudent = args => ({\r\n    type: constants.ADD_NEW_STUDENT,\r\n    args\r\n});\r\nexport const deleteStudent = args => ({\r\n    type: constants.DELETE_STUDENT,\r\n    args\r\n});\r\nexport const modifyStudent = args => ({\r\n    type: constants.MODIFY_STUDENT,\r\n    args\r\n});\r\nexport const searchStudent = args => ({\r\n    type: constants.SEARCH_STUDENT,\r\n    args\r\n});\r\nexport const importUser = args => ({\r\n    type: constants.IMPORT_USER,\r\n    args\r\n});\r\nexport const fetchRegisterUserData = args => ({\r\n    type: constants.FETCH_REGISTER_DATA,\r\n    args\r\n});\r\nexport const agreeRegister = args => ({\r\n    type: constants.AGREE_REGISTER,\r\n    args\r\n});\r\nexport const deleteRegisterUser = args => ({\r\n    type: constants.DELETE_REGISTER_USER,\r\n    args\r\n});\r\nexport const fetchAdminResourceData = args => ({\r\n    type: constants.FETCH_ADMIN_RESOURCE_DATA,\r\n    args\r\n});\r\nexport const deleteResourceData = args => ({\r\n    type: constants.DELETE_RESOURCE_DATA,\r\n    args\r\n});\r\nexport const importResource = args => ({\r\n    type: constants.IMPORT_RESOURCE,\r\n    args\r\n});\r\nexport const fetchAdminSoftwareData = args => ({\r\n    type: constants.FETCH_ADMIN_SOFTWARE_DATA,\r\n    args\r\n});\r\nexport const deleteSoftwareData = args => ({\r\n    type: constants.DELETE_SOFTWARE_DATA,\r\n    args\r\n});\r\nexport const searchResourceData = args => ({\r\n    type: constants.SEARCH_RESOURCE_DATA,\r\n    args\r\n});\r\nexport const searchSoftwareData = args => ({\r\n    type: constants.SEARCH_SOFTWARE_DATA,\r\n    args\r\n});\r\nexport const importSoftware = args => ({\r\n    type: constants.IMPORT_SOFTWARE,\r\n    args\r\n});\r\nexport const modifyParam = args => ({\r\n    type: constants.MODIFY_PARAM,\r\n    args\r\n})\r\n//重置密码\r\nexport const resetPassword = args => ({\r\n    type: constants.RESET_PASSWORD,\r\n    args\r\n})\r\n\r\n\r\n//morning\r\nexport const adminQueryLabCourse = args => ({\r\n    type: constants.ADMIN_QUERY_LABCOURSE,\r\n    args,\r\n});\r\nexport const adminClearData = () => ({\r\n    type: constants.ADMIN_CLEAR_DATA\r\n});\r\nexport const releaseAnnounce = args => ({\r\n    type: constants.ADMIN_RELEASE_ANNOUNCE,\r\n    args,\r\n});\r\nexport const deleteAnnounce = announceId => ({\r\n    type: constants.ADMIN_DELETE_ANNOUNCE,\r\n    announceId\r\n});\r\nexport const addLabCourse = args => ({\r\n    type: constants.ADMIN_ADD_LABCOURSE,\r\n    args\r\n});\r\nexport const deleteLabCourse = args => ({\r\n    type: constants.ADMIN_DELETE_LABCOURSE,\r\n    args\r\n});\r\nexport const importLabCourse = args => ({\r\n    type: constants.ADMIN_IMPORT_LABCOURSE,\r\n    args\r\n});\r\nexport const updateLabCourse = args => ({\r\n    type: constants.ADMIN_UPDATE_LABCOURSE,\r\n    args\r\n});\r\nexport const queryStudentCourse = args =>({\r\n    type : constants.ADMIN_QUERY_STUDENTCOURSE,\r\n    args\r\n});\r\nexport const deleteStudentCourse = args =>({\r\n    type: constants.DELETE_STUDENTCOURSE,\r\n    args\r\n});\r\nexport const deleteTeacherCourses= args =>({\r\n    type: constants.ADMIN_DELETE_TEACHERCOURSES,\r\n    args\r\n});\r\nexport const editAnnounce= args =>({\r\n    type: constants.ADMIN_EDIT_ANNOUNCE,\r\n    args\r\n});\r\n","import {notification} from \"antd\";\r\nimport CryptoJS from \"crypto-js\";\r\n//密钥\r\nconst key = CryptoJS.enc.Utf8.parse(\"GeEk_1s_AwEs0Me!\");\r\n//密钥偏移量\r\nconst iv = CryptoJS.enc.Utf8.parse('ImH@ckErabcdefgh');\r\n\r\nexport const random = (lower, upper) => {\r\n    return Math.floor(Math.random() * (upper - lower)) + lower;\r\n};\r\n\r\nexport const scrollAnimation = (currentY = 0, targetY) => {\r\n    let needScrollTop = targetY - currentY;\r\n    let _currentY = currentY;\r\n    setTimeout(() => {\r\n        // 一次调用滑动帧数，每次调用会不一样\r\n        const dist = Math.ceil(needScrollTop / 10);\r\n        _currentY += dist;\r\n        window.scrollTo(_currentY, currentY);\r\n        // 如果移动幅度小于十个像素，直接移动，否则递归调用，实现动画效果\r\n        if (needScrollTop > 10 || needScrollTop < -10) {\r\n            scrollAnimation(_currentY, targetY)\r\n        } else {\r\n            window.scrollTo(_currentY, targetY)\r\n        }\r\n    }, 1)\r\n};\r\n\r\nexport const openNotification = (message, description = \" \") => {\r\n    notification.open({\r\n        message,\r\n        description,\r\n        placement: \"bottomRight\",\r\n        duration: \"2\"\r\n    });\r\n};\r\n\r\nexport const checkEmail = (str=null) => {\r\n    const pattern = /^([a-zA-Z0-9]+[_|_|.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|_|.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\r\n    return pattern.test(str);\r\n};\r\n\r\nexport const isChinese= (str=null) => {\r\n    const pattern = /[\\u4e00-\\u9fa5]/;\r\n    return pattern.test(str);\r\n};\r\n\r\nexport const checkNumber = (str=null) => {\r\n    const pattern = /^[0-9]*$/;\r\n    return pattern.test(str)\r\n};\r\n\r\nexport const checkNumAndEng = (str=null) => {\r\n    const pattern = /^[a-zA-Z][a-zA-Z0-9_]{5,15}$/;\r\n    return pattern.test(str);\r\n};\r\n\r\nexport const browserRedirect = () => {\r\n    const sUserAgent = navigator.userAgent.toLowerCase();\r\n    const bIsIpad = sUserAgent.match(/ipad/i) === \"ipad\";\r\n    const bIsIphoneOs = sUserAgent.match(/iphone os/i) === \"iphone os\";\r\n    const bIsMidp = sUserAgent.match(/midp/i) === \"midp\";\r\n    const bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) === \"rv:1.2.3.4\";\r\n    const bIsUc = sUserAgent.match(/ucweb/i) === \"ucweb\";\r\n    const bIsAndroid = sUserAgent.match(/android/i) === \"android\";\r\n    const bIsCE = sUserAgent.match(/windows ce/i) === \"windows ce\";\r\n    const bIsWM = sUserAgent.match(/windows mobile/i) === \"windows mobile\";\r\n    if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {\r\n        return \"mobile\";\r\n    } else {\r\n        return \"pc\";\r\n    }\r\n};\r\n//加密方法\r\nexport const Encrypto = str => {\r\n    let srcs = CryptoJS.enc.Utf8.parse(str);\r\n    let encrypted = CryptoJS.AES.encrypt(\r\n        srcs,\r\n        key,\r\n        {\r\n            iv,\r\n            mode: CryptoJS.mode.CBC,\r\n            padding: CryptoJS.pad.Pkcs7\r\n        }\r\n    );\r\n    return encrypted.ciphertext.toString().toUpperCase();\r\n};\r\n//解密方法\r\nexport const Decrypt = str => {\r\n    let encryptedHexStr = CryptoJS.enc.Hex.parse(str);\r\n    let srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);\r\n    let decrypt = CryptoJS.AES.decrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\r\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n    return decryptedStr.toString();\r\n};\r\n\r\n//对象转FormData对象\r\n\r\n//获取数组中对象的属性\r\nexport const GetArrayProps= (array, key) => {\r\n    let key0 = key || \"value\";\r\n    let res = [];\r\n    if (array) {\r\n        array.forEach(function(t) {\r\n            res.push(t[key0]);\r\n        });\r\n    }\r\n    return res;\r\n};\r\n\r\n//绑定键盘事件\r\nexport const OnKeyDown = e => {\r\n    e.onkeydown = function (event) {\r\n        const code = event.keyCode;\r\n        if (code === 13) {\r\n            e.focus();\r\n        }\r\n    }\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Table, Input, Modal, Dropdown, Menu, Select, Upload, Icon } from 'antd';\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nimport \"../../static/style/admin.scss\";\r\nimport {openNotification} from \"../../utils/commonFunction\";\r\nconst { Search } = Input;\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\nconst StudentInformation = props => {\r\n    const {\r\n        total,\r\n        adminStudentData,\r\n        handleStudentData,\r\n        handleAddStudent,\r\n        handleDeleteStudent,\r\n        handleModifyStudent,\r\n        handleSearchAdminStudent,\r\n        handleImportUser,\r\n        addStudentFlag,\r\n        temp,\r\n        modifyStudentTemp,\r\n        searchFlag,\r\n        resetPassword,\r\n        userId_i,\r\n        addVisible\r\n    } = props;\r\n    const [id, setId] = useState(\"\");\r\n    const isEditing = record => record.id === id;\r\n    const userId = useRef();\r\n    const userName = useRef();\r\n    const phone = useRef();\r\n    const academy = useState();\r\n    const grade = useRef();\r\n    const discipline = useRef();\r\n    const cls = useRef();\r\n    const columns = [\r\n        {\r\n            // width: '6.5rem',\r\n            key: '1',\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n            editable: true\r\n        },\r\n        {\r\n            // width: '5rem',\r\n            key: '2',\r\n            title: '学生姓名',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={userName} defaultValue={record.userName} />\r\n                ):(\r\n                    <span>{record.userName}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '年级',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={grade} defaultValue={record.grade} />\r\n                ):(\r\n                    <span>{record.grade}</span>\r\n                )\r\n            },\r\n            editable: true\r\n\r\n        },\r\n        {\r\n            // width: '7rem',\r\n            key: '4',\r\n            title: '学院',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={academy} defaultValue={record.academy} />\r\n                ):(\r\n                    <span>{record.academy}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            // width: '7rem',\r\n            key: '5',\r\n            title: '专业',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={discipline} defaultValue={record.discipline} />\r\n                ):(\r\n                    <span>{record.discipline}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            // width: '6rem',\r\n            key: '6',\r\n            title: '班级',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={cls} defaultValue={record.cls} />\r\n                ):(\r\n                    <span>{record.cls}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            // width: '6.5rem',\r\n            key: '7',\r\n            title: '电话',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={phone} defaultValue={record.phone} />\r\n                ):(\r\n                    <span>{record.phone}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '8',\r\n            title: '性别',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Dropdown overlay={menu}>\r\n                        <Button style={{ padding: \"0 20px\" }}>{sex}</Button>\r\n                    </Dropdown>\r\n                ):(\r\n                    <span>{record.sex}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            // width: '6rem',\r\n            key: '9',\r\n            title: '注册时间',\r\n            dataIndex: 'registerDate',\r\n            editable: true,\r\n        },\r\n        {\r\n            key: '10',\r\n            title: '',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <a\r\n                        onClick={\r\n                            () => {\r\n                                handleModifyStudent({\r\n                                    userId: record.userId,\r\n                                    userName: userName.current.state.value,\r\n                                    grade: grade.current.state.value,\r\n                                    academy: academy.current.state.value,\r\n                                    discipline: discipline.current.state.value,\r\n                                    cls: cls.current.state.value,\r\n                                    phone: phone.current.state.value,\r\n                                    sex\r\n                                });\r\n                                setId(\"\")\r\n                            }\r\n                        }\r\n                    >\r\n                        保存\r\n                    </a>\r\n                ) : (\r\n                    <a\r\n                        onClick={ () => setId(record.id)}\r\n                    >\r\n                        修改\r\n                    </a>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: '11',\r\n            title: '',\r\n            dataIndex: 'resetPassword',\r\n            render: (text, record) => {\r\n                return (<a\r\n                            onClick={() => {resetPassword({'id': record.userId, 'userId': userId_i})}}\r\n                        >\r\n                                重置密码\r\n                        </a>)\r\n\r\n            }\r\n        }\r\n    ];\r\n    const $columns = columns.map(el => {\r\n        if (!el.editable) {\r\n            return el;\r\n        }\r\n        return {\r\n            ...el,\r\n            onCell: record => ({\r\n                record,\r\n                dataIndex: el.dataIndex,\r\n                title: el.title,\r\n                editing: isEditing(record),\r\n            })\r\n        }\r\n    });\r\n    const [addFlag, changeAddFlag] = useState(false);\r\n    const [$selectedRowKeys, changeSelectedRowKeys] = useState([]);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const [sex, setSex] = useState(\"男\");\r\n    const [list, setList] = useState([]);\r\n    const [file, setFile ] = useState();\r\n    const [value, setValue] = useState(\"\");\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [deleteBtn, setDeleteBtn ] = useState(true);\r\n    let flag = \"userName\";\r\n    function onClick(e) {\r\n        setSex(e.key);\r\n    }\r\n    const clearCheck = () => {\r\n        setSelectedRowKeys([])\r\n    };\r\n    const menu = (\r\n        <Menu onClick={onClick}>\r\n            <Menu.Item style={{ textAlign: \"center\" }} key=\"男\">男</Menu.Item>\r\n            <Menu.Item style={{ textAlign: \"center\" }} key=\"女\">女</Menu.Item>\r\n        </Menu>\r\n    );\r\n    useEffect(() => {\r\n        handleStudentData(\r\n            presentPage === 1 ?\r\n                {page: 1, type: \"student\"} :\r\n                (Math.ceil(total / 10) > presentPage ?\r\n                        {page: presentPage, type: \"student\"} :\r\n                        {page: presentPage - 1, type: \"student\"}\r\n                ));\r\n    },[temp, modifyStudentTemp]);\r\n    useEffect(() => {\r\n        changeAddFlag(false);\r\n    },[addStudentFlag]);\r\n    useEffect(() => {\r\n        changeAddFlag(addVisible)\r\n    }, [addVisible])\r\n    return (\r\n        <>\r\n            <div className=\"adminTop\">\r\n                <Button\r\n                    onClick={() => changeAddFlag(true)}\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    icon={\"plus\"}\r\n                >\r\n                    添加学生\r\n                </Button>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    icon={\"close\"}\r\n                    onClick={\r\n                        () => {\r\n                            handleDeleteStudent({list: list})\r\n                        }\r\n                    }\r\n                >\r\n                    删除学生\r\n                </Button>\r\n                <Upload\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    name={\"file\"}\r\n                    beforeUpload={\r\n                        (file, FileList) => {\r\n                            setFile(file);\r\n                        }\r\n                    }\r\n                    customRequest={\r\n                        () => {\r\n                            handleImportUser({\r\n                                file\r\n                            })\r\n                        }\r\n                    }\r\n                    showUploadList={false}\r\n                >\r\n                    <Button>\r\n                        <Icon type=\"upload\" /> 批量导入学生\r\n                    </Button>\r\n                </Upload>\r\n                <InputGroup\r\n                    compact\r\n                    style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\", marginLeft: \"0.5rem\"}}\r\n                >\r\n                    <Select\r\n                        defaultValue=\"userName\"\r\n                        onChange={\r\n                            value => flag = value\r\n                        }\r\n                    >\r\n                        <Option value=\"userName\">姓名</Option>\r\n                        <Option value=\"userId\">学号</Option>\r\n                        <Option value=\"grade\">年级</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder={\"请输入搜索内容\"}\r\n                        onSearch={\r\n                            value => {\r\n                                handleSearchAdminStudent({\r\n                                    page: 1,\r\n                                    value,\r\n                                    type: \"student\",\r\n                                    flag: flag\r\n                                });\r\n                                setValue(value);\r\n                            }\r\n                        }\r\n                        enterButton\r\n                        style={{width: \"16rem\"}}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n            <Table\r\n                tableLayout={\"fixed\"}\r\n                rowKey={record => record.id}\r\n                size={\"middle\"}\r\n                columns={ $columns }\r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        const userId = selectedRows.map(el => {\r\n                            return el.userId;\r\n                        });\r\n                        setList(userId);\r\n                        changeSelectedRowKeys(userId);\r\n                        setSelectedRowKeys(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    },\r\n                }}\r\n                dataSource={ Array.from(adminStudentData)}\r\n                pagination={{\r\n                    total,\r\n                    pageSize: 10,\r\n                    defaultCurrent: 1,\r\n                    current: presentPage,\r\n                    onChange: e => {\r\n                        !searchFlag ?\r\n                        handleStudentData({\r\n                            page: e,\r\n                            type: \"student\"\r\n                        }) :\r\n                            handleSearchAdminStudent({\r\n                                page: e,\r\n                                value,\r\n                                type: \"student\",\r\n                                flag: flag\r\n                            });\r\n                        setPresentPage(e);\r\n                        clearCheck();\r\n                    }\r\n                }}\r\n            />\r\n            {/* 添加学生 */}\r\n            <Modal\r\n                destroyOnClose={true}\r\n                title={\"添加学生\"}\r\n                visible={addFlag}\r\n                onCancel={\r\n                    () => {\r\n                        changeAddFlag(!addFlag);\r\n                    }\r\n                }\r\n                okText=\"添加\"\r\n                onOk={() => {\r\n                    handleAddStudent({\r\n                        type: \"student\",\r\n                        userId: userId.current.state.value,\r\n                        userName: userName.current.state.value,\r\n                        grade: grade.current.state.value,\r\n                        academy: academy.current.state.value,\r\n                        discipline: discipline.current.state.value,\r\n                        cls: cls.current.state.value,\r\n                        phone: phone.current.state.value,\r\n                        sex,\r\n                        adminStudentData\r\n                    });\r\n                }}\r\n            >\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>学号：</label>\r\n                    <Input ref={userId} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>姓名：</label>\r\n                    <Input ref={userName} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>年级：</label>\r\n                    <Input ref={grade} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>学院：</label>\r\n                    <Input ref={academy} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>专业：</label>\r\n                    <Input ref={discipline} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>班级：</label>\r\n                    <Input ref={cls} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>电话：</label>\r\n                    <Input ref={phone} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>选择性别：</label>\r\n                    <Dropdown overlay={menu}>\r\n                        <Button style={{ padding: \"0 20px\" }}>{sex}</Button>\r\n                    </Dropdown>\r\n                </div>\r\n            </Modal>\r\n            <style>\r\n                {\r\n                    `\r\n                    ._wrap {\r\n                        margin-bottom: 20px;\r\n                    }\r\n                    .ant-input {\r\n                        width: 80%;\r\n                    }\r\n                    input {\r\n                        margin: 20px;\r\n                    }\r\n                    `\r\n                }\r\n            </style>\r\n        </>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n    state => ({\r\n        total: state.getIn([\"admin\", \"userManage\", \"studentTotal\"]),\r\n        adminStudentData: state.getIn([\"admin\", \"userManage\", \"adminStudentData\"]),\r\n        addStudentFlag: state.getIn([\"admin\", \"userManage\", \"addStudentFlag\"]),\r\n        temp: state.getIn([\"admin\", \"userManage\", \"temp\"]),\r\n        modifyStudentTemp: state.getIn([\"admin\", \"userManage\", \"modifyStudentTemp\"]),\r\n        studentPage: state.getIn([\"admin\", \"userManage\", \"studentPage\"]),\r\n        searchFlag: state.getIn([\"admin\", \"userManage\", \"studentSearchFlag\"]),\r\n        userId_i: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        addVisible: state.getIn([\"admin\", \"userManage\", \"addVisible\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleStudentData(args) {\r\n            dispatch(admin.fetchStudentData(args));\r\n        },\r\n        handleAddStudent(args) {\r\n            if (args.userId.length < 6 || args.userId.length > 30){\r\n                openNotification(\"请输入6-30位的学号\")\r\n            } else if (args.userName.length < 2 || args.userName.length > 10) {\r\n                openNotification(\"请输入2-10位的名字\")\r\n            } else if (args.grade.length !== 4) {\r\n                openNotification(\"请输入4位数的年级\")\r\n            } else if (args.cls.length < 2 || args.cls.length > 30){\r\n                openNotification(\"请输入2-10位的班级号\")\r\n            } else if (args.academy.length > 30) {\r\n                openNotification(\"学院字数大于30，不符合规定\")\r\n            } else if (args.discipline.length > 30) {\r\n                openNotification(\"专业字数大于30，不符合规定\")\r\n            } else if (args.phone.length < 6 || args.phone.length > 30){\r\n                openNotification(\"请输入6-30位的电话号码\")\r\n            } else {\r\n                dispatch(admin.addNewStudent(args));\r\n            }\r\n        },\r\n        handleDeleteStudent(args) {\r\n            dispatch(admin.deleteStudent(args))\r\n        },\r\n        handleModifyStudent(args) {\r\n            dispatch(admin.modifyStudent(args))\r\n        },\r\n        handleSearchAdminStudent(args) {\r\n            dispatch(admin.searchStudent(args))\r\n        },\r\n        handleImportUser(args) {\r\n            dispatch(admin.importUser(args))\r\n        },\r\n        resetPassword(args) {\r\n            dispatch(admin.resetPassword(args))\r\n        }\r\n    })\r\n)(StudentInformation);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Table } from 'antd';\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nimport \"../../static/style/admin.scss\";\r\nconst RegisterUser = props => {\r\n    const { total,\r\n        adminRegisterUserData,\r\n        handleRegisterUserData,\r\n        userId,\r\n        handleAgreeRegister,\r\n        handleDeleteRegisterUser,\r\n        temp\r\n    } = props;\r\n    const columns = [\r\n        {\r\n            key: '1',\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n        },\r\n        {\r\n            key: '2',\r\n            title: '学生姓名',\r\n            dataIndex: 'userName'\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '年级',\r\n            dataIndex: 'grade'\r\n        },\r\n        {\r\n            key: '4',\r\n            title: '学院',\r\n            dataIndex: 'academy'\r\n        },\r\n        {\r\n            key: '5',\r\n            title: '专业',\r\n            dataIndex: 'discipline'\r\n        },\r\n        {\r\n            key: '6',\r\n            title: '班级',\r\n            dataIndex: 'cls'\r\n        },\r\n        {\r\n            key: '7',\r\n            title: '性别',\r\n            dataIndex: 'sex'\r\n        },\r\n        {\r\n            key: '8',\r\n            title: '电话',\r\n            dataIndex: 'phone'\r\n        },\r\n        {\r\n            key: '9',\r\n            title: '教师姓名',\r\n            dataIndex: 'teacherName',\r\n        },\r\n        {\r\n            key: '10',\r\n            title: '注册时间',\r\n            dataIndex: 'registerDate',\r\n        },\r\n        {\r\n            key: '11',\r\n            title: '授权状态',\r\n            dataIndex: 'state',\r\n            render: (text, record) => <span style={text===\"yes\"?{color: \"#000000\"}: {color: \"#FF0000\"}}>\r\n                {text===\"yes\"?text=\"已被授权\":text=\"未被授权\"}\r\n            </span>\r\n        }\r\n    ];\r\n    const [$selectedRowKeys, changeSelectedRowKeys] = useState([]);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const [list, setList] = useState([]);\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [deleteBtn, setDeleteBtn ] = useState(true);\r\n    const clearCheck = () => {\r\n        setSelectedRowKeys([])\r\n    };\r\n    useEffect(() => {\r\n        handleRegisterUserData(\r\n            presentPage === 1 ?\r\n                {page: 1, type: \"admin\"} :\r\n                (Math.ceil(total / 10) > presentPage ?\r\n                        {page: presentPage, type: \"admin\"} :\r\n                        {page: presentPage - 1, type: \"admin\"}\r\n                ));\r\n    }, [temp]);\r\n    return (\r\n        <div className={\"adminTop\"}>\r\n            <Button\r\n                disabled={deleteBtn}\r\n                style={{marginLeft: \"0.5rem\"}}\r\n                icon={\"diff\"}\r\n                onClick={\r\n                    () => {\r\n                        handleAgreeRegister({\r\n                            list: list\r\n                        })\r\n                    }\r\n                }\r\n            >\r\n                批量授权\r\n            </Button>\r\n            <Button\r\n                style={{marginLeft: \"0.5rem\"}}\r\n                disabled={deleteBtn}\r\n                icon={\"close\"}\r\n                onClick={\r\n                    () => {\r\n                        handleDeleteRegisterUser({\r\n                            list: list\r\n                        })\r\n                    }\r\n                }\r\n            >\r\n                删除用户\r\n            </Button>\r\n            <Table\r\n                tableLayout={\"fixed\"}\r\n                rowKey={record => record.id}\r\n                size={\"middle\"}\r\n                columns={ columns }\r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        const userId = selectedRows.map(el => {\r\n                            return el.userId;\r\n                        });\r\n                        setList(userId);\r\n                        changeSelectedRowKeys(userId);\r\n                        setSelectedRowKeys(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    },\r\n                }}\r\n                dataSource={Array.from(adminRegisterUserData)}\r\n                pagination={{\r\n                    total,\r\n                    pageSize: 10,\r\n                    defaultCurrent: 1,\r\n                    onChange: e => {\r\n                        handleRegisterUserData({\r\n                            page: e,\r\n                            type: \"admin\",\r\n                            userId: userId\r\n                        });\r\n                        setPresentPage(e);\r\n                        clearCheck();\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n    state => ({\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        adminRegisterUserData: state.getIn([\"admin\", \"userManage\", \"adminRegisterUserData\"]),\r\n        total: state.getIn([\"admin\", \"userManage\", \"registerUserTotal\"]),\r\n        temp: state.getIn([\"admin\", \"userManage\", \"temp\"])\r\n    }),\r\n    dispatch => ({\r\n        handleRegisterUserData(args){\r\n            dispatch(admin.fetchRegisterUserData(args));\r\n        },\r\n        handleAgreeRegister(args) {\r\n            dispatch(admin.agreeRegister(args));\r\n        },\r\n        handleDeleteRegisterUser(args) {\r\n            dispatch(admin.deleteRegisterUser(args));\r\n        }\r\n    })\r\n)(RegisterUser);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Input, Table, Button, Icon, Modal, message, Upload, Select} from \"antd\";\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\r\nconst numberReg = /[a-zA-Z0-9]{6,8}/;\r\n\r\nconst LabCourse = props => {\r\n    const {labCourses, labCourseTotal,addCourseFlag, deleteCourseFlag,importCourseFlag, userId, handleQueryLabCourse, handleAddlabCourse, handleDeletelabCourse, handleImportlabCourse} = props;\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [showImport, setShowImport] = useState(false);\r\n    const [courseName, setCourseName] = useState();\r\n    const [courseNumber, setCourseNumber] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [uploadBtn, setUploadBtn] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    useEffect(()=>{\r\n        if(Math.ceil(labCourseTotal / 10) > presentPage){\r\n            handleQueryLabCourse({ page: presentPage, userId: userId,  })\r\n        } else if(presentPage > 1) {\r\n            handleQueryLabCourse({ page: presentPage-1, userId: userId,  });\r\n        }\r\n    },[deleteCourseFlag]);\r\n    useEffect(()=>{\r\n        handleQueryLabCourse({ page: 1, userId: userId,  });\r\n        setShowAdd(false);\r\n        setPresentPage(1);\r\n    },[addCourseFlag]);\r\n    useEffect(()=>{\r\n        setShowImport(false);\r\n        handleQueryLabCourse({page: 1, userId: userId})\r\n    }, [importCourseFlag]);\r\n\r\n    const columns = [\r\n        { title: \"课程名\", dataIndex: \"courseName\", key: \"courseName\"},\r\n        { title: \"课程编号\", dataIndex: \"courseNumber\", key: \"courseNumber\"},\r\n        { title: \"发布人\", dataIndex: \"userId\", key: \"userId\"},\r\n        { title: \"发布时间\", dataIndex: \"addTime\", key: \"addTime\"},\r\n    ];\r\n    const dataSource = [...labCourses];\r\n    const uploadProps = {\r\n        beforeUpload:\r\n            file => {\r\n                fileList.push(file);\r\n                fileList.length === 1 ? setUploadBtn(true) : setUploadBtn(false);\r\n                return false\r\n            },\r\n        onRemove:\r\n            file=>{\r\n                const index = fileList.indexOf(file.originFileObj);\r\n                fileList.splice(index, 1);\r\n                fileList.length === 1 ? setUploadBtn(true) : setUploadBtn(false);\r\n            }\r\n    };\r\n    return (\r\n        <div\r\n            style={{ margin: \"0.625rem 0.625rem\" }}\r\n        >\r\n            <div\r\n                style={{ display: \"flex\", }}\r\n            >\r\n                <Button\r\n                    style={{margin: \" 0 0.625rem\"}}\r\n                    onClick = {()=>(setShowAdd(true))}\r\n                >\r\n                    <Icon type={\"plus\"} />\r\n                    添加课程\r\n                </Button>\r\n                <Button\r\n                    style={{marginRight: \"0.625rem\"}}\r\n                    disabled={deleteBtn}\r\n                    onClick={()=>\r\n                        confirm({\r\n                            title: '确认删除吗?',\r\n                            onOk() {\r\n                                handleDeletelabCourse({\r\n                                    courseIdList: selected,\r\n                                });\r\n                                setSelected([]);\r\n                                setDeleteBtn(true);\r\n                            },\r\n                            onCancel() {\r\n                            },\r\n                        })\r\n                    }\r\n                >\r\n                    <Icon type={\"delete\"} />\r\n                    删除课程\r\n                </Button>\r\n                <Button\r\n                    style={{marginRight: \"0.625rem\"}}\r\n                    onClick={()=>{\r\n                        setShowImport(true);\r\n                        setUploadBtn(false);\r\n                    }}\r\n                >\r\n                    <Icon type={\"plus-circle\"} />\r\n                    批量导入\r\n                </Button>\r\n                <div  style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\"}}>\r\n                    <Select defaultValue={\"courseName\"} style={{ width: \"5.625rem\" }}>\r\n                        <Option value={\"courseName\"}>课程名</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder=\"请输入搜索内容\"\r\n                        onSearch={(e) =>{\r\n                            Reg.test(e) ? handleQueryLabCourse({\r\n                                page: 1,\r\n                                userId: userId,\r\n                                courseName: e,\r\n                            }) : handleQueryLabCourse({\r\n                                page: 1,\r\n                                userId: userId,\r\n                                courseName: \"\",\r\n                            });\r\n                            setPresentPage(1);\r\n                        }}\r\n                        enterButton\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Table\r\n                rowKey={e=>e.id}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n                pagination={{\r\n                    total: labCourseTotal,\r\n                    current: presentPage,\r\n                    onChange: (e) => {\r\n                        handleQueryLabCourse({ page: e, userId: userId });\r\n                        setPresentPage(e);\r\n                        setSelected([]);\r\n                    }\r\n                }}\r\n                rowSelection ={{\r\n                    selectedRowKeys: selected,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        setSelected(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    }\r\n                }}\r\n            />\r\n            <Modal\r\n                title = \"添加课程\"\r\n                okText = \"添加\"\r\n                cancelText = \"取消\"\r\n                destroyOnClose={true}\r\n                visible={showAdd}\r\n                onCancel={()=>(setShowAdd(false))}\r\n                onOk={() => {\r\n                    if (courseNumber) {\r\n                        ((Reg.test(courseName) && courseName.length > 1) && numberReg.test(courseNumber)) ?\r\n                            handleAddlabCourse({\r\n                                courseName,\r\n                                courseNumber,\r\n                                userId\r\n                            }) :\r\n                            message.error(\"非法输入！\");\r\n                        setCourseNumber(\"\");\r\n                        setCourseName(\"\");\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <div>\r\n                    <div\r\n                        style={{display: \"flex\", alignItems: \"center\"}}\r\n                    >\r\n                        <label>课程名 : </label>\r\n                        <Input\r\n                            placeholder={\"输入长度在2-30位\"}\r\n                            style={{width: \"70%\", marginLeft: \"2.1875rem\"}}\r\n                            value={courseName}\r\n                            onChange={(e)=>(setCourseName(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        style={{display: \"flex\", alignItems: \"center\"}}\r\n                    >\r\n                        <label>课程编号 : </label>\r\n                        <Input\r\n                            style={{width: \"70%\", margin: \"1.25rem\"}}\r\n                            placeholder={\"输入长度在6-8位\"}\r\n                            value={courseNumber}\r\n                            onChange={(e)=>(setCourseNumber(e.target.value))}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                destroyOnClose={true}\r\n                title={\"批量导入课程\"}\r\n                visible={showImport}\r\n                okText = \"导入\"\r\n                cancelText = \"取消\"\r\n                onCancel={()=>{\r\n                    setShowImport(false);\r\n                    setFileList([]);\r\n                }}\r\n                onOk={()=>{\r\n                    const name = fileList[0].name;\r\n                    if (fileList.length !== 1) {\r\n                        message.error(\"请选择文件！\")\r\n                    } else if (name.substring(name.indexOf(\".\")+1) === \"xlsx\" ||\r\n                        name.substring(name.indexOf(\".\")+1) === \"xls\"\r\n                        ){\r\n                        message.loading(\"导入中\");\r\n                        handleImportlabCourse({\r\n                            userId,\r\n                            file: fileList\r\n                        });\r\n                        setFileList([]);\r\n                    } else {\r\n                        message.error(\"文件格式错误！\");\r\n                    }\r\n                }}\r\n            >\r\n                <Upload {...uploadProps}>\r\n                    <Button\r\n                        disabled={uploadBtn}\r\n                    >\r\n                        <Icon type={\"upload\"} />\r\n                        选择文件\r\n                    </Button>\r\n                </Upload>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n    state => ({\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        labCourses: state.getIn([\"admin\", \"labCourse\", \"labCourses\"]),\r\n        labCourseTotal: state.getIn([\"admin\", \"labCourse\", \"labCourseTotal\"]),\r\n        addCourseFlag: state.getIn([\"admin\", \"labCourse\", \"addCourseFlag\"]),\r\n        deleteCourseFlag: state.getIn([\"admin\", \"labCourse\", \"deleteCourseFlag\"]),\r\n        importCourseFlag: state.getIn([\"admin\", \"labCourse\", \"importCourseFlag\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleQueryLabCourse(args){\r\n            dispatch(admin.adminQueryLabCourse(args));\r\n        },\r\n        handleAddlabCourse(args){\r\n            dispatch(admin.addLabCourse(args))\r\n        },\r\n        handleDeletelabCourse(args) {\r\n            dispatch(admin.deleteLabCourse(args))\r\n        },\r\n        handleImportlabCourse(args) {\r\n            dispatch(admin.importLabCourse(args))\r\n        }\r\n    }),\r\n)(LabCourse);\r\n","import * as constants from \"../../constants/actionTypes\";\r\n//获取学习资料\r\nexport const fetchStudyResource = args => ({\r\n    type: constants.FETCH_STUDY_RESOURCE,\r\n    args\r\n});\r\n//获取软件资源\r\nexport const fetchSoftwareResource = args => ({\r\n    type: constants.FETCH_SOFTWARE_RESOURCE,\r\n    args\r\n});\r\n//上传学习资料\r\nexport const fetchUploadStudyRes = args => ({\r\n    type: constants.FETCH_UPLOAD_RES,\r\n    args\r\n});\r\n//获取老师学习资源\r\nexport const fetchTeacherData = args => ({\r\n    type: constants.FETCH_TEACHER_DATA,\r\n    args\r\n});\r\n//获取老师软件资源\r\nexport const fetchTeacherSoftware = args => ({\r\n    type: constants.FETCH_TEACHER_SOFTWARE,\r\n    args\r\n});\r\n//删除学习资源\r\nexport const deleteData = args => ({\r\n    type: constants.DELETE_DATA,\r\n    args\r\n});\r\n//学习资源下载次数\r\nexport const downloadResource = args => ({\r\n    type: constants.DOWNLOAD_RESOURCE,\r\n    args\r\n});\r\n//软件下载次数\r\nexport const downloadSoftware = args => ({\r\n    type: constants.DOWNLOAD_SOFTWARE,\r\n    args\r\n});\r\n//删除软件资源\r\nexport const deleteSoftware = args => ({\r\n   type: constants.DELETE_SOFTWARE,\r\n    args\r\n});\r\n//老师获取学生信息\r\nexport const fetchStudentMes = args => ({\r\n    type: constants.FETCH_STUDENT_MESSAGE,\r\n    args\r\n});\r\n\r\nexport const fetchLoadResource = args => ({\r\n    type: constants.MATERIAL_LOAD,\r\n    args\r\n});\r\n//搜索资源\r\nexport const fetchSearchValue = args => ({\r\n    type: constants.FETCH_SEARCH_VALUE,\r\n    args\r\n});\r\n\r\nexport const changeType = key => ({\r\n    type: constants.CHANGE_TYPE,\r\n    key\r\n});\r\n\r\n//教师查询课程\r\nexport const fetchSearchCourse = args => ({\r\n    type: constants.FETCH_SEARCH_COURSE,\r\n    args\r\n});\r\n\r\n//morning\r\n\r\n//所有课程\r\nexport const fetchCourse = args => ({\r\n    type: constants.QUERY_COURSE,\r\n    args,\r\n});\r\n//课程展开的任务\r\nexport const fetchCourseTask = (teacherCourseId, taskResource) =>({\r\n    type: constants.QUERY_COURSE_TASK,\r\n    teacherCourseId,\r\n    taskResource\r\n});\r\n\r\n//查询我的课程\r\nexport const queryMyCourse = args =>({\r\n    type:constants.QUERY_MY_COURSE,\r\n    args\r\n});\r\n//教师添加课程\r\nexport const teacherAddCourse = args => ({\r\n    type:constants.TEACHER_ADD_COURSE,\r\n    args\r\n});\r\n//学生添加课程\r\nexport const studentAddCourse = args => ({\r\n    type:constants.STUDENT_ADD_COURSE,\r\n    args\r\n});\r\n//学生删除课程\r\nexport const studentDeleteCourse = args => ({\r\n    type: constants.STUDENT_DELETE_COURSE,\r\n    args\r\n});\r\n//学生上传作业\r\nexport const studentUploadHomework = args => ({\r\n    type: constants.STUDENT_UPLOAD_HOMEWORK,\r\n    args\r\n});\r\n//学生查看已提交作业\r\nexport const studentQuerySubmit = args => ({\r\n    type: constants.STUDENT_QUERY_SUBMIT,\r\n    args\r\n});\r\n//学生删除已交作业\r\nexport const studentDeleteHomework = args => ({\r\n    type: constants.STUDENT_DELETE_HOMEWORK,\r\n    args\r\n});\r\n//老师删除课程\r\nexport const teacherDeleteCourse = args =>({\r\n    type: constants.TEACHER_DELETE_COURSE,\r\n    args\r\n});\r\n//老师为学生添加课程\r\nexport const teacherAddStudent = args => ({\r\n    type: constants.TEACHER_ADD_STUDENT,\r\n    args\r\n})\r\n\r\n\r\n//老师请求实验课程\r\nexport const teacherQueryCourse = args => ({\r\n    type: constants.TEACHER_QUERY_COURSE,\r\n    args\r\n});\r\n//老师发布任务\r\nexport const teacherReleaseTask = args => ({\r\n    type: constants.TEACHER_RELEASE_TASKS,\r\n    args\r\n});\r\n//老师添加教学班备注\r\nexport const teacherAddRemark = args => ({\r\n    type: constants.TEACHER_ADD_REMARK,\r\n    args\r\n});\r\n//老师删除实验任务\r\nexport const teacherDeleteTask = args => ({\r\n    type: constants.TEACHER_DELETE_TASK,\r\n    args\r\n});\r\n//老师修改实验任务\r\nexport const teacherUpdateTask = args => ({\r\n    type: constants.TEACHER_UPDATE_TASK,\r\n    args\r\n});\r\n//老师关闭/开启任务作业上传\r\nexport const teacherToggleUpload = args => ({\r\n    type: constants.TEACHER_TOGGLE_TASK_UPLOAD,\r\n    args\r\n});\r\n//老师查看已交作业名单\r\nexport const teacherQuerySubmit = data => ({\r\n    type: constants.TEACHER_QUERY_SUBMIT,\r\n    data\r\n});\r\n//老师查看未提交作业名单\r\nexport const teacherQueryUnsubmit = args => ({\r\n    type: constants.TEACHER_QUERY_UNSUBMIT,\r\n    args\r\n});\r\n//老师批量下载已经提交的作业\r\nexport const teacherDownloadSubmit = args => ({\r\n    type: constants.TEACHER_DOWNLOAD_SUBMIT,\r\n    args\r\n});\r\n//老师查看选课学生\r\nexport const teacherCheckStudent = args => ({\r\n    type: constants.TEACHER_CHECK_STUDENT,\r\n    args\r\n});\r\n//老师删除选课学生\r\nexport const teacherDeleteStudent = args => ({\r\n    type: constants.TEACHER_DELETE_STUDENT,\r\n    args\r\n});\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table, Button, Icon, Modal, Select, Input} from \"antd\";\r\nimport * as course from \"../../redux/actionCreators/resource\";\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\r\n\r\nconst TeacherCourse = props => {\r\n    const {taskTotal,teacherCourseFlag,  userId, courseResource, handleFetchCourseRes, handleDeleteTeacherCourse, handleSearchCourse} = props;\r\n    const [selected, setSelected] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState([]);\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [arr, setArr] = useState([]);\r\n    const [searchFlag, setSearchFlag] = useState(\"courseName\");\r\n    const { confirm } = Modal;\r\n    useEffect(()=>{\r\n        handleFetchCourseRes(\r\n            presentPage === 1 ?\r\n                {page: 1, userId: userId} :\r\n                (Math.ceil(taskTotal / 10) > presentPage ?\r\n                        {page: presentPage, userId: userId} :\r\n                        {page: presentPage - 1, userId: userId}\r\n                ));\r\n    },[teacherCourseFlag]);\r\n    const columns = [\r\n        { title: '实验课程', dataIndex: 'courseName', key: 'courseName' },\r\n        { title: '教学班编号', dataIndex: 'courseId', key: 'courseId' },\r\n        { title: '教学班备注', dataIndex: 'remark', key: 'remark' },\r\n        { title: '课程编号', dataIndex: 'courseNumber', key: 'courseNumber' },\r\n        { title: '课程教师', dataIndex: 'teacherName', key: 'teacherName' },\r\n        { title: '发布时间', dataIndex: 'addTime', key: 'addTime' },\r\n    ];\r\n    return (\r\n        <div\r\n            style={{margin: \"0.625rem\",}}\r\n        >\r\n            <div\r\n                style={{display: \"flex\", }}\r\n            >\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{margin: \" 0 0.625rem\"}}\r\n                    onClick={()=>confirm({\r\n                        title: '确认删除吗?',\r\n                        onOk() {\r\n                            setSelected([]);\r\n                            setDeleteBtn(true);\r\n                            selectedRow.map(e => (arr.push(e.teacherCourseId)));\r\n                            handleDeleteTeacherCourse({\r\n                                teacherCourseIdList: arr,\r\n                            });\r\n                            setArr([]);\r\n                        },\r\n                        onCancel() {\r\n                        },\r\n                    })}\r\n                >\r\n                    <Icon type={\"delete\"}/>\r\n                    删除课程\r\n                </Button>\r\n                <div  style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\"}}>\r\n                    <Select\r\n                        defaultValue={\"courseName\"}\r\n                        style={{ width: \"5.625rem\" }}\r\n                        onChange={e=>(setSearchFlag(e))}\r\n                    >\r\n                        <Option value={\"courseName\"}>课程名</Option>\r\n                        <Option value={\"teacherName\"}>教师名</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder=\"请输入搜索内容\"\r\n                        onSearch={(value) =>{\r\n                            Reg.test(value) ?\r\n                                handleSearchCourse(\r\n                                    searchFlag === \"teacherName\" ? {\r\n                                        page: 1,\r\n                                        teacherName: value,\r\n                                        course: \"\",\r\n                                        userId: userId,\r\n                                    } : {\r\n                                        page: 1,\r\n                                        teacherName: \"\",\r\n                                        course: value,\r\n                                        userId: userId\r\n                                    }\r\n                                ) : handleSearchCourse({\r\n                                        page: 1,\r\n                                        teacherName: \"\",\r\n                                        course: \"\",\r\n                                        userId: userId,\r\n                                });\r\n                            setPresentPage(1);\r\n                        }}\r\n                        enterButton\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Table\r\n                rowKey={record => record.teacherCourseId}\r\n                columns={columns}\r\n                dataSource={courseResource}\r\n                pagination={{\r\n                    total: taskTotal,\r\n                    current: presentPage,\r\n                    onChange: e => {\r\n                        handleFetchCourseRes({ page: e, userId: userId });\r\n                        setSelected([]);\r\n                        setPresentPage(e);\r\n                    },\r\n                }}\r\n\r\n                rowSelection ={{\r\n                    selectedRowKeys: selected,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        setSelectedRow(selectedRows);\r\n                        setSelected(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n    state => ({\r\n        taskTotal: state.getIn([\"course\", \"taskTotal\"]),\r\n        courseResource: state.getIn([\"course\", \"courseResource\"]),\r\n        courseTask: state.getIn([\"course\", \"courseTask\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        teacherCourseFlag: state.getIn([\"admin\", \"labCourse\", \"teacherCourseFlag\"])\r\n    }),\r\n    dispatch => ({\r\n        handleFetchCourseRes(args){\r\n            dispatch(course.fetchCourse(args));\r\n        },\r\n        handleSearchCourse(args){\r\n            dispatch(course.fetchSearchCourse(args));\r\n        },\r\n        handleDeleteTeacherCourse(args){\r\n            dispatch(admin.deleteTeacherCourses(args))\r\n        },\r\n    }),\r\n)(TeacherCourse);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table, Button, Modal, Icon, Select, Input} from \"antd\";\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\r\nconst StudentCourse = props => {\r\n    const { studentCourseFlag, studentCourses, studentCourseTotal, handleQueryStudentCourse, handleDeleteStudentCourse } = props;\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [searchFlag, setSearchFlag] = useState(\"studentName\");\r\n    const [presentPage, setPresentPage] =useState(1);\r\n    const [arr, setArr] = useState([]);\r\n    const [selected, setSelected] = useState();\r\n    const [selectedKey, setSelectedKey] = useState();\r\n    useEffect(()=>{\r\n        handleQueryStudentCourse(\r\n            presentPage === 1 ?\r\n                {page: 1, studentName: \"\", studentId: \"\"} :\r\n                (Math.ceil(studentCourseTotal / 10) > presentPage ?\r\n                        {page: presentPage, studentName: \"\", studentId: \"\",} :\r\n                        {page: presentPage - 1, studentName: \"\", studentId: \"\",}\r\n                ));\r\n    },[studentCourseFlag]);\r\n    const columns = [\r\n        { title: \"课程名\", dataIndex: \"courseName\", key: \"courseName\"},\r\n        { title: \"课程编号\", dataIndex: \"courseNumber\", key: \"courseNumber\"},\r\n        { title: \"学号\", dataIndex: \"studentId\", key: \"studentId\" },\r\n        { title: \"学生姓名\", dataIndex: \"studentName\", key: \"studentName\"},\r\n        { title: \"添加时间\", dataIndex: \"addTime\", key: \"addTime\"},\r\n    ];\r\n    return (\r\n        <div style={{ margin: \"0.625rem\" }}>\r\n            <div style={{display: \"flex\"}}>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{margin: \"0 0.625rem\"}}\r\n                    onClick={()=>confirm({\r\n                        title: '确认删除吗?',\r\n                        onOk(){\r\n                            selected.map(e=> (\r\n                                arr.push(e.studentCourseId)\r\n                            ));\r\n                            handleDeleteStudentCourse({\r\n                                studentCourseIdList: arr,\r\n                            });\r\n                            setSelectedKey([]);\r\n                            setArr([]);\r\n                            setDeleteBtn(true);\r\n                        },\r\n                        onCancel(){\r\n\r\n                        }\r\n\r\n                    })}\r\n                >\r\n                    <Icon type={\"delete\"} />\r\n                    删除课程\r\n                </Button>\r\n                <div  style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\"}}>\r\n                    <Select\r\n                        defaultValue={\"studentName\"}\r\n                        style={{ width: \"4.375rem\" }}\r\n                        onChange={e=>setSearchFlag(e)}\r\n                    >\r\n                        <Option value={\"studentName\"}>姓名</Option>\r\n                        <Option value={\"studentId\"}>学号</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder=\"请输入搜索内容\"\r\n                        onSearch={(value) =>{\r\n                            Reg.test(value) ?\r\n                                handleQueryStudentCourse(\r\n                                    searchFlag === \"studentName\" ? {\r\n                                        page: 1,\r\n                                        studentName: value,\r\n                                        studentId: \"\",\r\n                                    } : {\r\n                                        page: 1,\r\n                                        studentName: \"\",\r\n                                        studentId: value,\r\n                                    }\r\n                                ) :\r\n                                handleQueryStudentCourse({\r\n                                    page: 1,\r\n                                    studentName: \"\",\r\n                                    studentId: \"\",\r\n                                });\r\n                            setPresentPage(1);\r\n                        }}\r\n                        enterButton\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Table\r\n                rowKey={e=>e.studentCourseId}\r\n                dataSource={[...studentCourses]}\r\n                columns={columns}\r\n                pagination={{\r\n                    current: presentPage,\r\n                    total: studentCourseTotal,\r\n                    onChange: (e) => {\r\n                        handleQueryStudentCourse({ page: e, studentName: \"\", studentId: \"\",});\r\n                        setPresentPage(e);\r\n                        setSelectedKey([]);\r\n                    }\r\n                }}\r\n                rowSelection ={{\r\n                    selectedRowKeys: selectedKey,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        setSelected(selectedRows);\r\n                        setSelectedKey(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        studentCourseFlag: state.getIn([\"admin\", \"labCourse\", \"studentCourseFlag\"]),\r\n        studentCourses: state.getIn([\"admin\", \"labCourse\", \"studentCourses\"]),\r\n        studentCourseTotal: state.getIn([\"admin\", \"labCourse\", \"studentCourseTotal\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleQueryStudentCourse(args){\r\n            dispatch(admin.queryStudentCourse(args))\r\n        },\r\n        handleDeleteStudentCourse(args){\r\n            dispatch(admin.deleteStudentCourse(args))\r\n        }\r\n\r\n    }),\r\n)(StudentCourse);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button, Table, Input, Select, Upload, Icon } from 'antd';\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nimport * as resource from \"../../redux/actionCreators/resource\";\r\nimport \"../../static/style/admin.scss\";\r\nconst { Search } = Input;\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\n\r\nconst mapStateToState = state => ({\r\n    resourceData: state.getIn([\"admin\", \"resourceManage\", \"resourceData\"]),\r\n    total: state.getIn([\"admin\", \"resourceManage\", \"resourceTotal\"]),\r\n    userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n    page: state.getIn([\"admin\", \"resourceManage\", \"resourcePage\"]),\r\n    temp: state.getIn([\"admin\", \"resourceManage\", \"temp\"]),\r\n    searchFlag: state.getIn([\"admin\", \"resourceManage\", \"resourceSearchFlag\"]),\r\n    learningDataTemp: state.getIn([\"resource\", \"resource\", \"learningDataTemp\"])\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleAdminResourceData(args) {\r\n        dispatch(admin.fetchAdminResourceData(args))\r\n    },\r\n    handleDeleteResource(args) {\r\n        dispatch(admin.deleteResourceData(args))\r\n    },\r\n    handleSearchResourceData(args) {\r\n        dispatch(admin.searchResourceData(args));\r\n    },\r\n    handleImportResource(args) {\r\n        dispatch(admin.importResource(args));\r\n    },\r\n    handleDownloadResource(args) {\r\n        dispatch(resource.downloadResource(args));\r\n    }\r\n});\r\n\r\nconst StudyInformation = props => {\r\n    const {\r\n        temp,\r\n        learningDataTemp,\r\n        page,\r\n        total,\r\n        handleAdminResourceData,\r\n        handleDeleteResource,\r\n        handleSearchResourceData,\r\n        handleImportResource,\r\n        handleDownloadResource,\r\n        resourceData,\r\n        userId,\r\n        searchFlag,\r\n    } = props;\r\n    const columns = [\r\n        {\r\n            key: '1',\r\n            title: '资料名称',\r\n            dataIndex: 'title',\r\n        },\r\n        {\r\n            key: '2',\r\n            title: '大小',\r\n            dataIndex: 'size',\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '上传人',\r\n            dataIndex: 'userName',\r\n        },\r\n        {\r\n            key: '4',\r\n            title: '上传时间',\r\n            dataIndex: 'addTime',\r\n        },\r\n        {\r\n            key: '5',\r\n            title: '下载次数',\r\n            dataIndex: 'downloadNum'\r\n        },\r\n        {\r\n            key: '6',\r\n            title: '资料下载',\r\n            dataIndex: \"url\",\r\n            render: (text, record) => (\r\n                <a\r\n                    download={record.title}\r\n                    href={{text}.text}\r\n                    onClick={\r\n                        () => {\r\n                            handleDownloadResource({\r\n                                id: record.id,\r\n                                type: \"material\"\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    下载\r\n                </a>\r\n            )\r\n        }\r\n    ];\r\n    const [$selectedRowKeys, changeSelectedRowKeys] = useState([]);\r\n    const [list, setList] = useState([]);\r\n    const [current, setCurrent ] = useState(1);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const [file, setFile ] = useState();\r\n    const [value, setValue ] = useState(\"\");\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [deleteBtn, setDeleteBtn ] = useState(true);\r\n    let flag = \"resourceName\";\r\n    const clearCheck = () => {\r\n        setSelectedRowKeys([])\r\n    };\r\n    useEffect(() => {\r\n        handleAdminResourceData(\r\n            presentPage === 1 ?\r\n                {page: 1, type: \"material\"} :\r\n                (Math.ceil(total / 10) > presentPage ?\r\n                        {page: presentPage, type: \"material\"} :\r\n                        {page: presentPage - 1, type: \"material\"}\r\n                ));\r\n    }, [temp, learningDataTemp]);\r\n    useEffect(() => {\r\n        setCurrent(page)\r\n    },[page]);\r\n    return (\r\n        <>\r\n            <div className={\"adminTop\"}>\r\n                <Upload\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    beforeUpload={\r\n                        (file) => {\r\n                            setFile(file);\r\n                        }\r\n                    }\r\n                    customRequest={\r\n                        () => {\r\n                            handleImportResource({\r\n                                type: \"material\",\r\n                                userId: userId,\r\n                                file: file\r\n                            })\r\n                        }\r\n                    }\r\n                    showUploadList={false}\r\n                >\r\n                    <Button>\r\n                        <Icon type=\"upload\" /> 上传资料\r\n                    </Button>\r\n                </Upload>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    icon={\"close\"}\r\n                    onClick={\r\n                        () => {\r\n                            handleDeleteResource({\r\n                                list: list,\r\n                                type: \"material\",\r\n                                userId: userId\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    删除资料\r\n                </Button>\r\n                <InputGroup\r\n                    compact\r\n                    style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\", marginLeft: \"0.5rem\"}}\r\n                >\r\n                    <Select\r\n                        defaultValue=\"resourceName\"\r\n                        onChange={\r\n                            value => flag = value\r\n                        }\r\n                    >\r\n                        <Option value=\"resourceName\">资料名</Option>\r\n                        <Option value=\"userName\">上传人</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder={\"请输入搜索内容\"}\r\n                        onSearch={\r\n                            value => {\r\n                                handleSearchResourceData({\r\n                                    page: 1,\r\n                                    value,\r\n                                    type: \"material\",\r\n                                    flag: flag\r\n                                });\r\n                                setValue(value);\r\n                            }\r\n                        }\r\n                        enterButton\r\n                        style={{width: \"16rem\"}}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n            <Table\r\n                tableLayout={\"fixed\"}\r\n                rowKey={record => record.id}\r\n                columns={ columns }\r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        const resourceId = selectedRows.map(el => {\r\n                            return el.id;\r\n                        });\r\n                        setList(resourceId);\r\n                        changeSelectedRowKeys(resourceId);\r\n                        setSelectedRowKeys(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    },\r\n                }}\r\n                dataSource={ Array.from(resourceData)}\r\n                pagination={{\r\n                    total,\r\n                    current,\r\n                    onChange: (page) => {\r\n                        !searchFlag ?\r\n                        handleAdminResourceData({\r\n                            page: page,\r\n                            type: \"material\"\r\n                        }):\r\n                            handleSearchResourceData({\r\n                                page: page,\r\n                                value,\r\n                                type: \"material\",\r\n                                flag: flag\r\n                            });\r\n                        clearCheck();\r\n                        setPresentPage(page);\r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToState, mapDispatchToProps)(StudyInformation);\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button, Table, Input, Select,Upload, Icon} from 'antd';\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nimport * as resource from \"../../redux/actionCreators/resource\";\r\nimport \"../../static/style/admin.scss\";\r\nconst { Search } = Input;\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\n\r\nconst mapStateToState = state => ({\r\n    softwareData: state.getIn([\"admin\", \"resourceManage\", \"softwareData\"]),\r\n    total: state.getIn([\"admin\", \"resourceManage\", \"softwareTotal\"]),\r\n    userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n    page: state.getIn([\"admin\", \"resourceManage\", \"softwarePage\"]),\r\n    temp: state.getIn([\"admin\", \"resourceManage\", \"temp\"]),\r\n    searchFlag: state.getIn([\"admin\", \"resourceManage\", \"softwareSearchFlag\"]),\r\n    softwareDataTemp: state.getIn([\"resource\", \"resource\", \"softwareDataTemp\"])\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleAdminSoftwareData(args) {\r\n        dispatch(admin.fetchAdminSoftwareData(args))\r\n    },\r\n    handleDeleteSoftwareData(args) {\r\n        dispatch(admin.deleteSoftwareData(args))\r\n    },\r\n    handleSearchSoftwareData(args) {\r\n        dispatch(admin.searchSoftwareData(args));\r\n    },\r\n    handleImportSoftware(args) {\r\n        dispatch(admin.importSoftware(args));\r\n    },\r\n    handleDownloadSoftware(args) {\r\n        dispatch(resource.downloadSoftware(args));\r\n    }\r\n});\r\n\r\nconst StudySoftware = props => {\r\n    const {\r\n        temp,\r\n        softwareDataTemp,\r\n        total,\r\n        handleAdminSoftwareData,\r\n        handleDeleteSoftwareData,\r\n        handleSearchSoftwareData,\r\n        handleImportSoftware,\r\n        handleDownloadSoftware,\r\n        softwareData,\r\n        userId,\r\n        page,\r\n        searchFlag,\r\n    } = props;\r\n    const columns = [\r\n        {\r\n            key: '1',\r\n            title: '软件名称',\r\n            dataIndex: 'title',\r\n        },\r\n        {\r\n            key: '2',\r\n            title: '大小',\r\n            dataIndex: 'size',\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '上传人',\r\n            dataIndex: 'userName',\r\n        },\r\n        {\r\n            key: '4',\r\n            title: '上传时间',\r\n            dataIndex: 'addTime',\r\n        },\r\n        {\r\n            key: '5',\r\n            title: '下载次数',\r\n            dataIndex: 'downloadNum'\r\n        },\r\n        {\r\n            key: '6',\r\n            title: '软件下载',\r\n            dataIndex: \"url\",\r\n            render: (text, record) => (\r\n                <a\r\n                    download={{text}.text}\r\n                    href={{text}.text}\r\n                    onClick={\r\n                        () => {\r\n                            handleDownloadSoftware({\r\n                                id: record.id,\r\n                                type: \"software\"\r\n                            });\r\n                        }\r\n                    }\r\n                >\r\n                    下载\r\n                </a>\r\n            )\r\n        }\r\n    ];\r\n    const [$selectedRowKeys, changeSelectedRowKeys] = useState([]);\r\n    const [list, setList] = useState([]);\r\n    const [current, setCurrent ] = useState(1);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const [file, setFile ] = useState();\r\n    const [value, setValue ] = useState(\"\");\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [deleteBtn, setDeleteBtn ] = useState(true);\r\n    let flag = \"softwareName\";\r\n    const clearCheck = () => {\r\n        setSelectedRowKeys([])\r\n    };\r\n    useEffect(() => {\r\n        handleAdminSoftwareData(\r\n            presentPage === 1 ?\r\n                {page: 1, type: \"software\"} :\r\n                (Math.ceil(total / 10) > presentPage ?\r\n                        {page: presentPage, type: \"software\"} :\r\n                        {page: presentPage - 1, type: \"software\"}\r\n                ));\r\n    }, [temp, softwareDataTemp]);\r\n    useEffect(() => {\r\n        setCurrent(page)\r\n    },[page]);\r\n    return (\r\n        <>\r\n            <div className={\"adminTop\"}>\r\n                <Upload\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    beforeUpload={\r\n                        (file, FileList) => {\r\n                            setFile(file);\r\n                        }\r\n                    }\r\n                    customRequest={\r\n                        () => {\r\n                            handleImportSoftware({\r\n                                type: \"software\",\r\n                                userId: userId,\r\n                                file: file\r\n                            })\r\n                        }\r\n                    }\r\n                    showUploadList={false}\r\n                >\r\n                    <Button>\r\n                        <Icon type=\"upload\" /> 上传软件\r\n                    </Button>\r\n                </Upload>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    icon={\"close\"}\r\n                    onClick={\r\n                        () => {\r\n                            handleDeleteSoftwareData({\r\n                                list: list,\r\n                                type: \"software\",\r\n                                userId: userId\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    删除软件\r\n                </Button>\r\n                <InputGroup\r\n                    compact\r\n                    style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\", marginLeft: \"0.5rem\"}}\r\n                >\r\n                    <Select\r\n                        defaultValue=\"softwareName\"\r\n                        onChange={\r\n                            value => flag = value\r\n                        }\r\n                    >\r\n                        <Option value=\"softwareName\">软件名</Option>\r\n                        <Option value=\"userName\">上传人</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder={\"请输入搜索内容\"}\r\n                        onSearch={\r\n                            value => {\r\n                                handleSearchSoftwareData({\r\n                                    page: 1,\r\n                                    value,\r\n                                    type: \"software\",\r\n                                    flag: flag\r\n                                });\r\n                                setValue(value);\r\n                            }\r\n                        }\r\n                        enterButton\r\n                        style={{width: \"16rem\"}}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n            <Table\r\n                tableLayout={\"fixed\"}\r\n                rowKey={record => record.id}\r\n                columns={ columns }\r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        const resourceId = selectedRows.map(el => {\r\n                            return el.id;\r\n                        });\r\n                        setList(resourceId);\r\n                        changeSelectedRowKeys(resourceId);\r\n                        setSelectedRowKeys(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    },\r\n                }}\r\n                dataSource={ Array.from(softwareData)}\r\n                pagination={{\r\n                    total,\r\n                    current,\r\n                    onChange: (page) => {\r\n                        !searchFlag ?\r\n                        handleAdminSoftwareData({\r\n                            page: page,\r\n                            type: \"software\"\r\n                        }):\r\n                            handleSearchSoftwareData({\r\n                                page: page,\r\n                                value,\r\n                                type: \"software\",\r\n                                flag: flag\r\n                            });\r\n                        clearCheck();\r\n                        setPresentPage(page);\r\n                    }\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToState, mapDispatchToProps)(StudySoftware);\r\n","import * as constants from '../../constants/actionTypes';\r\n\r\nexport const queryAnnounce = page =>(\r\n    {\r\n        type: constants.QUERY_ANNOUNCE,\r\n        page\r\n    }\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BraftEditor from 'braft-editor';\r\nimport {Table, Button, Icon, Modal, Upload, Input, message} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport 'braft-editor/dist/index.css'\r\nimport * as announce from \"../../redux/actionCreators/announce\";\r\nimport * as admin from \"../../redux/actionCreators/admin\"\r\nconst { confirm } = Modal;\r\nconst Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\r\nconst LabAnnounce = props => {\r\n    const {\r\n        handleQueryAnnounce,\r\n        total,\r\n        announceResource,\r\n        releaseAnnounceFlag,\r\n        deleteAnnounceFlag,\r\n        name,\r\n        handleReleaseAnnounce,\r\n        handleEditAnnounce,\r\n        handleDeleteAnnounce\r\n    } = props;\r\n    const [showBraft, setShowBraft] = useState(false);\r\n    const [braftType, setBraftType] = useState('add');\r\n    const [editorState, setEditorState] = useState(BraftEditor.createEditorState('<p></p>'));\r\n    const [fileList, setFilelist] = useState([]);\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [selectedId, setSelectedId] = useState([]);\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [announceTit, setAnnounceTit] = useState();\r\n    const [announceId, setAnnounceId] = useState('');\r\n\r\n    useEffect(() => {\r\n        handleQueryAnnounce({page: presentPage, rows: 10 })\r\n    }, [deleteAnnounceFlag]);\r\n    useEffect(() => {\r\n        handleQueryAnnounce({page: 1, rows: 10});\r\n        setShowBraft(false);\r\n        setAnnounceTit(\"\");\r\n        setEditorState(BraftEditor.createEditorState('<p></p>'));\r\n        setFilelist([]);\r\n    }, [releaseAnnounceFlag]);\r\n    const columns = [\r\n        {\r\n            title: '公告标题',\r\n            align: 'center',\r\n            key: 'title',\r\n            dataIndex: \"title\",\r\n            width: \"5rem\"\r\n        },\r\n        {\r\n            title: '内容',\r\n            key: 'content',\r\n            align: 'center',\r\n            width: '33%',\r\n            render: (e) => (\r\n                <div dangerouslySetInnerHTML={{__html: e.content}}></div>\r\n            )\r\n        },\r\n        {\r\n            title: '附件名称',\r\n            key: 'fileName',\r\n            width: \"10%\",\r\n            render: e => (\r\n                <a\r\n                    download={true}\r\n                    href={e.url}\r\n                >\r\n                    {e.fileName}\r\n                </a>\r\n            )\r\n        },\r\n        {\r\n            title: '发布人',\r\n            key: 'userName',\r\n            align: 'center',\r\n            dataIndex: \"userName\",\r\n            width: \"0.75rem\"\r\n        },\r\n        {\r\n            title: '发布时间',\r\n            dataIndex: 'addTime',\r\n            align: 'center',\r\n            key: 'addTime',\r\n            width: \"1.5rem\"\r\n        },\r\n        {\r\n            title: '操作',\r\n            width: '1.5rem',\r\n            align: 'center',\r\n            render: (e) => {\r\n                return (\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={() => {\r\n                            editOrAddAnnounce('edit');\r\n                            setAnnounceTit(e.title);\r\n                            setAnnounceId(e.id);\r\n                            setEditorState(BraftEditor.createEditorState(e.content));\r\n                        }}\r\n                    >\r\n                        编辑\r\n                    </Button>\r\n                )\r\n            }\r\n        }\r\n        ];\r\n    const uploadProps = {\r\n        beforeUpload:\r\n            file => {\r\n                fileList.push(file);\r\n                //fileList = fileList.slice(-1);\r\n                return false\r\n            },\r\n        onChange:\r\n            ()=> {\r\n                setFilelist(fileList.slice(-1));\r\n            },\r\n        onRemove:\r\n            file => {\r\n                const index = fileList.indexOf(file.originFileObj);\r\n                fileList.splice(index, 1);\r\n            }\r\n    };\r\n\r\n    //编辑/添加公告\r\n    const editOrAddAnnounce = (type) => {\r\n        setShowBraft(true);\r\n        setBraftType(type);\r\n        if(type === 'add') {\r\n            setAnnounceTit('');\r\n            setEditorState(BraftEditor.createEditorState('<p></p>'));\r\n        }\r\n    }\r\n    //上传编辑或者添加\r\n    const addOrEdit = () => {\r\n        let editorContent = editorState.toHTML();\r\n        fileList.length > 1 && message.error(\"只能上传一个附件！\");\r\n        if(Reg.test(announceTit) && editorContent){\r\n            braftType === 'add' ? handleReleaseAnnounce({\r\n                userName: name,\r\n                title: announceTit,\r\n                content: editorContent,\r\n                file: fileList[0],\r\n            }) :\r\n                handleEditAnnounce({\r\n                    announceId: announceId,\r\n                    userName: name,\r\n                    title: announceTit,\r\n                    content: editorContent,\r\n                    file: fileList[0],\r\n                })\r\n        } else\r\n        {\r\n            message.error(\"标题和内容不能为空！\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{margin: \"1.25rem 0\"}}>\r\n            <div\r\n                style={{display: \"flex\"}}\r\n            >\r\n                <Button\r\n                    style={{margin: \"0 0.6875rem\"}}\r\n                    onClick={() => (editOrAddAnnounce('add'))}\r\n                >\r\n                    <Icon type={\"plus\"}/>\r\n                    添加公告\r\n                </Button>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    onClick={() => {\r\n                        setSelectedId &&\r\n                        confirm(\r\n                            {\r\n                                title: \"确认删除公告吗?\",\r\n                                onOk() {\r\n                                    selectedId !== undefined ?\r\n                                        handleDeleteAnnounce({\r\n                                            announceId: selectedId,\r\n                                        }) :\r\n                                        message.error(\"所选内容不能为空！\");\r\n                                    setDeleteBtn(true);\r\n                                    setSelectedId([]);\r\n                                },\r\n                                onCancel() {\r\n\r\n                                }\r\n\r\n                            }\r\n                        )\r\n                    }}\r\n                >\r\n                    <Icon type={\"delete\"}/>\r\n                    删除公告\r\n                </Button>\r\n            </div>\r\n            <Table\r\n                rowKey={e => e.id}\r\n                bordered={true}\r\n                columns={columns}\r\n                dataSource={[...announceResource]}\r\n                pagination={{\r\n                    total,\r\n                    onChange: e => {\r\n                        handleQueryAnnounce({page: e, rows: 10});\r\n                        setSelectedId([]);\r\n                        setPresentPage(e);\r\n                    },\r\n                    hideOnSinglePage: true,\r\n                }}\r\n                rowSelection={{\r\n                    selectedRowKeys: selectedId,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        setSelectedId(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true)\r\n\r\n                    }\r\n                }}\r\n            />\r\n            <Modal\r\n                title={braftType=== 'add' ? \"添加公告\" : '编辑公告'}\r\n                visible={showBraft}\r\n                onCancel={() => {\r\n                    setShowBraft(false);\r\n                    setFilelist([]);\r\n                }}\r\n                onOk={addOrEdit}\r\n                width={\"50rem\"}\r\n                destroyOnClose={true}\r\n            >\r\n                <div\r\n                    style={{display: \"flex\", alignItems: \"center\", margin: \"0.625rem 0.625rem\"}}\r\n                >\r\n                    <h1>公告标题</h1>\r\n                    <Input\r\n                        style={{width: \"70%\", marginLeft: \"1.25rem\"}}\r\n                        value={announceTit}\r\n                        onChange={(e) => {\r\n                            setAnnounceTit(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <BraftEditor\r\n                        value={editorState}\r\n                        onChange={(e) => (\r\n                            setEditorState(e)\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Upload\r\n                        style={{marginTop: \"1.25rem\"}}\r\n                        {...uploadProps} fileList={fileList} >\r\n                        <Button\r\n                            type={\"primary\"}\r\n                        >\r\n                            {\r\n                                braftType=== 'add' ? \"添加附件\" : '更改附件'\r\n                            }\r\n                        </Button>\r\n\r\n                    </Upload>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        total: state.getIn([\"announce\", \"total\"]),\r\n        announceResource: state.getIn([\"announce\", \"announceResource\"]),\r\n        name: state.getIn([\"userMana\", \"common\", \"name\"]),\r\n        releaseAnnounceFlag: state.getIn([\"announce\", \"releaseAnnounceFlag\"]),\r\n        deleteAnnounceFlag: state.getIn([\"announce\", \"deleteAnnounceFlag\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleQueryAnnounce(page) {\r\n            dispatch(announce.queryAnnounce(page))\r\n        },\r\n        handleReleaseAnnounce(args) {\r\n            dispatch(admin.releaseAnnounce(args))\r\n        },\r\n        handleEditAnnounce(args) {\r\n            dispatch(admin.editAnnounce(args))\r\n        },\r\n        handleDeleteAnnounce(announceId){\r\n            dispatch(admin.deleteAnnounce(announceId))\r\n        }\r\n    }),\r\n)(LabAnnounce);\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { Card, Button, Slider, InputNumber, Row, Col } from 'antd';\r\nimport {connect} from \"react-redux\";\r\nimport * as admin from \"../../redux/actionCreators/admin\"\r\nimport {FETCH_PARAM} from \"../../constants/actionTypes\";\r\n\r\nconst DataMana = props => {\r\n    const { \r\n        handleAdminClearData, \r\n        paramSystem, \r\n        handleParam,\r\n        modifyParam\r\n    } = props;\r\n    const [workLimit, setWorkLimit] = useState('');\r\n    const [taskLimit, setTaskLimit] = useState('');\r\n    const [softwareLimit, setSoftwareLimit] = useState('');\r\n    const [meterialLimit, setMeterialLimit] = useState('');\r\n    const [announceLimit, setAnnounceLimit] = useState('');\r\n    useEffect(() => {\r\n        handleParam()\r\n    }, [])\r\n    useEffect(() => {\r\n        paramSystem.size !== 0 && setWorkLimit(paramSystem[4].keyValue)\r\n        paramSystem.size !== 0 && setTaskLimit(paramSystem[5].keyValue)\r\n        paramSystem.size !== 0 && setSoftwareLimit(paramSystem[3].keyValue)\r\n        paramSystem.size !== 0 && setMeterialLimit(paramSystem[2].keyValue)\r\n        paramSystem.size !== 0 && setAnnounceLimit(paramSystem[1].keyValue)\r\n    }, [paramSystem])\r\n    return (\r\n        <div\r\n            style={{ width: \"100%\", marginTop: \"20px\"}}\r\n        >\r\n            <Card title = \"清除说明\" style={{ padding: \"10px 10px\", margin: \"20px 20px\"}}>\r\n                <p>该功能是用于删除教师在批量下载学生作业时所产生的打包临时文件</p>\r\n                <br/>\r\n                <p>删除时只会删除临时文件</p>\r\n                <br/>\r\n                <p>不会对学生作业产生影响</p>\r\n                <br/>\r\n                <p>删除的好处是节约系统硬盘空间</p>\r\n                <br/>\r\n                <Button\r\n                    type = \"primary\"\r\n                    onClick={()=>{\r\n                        handleAdminClearData()\r\n                    }}\r\n                >\r\n                    确认清除\r\n                </Button>\r\n            </Card>\r\n            <Card title = \"导入说明\" style={{ padding: \"10px 10px\", margin: \"20px 20px\"}}>\r\n                <p>若要导入学生信息,只需要在学生信息中点击批量导入,然后选择相应的学生文件。</p>\r\n                <br/>\r\n                <p>教师的导入和学生的一样。</p>\r\n                <br/>\r\n                <p>课程的导入是下载课程导入模板，然后将课程信息按模板格式填写后导入。</p>\r\n                <br/>\r\n                <span><span>教师或学生导入模板</span><a download=\"teacherOrStudent模板\" style={{marginLeft: \"20px\"}} href={'http://172.22.4.2:80/lab/teacherOrStudent.xls'}>teacherOrStudent.xls</a></span>\r\n                <br/>\r\n                <span><span>课程导入模板</span><a download=\"course模板\" style={{marginLeft: \"20px\"}} href={'http://172.22.4.2:80/lab/course.xls'}>course.xls</a></span>\r\n\r\n            </Card>\r\n\r\n            <Card title = \"上传大小限制调节\" style={{ padding: \"10px 10px\", margin: \"20px 20px\"}}>\r\n                <p>作业，资料，软件，公告，附件上传大小限制可调节，范围从5MB-5120MB（5G）。</p>\r\n                {/* 作业上传 */}\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <p>上传作业大小限制（单位MB）：</p>\r\n                    <Row style={{display: 'flex'}}>\r\n                        <Col span={12}>\r\n                        <Slider\r\n                            min={5}\r\n                            max={5120}\r\n                            onChange={(e) => setWorkLimit(e)}\r\n                            value={workLimit}\r\n                        />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        <InputNumber\r\n                            min={5}\r\n                            max={5120}\r\n                            style={{ margin: '0 16px' }}\r\n                            value={workLimit}\r\n                            onChange={(e) => setWorkLimit(e)}\r\n                        />\r\n                        </Col>\r\n                        <Button\r\n                            onClick={() => {modifyParam({'key_name': 'work_file_max_size', 'key_value': workLimit})}}\r\n                        >确认修改</Button>\r\n                    </Row>  \r\n                </div> \r\n                {/* 资料上传 */}\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <p>上传资料大小限制（单位MB）：</p>\r\n                    <Row style={{display: 'flex'}}>\r\n                        <Col span={12}>\r\n                        <Slider\r\n                            min={5}\r\n                            max={5120}\r\n                            onChange={(e) => setMeterialLimit(e)}\r\n                            value={meterialLimit}\r\n                        />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        <InputNumber\r\n                            min={5}\r\n                            max={5120}\r\n                            style={{ margin: '0 16px' }}\r\n                            value={meterialLimit}\r\n                            onChange={(e) => setMeterialLimit(e)}\r\n                        />\r\n                        </Col>\r\n                        <Button\r\n                            onClick={() => {modifyParam({'key_name': 'material_file_max_size', 'key_value': meterialLimit})}}\r\n                        >确认修改</Button>\r\n                    </Row>  \r\n                </div> \r\n                {/* 软件上传 */}\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <p>上传软件大小限制（单位MB）：</p>\r\n                    <Row style={{display: 'flex'}}>\r\n                        <Col span={12}>\r\n                        <Slider\r\n                            min={5}\r\n                            max={5120}\r\n                            onChange={(e) => setSoftwareLimit(e)}\r\n                            value={softwareLimit}\r\n                        />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        <InputNumber\r\n                            min={5}\r\n                            max={5120}\r\n                            style={{ margin: '0 16px' }}\r\n                            value={softwareLimit}\r\n                            onChange={(e) => setSoftwareLimit(e)}\r\n                        />\r\n                        </Col>\r\n                        <Button\r\n                            onClick={() => {modifyParam({'key_name': 'software_file_max_size', 'key_value': softwareLimit})}}\r\n                        >确认修改</Button>\r\n                    </Row>  \r\n                </div> \r\n                {/* 公告上传 */}\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <p>上传公告大小限制（单位MB）：</p>\r\n                    <Row style={{display: 'flex'}}>\r\n                        <Col span={12}>\r\n                        <Slider\r\n                            min={5}\r\n                            max={5120}\r\n                            onChange={(e) => setAnnounceLimit(e)}\r\n                            value={announceLimit}\r\n                        />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        <InputNumber\r\n                            min={5}\r\n                            max={5120}\r\n                            style={{ margin: '0 16px' }}\r\n                            value={announceLimit}\r\n                            onChange={(e) => setAnnounceLimit(e)}\r\n                        />\r\n                        </Col>\r\n                        <Button\r\n                            onClick={() => {modifyParam({'key_name': 'announce_file_max_size', 'key_value': announceLimit})}}\r\n                        >确认修改</Button>\r\n                    </Row>  \r\n                </div> \r\n                {/* 附件上传 */}\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <p>上传附件大小限制（单位MB）：</p>\r\n                    <Row style={{display: 'flex'}}>\r\n                        <Col span={12}>\r\n                        <Slider\r\n                            min={5}\r\n                            max={5120}\r\n                            onChange={(e) => setTaskLimit(e)}\r\n                            value={taskLimit}\r\n                        />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        <InputNumber\r\n                            min={5}\r\n                            max={5120}\r\n                            style={{ margin: '0 16px' }}\r\n                            value={taskLimit}\r\n                            onChange={(e) => setTaskLimit(e)}\r\n                        />\r\n                        </Col>\r\n                        <Button\r\n                            onClick={() => {modifyParam({'key_name': 'task_file_max_size', 'key_value': taskLimit})}}\r\n                        >确认修改</Button>\r\n                    </Row>  \r\n                </div> \r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n    state => ({\r\n        paramSystem: state.getIn([\"admin\", \"userManage\", \"paramSystem\"]),\r\n        adminTotal: state.getIn([\"admin\", \"userManage\", \"adminTotal\"]),\r\n        adminStudentData: state.getIn([\"admin\", \"userManage\", \"adminStudentData\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleAdminClearData(){\r\n            dispatch(admin.adminClearData())\r\n        },\r\n        handleParam() {\r\n            dispatch({type: FETCH_PARAM})\r\n        },\r\n        modifyParam(args) {\r\n            dispatch(admin.modifyParam(args))\r\n        }\r\n    }),\r\n)(DataMana);","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button, Table, Input,  Modal, Dropdown, Menu} from 'antd';\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nimport \"../../static/style/admin.scss\";\r\nimport {openNotification} from \"../../utils/commonFunction\";\r\n\r\nconst mapStateToState = state => ({\r\n    adminData: state.getIn([\"admin\", \"userManage\", \"adminData\"]),\r\n    total: state.getIn([\"admin\", \"userManage\", \"adminTotal\"]),\r\n    addAdminFlag: state.getIn([\"admin\", \"userManage\", \"addAdminFlag\"]),\r\n    modifyAdminTemp: state.getIn([\"admin\", \"userManage\", \"modifyAdminTemp\"]),\r\n    addVisible: state.getIn([\"admin\", \"userManage\", \"addVisible\"]),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleAdminData(args){\r\n        dispatch(admin.fetchAdministratorData(args));\r\n    },\r\n    handleAddAdmin(args) {\r\n        if (args.userId.length < 6 || args.userId.length > 30){\r\n            openNotification(\"教师编号长度为大于等于6小于等于30的数字，请重新输入\")\r\n        } else if (args.userName.length < 2 || args.userName.length > 30) {\r\n            openNotification(\"教师姓名长度为大于等于2小于等于30的字符，请重新输入\")\r\n        } else {\r\n            dispatch(admin.addNewAdmin(args));\r\n        }\r\n    },\r\n    handleModifyAdmin(args) {\r\n        dispatch(admin.modifyAdmin(args));\r\n    }\r\n});\r\n\r\nconst AdminMessage = props => {\r\n    const {\r\n        handleAdminData,\r\n        handleAddAdmin,\r\n        handleModifyAdmin,\r\n        total,\r\n        adminData,\r\n        addAdminFlag,\r\n        modifyAdminTemp,\r\n        addVisible\r\n    } = props;\r\n    // console.log(adminData)\r\n    const userId = useRef();\r\n    const userName = useRef();\r\n    const phone = useRef();\r\n    const academy = useState();\r\n    const [id, setId] = useState(\"\");\r\n    const isEditing = record => record.id === id;\r\n    const columns = [\r\n        {\r\n            key: '1',\r\n            title: '管理员账号',\r\n            dataIndex: 'userId',\r\n            editable: true\r\n        },\r\n        {\r\n            key: '2',\r\n            title: '管理员姓名',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={userName} defaultValue={record.userName} />\r\n                ):(\r\n                    <span>{record.userName}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '学院',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={academy} defaultValue={record.academy} />\r\n                ):(\r\n                    <span>{record.academy}</span>\r\n                )\r\n            },\r\n            editable: true\r\n\r\n        },\r\n        {\r\n            key: '4',\r\n            title: '性别',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Dropdown overlay={menu}>\r\n                        <Button style={{ padding: \"0 20px\" }}>{sex}</Button>\r\n                    </Dropdown>\r\n                ):(\r\n                    <span>{record.sex}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '5',\r\n            title: '',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <a\r\n                        onClick={\r\n                            () => {\r\n                                handleModifyAdmin({\r\n                                    userId: record.userId,\r\n                                    userName: userName.current.state.value,\r\n                                    academy: academy.current.state.value,\r\n                                    sex\r\n                                });\r\n                                setId(\"\")\r\n                            }\r\n                        }\r\n                    >\r\n                        保存\r\n                    </a>\r\n                ) : (\r\n                    <a\r\n                        onClick={ () => setId(record.id)}\r\n                    >\r\n                        修改\r\n                    </a>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n    const $columns = columns.map(el => {\r\n        if (!el.editable) {\r\n            return el;\r\n        }\r\n        return {\r\n            ...el,\r\n            onCell: record => ({\r\n                record,\r\n                dataIndex: el.dataIndex,\r\n                title: el.title,\r\n                editing: isEditing(record),\r\n            })\r\n        }\r\n    });\r\n    const [addFlag, changeAddFlag] = useState(false);\r\n    const [$selectedRowKeys, changeSelectedRowKeys] = useState([]);\r\n    const [sex, setSex] = useState(\"男\");\r\n    const [list, setList] = useState([]);\r\n    const [presentPage, setPresentPage ] = useState(1);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const clearCheck = () => {\r\n        setSelectedRowKeys([])\r\n    };\r\n\r\n    function onClick(e) {\r\n        setSex(e.key);\r\n    }\r\n    const menu = (\r\n        <Menu onClick={onClick}>\r\n            <Menu.Item style={{ textAlign: \"center\" }} key=\"男\">男</Menu.Item>\r\n            <Menu.Item style={{ textAlign: \"center\" }} key=\"女\">女</Menu.Item>\r\n        </Menu>\r\n    );\r\n    useEffect(() => {\r\n        changeAddFlag(addVisible)\r\n    }, [addVisible])\r\n    useEffect(()=> {\r\n        handleAdminData(\r\n            presentPage === 1 ?\r\n                {page: 1, type: \"admin\"} :\r\n                (Math.ceil(total / 10) > presentPage ?\r\n                        {page: presentPage, type: \"admin\"} :\r\n                        {page: presentPage - 1, type: \"admin\"}\r\n                ));\r\n        clearCheck()\r\n    }, [modifyAdminTemp]);\r\n    useEffect(() => {\r\n        changeAddFlag(false)\r\n    },[addAdminFlag]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Button\r\n                    style={{margin: \"0.5rem 0 0 0.5rem\"}}\r\n                    onClick={ () => changeAddFlag(true)}\r\n                    icon={\"plus\"}\r\n                >\r\n                    添加管理员\r\n                </Button>\r\n            </div>\r\n            {/* 表格 */}\r\n            <Table\r\n                rowKey={record => record.id}\r\n                size={\"middle\"}\r\n                columns={ $columns }\r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        const userId = selectedRows.map(el => {\r\n                            return el.userId;\r\n                        });\r\n                        console.log(selectedRows);\r\n                        setList(userId);\r\n                        changeSelectedRowKeys(userId);\r\n                        setSelectedRowKeys(selectedRowKeys);\r\n                    },\r\n                }}\r\n                dataSource={ Array.from(adminData)}\r\n                pagination={{\r\n                    total,\r\n                    defaultCurrent: presentPage,\r\n                    onChange: (page) => {\r\n                        handleAdminData({page: page, type: \"admin\"});\r\n                        setPresentPage(page);\r\n                    }\r\n                }}\r\n            />\r\n            {/* 添加管理员 */}\r\n            <Modal\r\n                destroyOnClose={true}\r\n                title={\"添加管理员\"}\r\n                visible={addFlag}\r\n                onCancel={\r\n                    () => {\r\n                        changeAddFlag(false);\r\n                    }\r\n                }\r\n                okText=\"添加\"\r\n                onOk={() => {\r\n                    handleAddAdmin({\r\n                        type: \"admin\",\r\n                        userId: userId.current.state.value,\r\n                        userName: userName.current.state.value,\r\n                        // phone: phone.current.state.value,\r\n                        sex,\r\n                        adminData\r\n                    });\r\n                }}\r\n            >\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>管理员账号：</label>\r\n                    <Input ref={userId} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>管理员姓名：</label>\r\n                    <Input ref={userName} />\r\n                </div>\r\n                {/* <div className=\"_wrap row row-start-center\">\r\n                    <label>教师电话：</label>\r\n                    <Input ref={phone} />\r\n                </div> */}\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>选择性别：</label>\r\n                    <Dropdown overlay={menu}>\r\n                        <Button style={{ padding: \"0 20px\" }}>{sex}</Button>\r\n                    </Dropdown>\r\n                </div>\r\n            </Modal>\r\n            <style>\r\n                {\r\n                    `\r\n                    ._wrap {\r\n                        margin-bottom: 20px;\r\n                    }\r\n                    .ant-input {\r\n                        width: 80%;\r\n                    }\r\n                    input {\r\n                        margin: 20px;\r\n                    }\r\n                    `\r\n                }\r\n            </style>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToState, mapDispatchToProps)(AdminMessage);\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button, Table, Input, Modal, Dropdown, Menu} from 'antd';\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nimport \"../../static/style/admin.scss\";\r\nimport {openNotification} from \"../../utils/commonFunction\";\r\nconst { Search } = Input;\r\nconst mapStateToState = state => ({\r\n    total: state.getIn([\"admin\", \"userManage\", \"teacherTotal\"]),\r\n    adminTeacherData: state.getIn([\"admin\", \"userManage\", \"adminTeacherData\"]),\r\n    temp: state.getIn([\"admin\", \"userManage\", \"temp\"]),\r\n    addTeacherFlag: state.getIn([\"admin\", \"userManage\", \"addTeacherFlag\"]),\r\n    modifyTeacherTemp: state.getIn([\"admin\", \"userManage\", \"modifyTeacherTemp\"]),\r\n    teacherPage: state.getIn([\"admin\", \"userManage\", \"teacherPage\"]),\r\n    searchFlag: state.getIn([\"admin\", \"userManage\", \"teacherSearchFlag\"]),\r\n    userId_i: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleTeacherData(args){\r\n        dispatch(admin.fetchTeacherData(args));\r\n    },\r\n    handleAddTeacher(args) {\r\n        if(args.userId.length < 4 || args.userId.length > 30){\r\n            openNotification(\"教师编号请输入4-30位的教师编号\")\r\n        } else if(args.userName.length <2 || args.userName.length > 30){\r\n            openNotification(\"教师名字请输入2-30位的名字\")\r\n        } else if (args.phone === null || args.phone.length <5 || args.phone.length > 30){\r\n            openNotification(\"电话请输入5-30位的数字\")\r\n        } else {\r\n            dispatch(admin.addNewTeacher(args));\r\n        }\r\n    },\r\n    handleDeleteTeacher(args) {\r\n        dispatch(admin.deleteTeacher(args));\r\n    },\r\n    handleModifyTeacher(args) {\r\n        console.log(args)\r\n        if(args.userId.length < 4 || args.userId.length > 30){\r\n            openNotification(\"教师编号请输入4-30位的教师编号\")\r\n        } else if(args.userName.length <2 || args.userName.length > 30){\r\n            openNotification(\"教师名字请输入2-30位的名字\")\r\n        } else if (args.phone === null || args.phone.length <5 || args.phone.length > 30){\r\n            openNotification(\"电话请输入5-30位的数字\")\r\n        } else {\r\n            dispatch(admin.modifyTeacher(args));\r\n        }\r\n    },\r\n    handleSearchTeacherData(args) {\r\n        dispatch(admin.searchTeacher(args))\r\n    },\r\n    resetPassword(args) {\r\n        dispatch(admin.resetPassword(args))\r\n    }\r\n});\r\n\r\nconst TeacherMessage = props => {\r\n    const {\r\n        total,\r\n        adminTeacherData,\r\n        handleTeacherData,\r\n        handleAddTeacher,\r\n        handleDeleteTeacher,\r\n        handleModifyTeacher,\r\n        temp,\r\n        addTeacherFlag,\r\n        modifyTeacherTemp,\r\n        handleSearchTeacherData,\r\n        teacherPage,\r\n        searchFlag,\r\n        userId_i,\r\n        resetPassword\r\n    } = props;\r\n    const userId = useRef();\r\n    const userName = useRef();\r\n    const phone = useRef();\r\n    const department = useRef();\r\n    const academy = useState();\r\n    const [id, setId] = useState(\"\");\r\n    const isEditing = record => record.id === id;\r\n    const columns = [\r\n        {\r\n            key: '1',\r\n            title: '教师账号',\r\n            dataIndex: 'userId',\r\n            editable: true\r\n        },\r\n        {\r\n            key: '2',\r\n            title: '教师姓名',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={userName} defaultValue={record.userName} />\r\n                ):(\r\n                    <span>{record.userName}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '学院',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={academy} defaultValue={record.academy} />\r\n                ):(\r\n                    <span>{record.academy}</span>\r\n                )\r\n            },\r\n            editable: true\r\n\r\n        },\r\n        {\r\n            key: '4',\r\n            title: '电话',\r\n            render: (text, record) => {\r\n                console.log(record)\r\n                return isEditing(record) ? (\r\n                    <Input ref={phone} defaultValue={record.phone} />\r\n                ):(\r\n                    <span>{record.phone}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '5',\r\n            title: '教师部门',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Input ref={department} defaultValue={record.discipline} />\r\n                ):(\r\n                    <span>{record.discipline}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '6',\r\n            title: '性别',\r\n            dataIndex: 'sex',\r\n            render: (text, record) => {\r\n                return isEditing(record) ? (\r\n                    <Dropdown overlay={menu}>\r\n                        <Button style={{ padding: \"0 20px\" }}>{record.sex}</Button>\r\n                    </Dropdown>\r\n                ):(\r\n                    <span>{record.sex}</span>\r\n                )\r\n            },\r\n            editable: true\r\n        },\r\n        {\r\n            key: '7',\r\n            title: '',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <a\r\n                        onClick={\r\n                            () => {\r\n                                handleModifyTeacher({\r\n                                    userId: record.userId,\r\n                                    userName: userName.current.state.value,\r\n                                    academy: academy.current.state.value,\r\n                                    phone: phone.current.state.value,\r\n                                    discipline: department.current.state.value,\r\n                                    sex\r\n                                });\r\n                                setId(\"\")\r\n                            }\r\n                        }\r\n                    >\r\n                        保存\r\n                    </a>\r\n                ) : (\r\n                    <a\r\n                        onClick={ () => setId(record.id)}\r\n                    >\r\n                        修改\r\n                    </a>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: '8',\r\n            title: '',\r\n            dataIndex: 'resetPassword',  \r\n            render: (text, record) => {\r\n                return (<a \r\n                            onClick={() => {resetPassword({'id': record.userId, 'userId': userId_i})}}\r\n                        >\r\n                                重置密码\r\n                        </a>)\r\n                \r\n            }\r\n        }\r\n    ];\r\n    const $columns = columns.map(el => {\r\n        if (!el.editable) {\r\n            return el;\r\n        }\r\n        return {\r\n            ...el,\r\n            onCell: record => ({\r\n                record,\r\n                dataIndex: el.dataIndex,\r\n                title: el.title,\r\n                editing: isEditing(record),\r\n            })\r\n        }\r\n    });\r\n    const [addFlag, changeAddFlag] = useState(false);\r\n    const [$selectedRowKeys, changeSelectedRowKeys] = useState([]);\r\n    const [sex, setSex] = useState(\"\");\r\n    const [list, setList] = useState([]);\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const [value, setValue ] = useState(\"\");\r\n    const [presentPage, setPresentPage] = useState(1);\r\n    const [deleteBtn, setDeleteBtn ] = useState(true);\r\n    const clearCheck = () => {\r\n        setSelectedRowKeys([])\r\n    };\r\n\r\n    function onClick(e) {\r\n        setSex(e.key);\r\n    }\r\n    const menu = (\r\n        <Menu onClick={onClick}>\r\n            <Menu.Item style={{ textAlign: \"center\" }} key=\"男\">男</Menu.Item>\r\n            <Menu.Item style={{ textAlign: \"center\" }} key=\"女\">女</Menu.Item>\r\n        </Menu>\r\n    );\r\n    useEffect(()=> {\r\n        handleTeacherData(\r\n            presentPage === 1 ?\r\n                {page: 1, type: \"teacher\"} :\r\n                (Math.ceil(total / 10) > presentPage ?\r\n                        {page: presentPage, type: \"teacher\"} :\r\n                        {page: presentPage - 1, type: \"teacher\"}\r\n                ));\r\n        clearCheck()\r\n    }, [temp, modifyTeacherTemp]);\r\n\r\n    useEffect(() => {\r\n        changeAddFlag(false);\r\n    },[addTeacherFlag]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"adminTop\">\r\n                <Button\r\n                    style={{marginLeft: '0.5rem'}}\r\n                    onClick={ () => changeAddFlag(true)}\r\n                    icon={\"plus\"}\r\n                >\r\n                    添加教师\r\n                </Button>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    icon={\"close\"}\r\n                    style={{marginLeft: \"0.5rem\"}}\r\n                    onClick={ () => {\r\n                        handleDeleteTeacher({list: list})\r\n                    }}\r\n                >\r\n                    删除教师\r\n                </Button>\r\n                <Search\r\n                    style={{width: \"20rem\", marginLeft: \"0.5rem\"}}\r\n                    placeholder=\"请输入老师姓名\"\r\n                    onSearch={\r\n                        (e) => {\r\n                            handleSearchTeacherData({\r\n                                page: 1,\r\n                                type: \"teacher\",\r\n                                userName: e,\r\n                            });\r\n                            setValue(e);\r\n                        }\r\n                    }\r\n                    enterButton\r\n                />\r\n            </div>\r\n            {/* 表格 */}\r\n            <Table\r\n                rowKey={record => record.id}\r\n                size={\"middle\"}\r\n                columns={ $columns }\r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        const userId = selectedRows.map(el => {\r\n                            return el.userId;\r\n                        });\r\n                        setList(userId);\r\n                        changeSelectedRowKeys(userId);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                        setSelectedRowKeys(selectedRowKeys);\r\n                    },\r\n                }}\r\n                dataSource={ Array.from(adminTeacherData) }\r\n                pagination={{\r\n                    total,\r\n                    defaultCurrent: 1,\r\n                    current: presentPage,\r\n                    onChange: e => {\r\n                        !searchFlag ?\r\n                        handleTeacherData({page: e, type: \"teacher\"}):\r\n                            handleSearchTeacherData({\r\n                                page: e,\r\n                                type: \"teacher\",\r\n                                userName: value\r\n                            });\r\n                        setPresentPage(e);\r\n                        clearCheck();\r\n                    }\r\n                }}\r\n            />\r\n            {/* 添加教师 */}\r\n            <Modal\r\n                destroyOnClose={true}\r\n                title={\"添加教师\"}\r\n                visible={addFlag}\r\n                onCancel={\r\n                    () => {\r\n                        changeAddFlag(false);\r\n                    }\r\n                }\r\n                okText=\"添加\"\r\n                onOk={() => {\r\n                    handleAddTeacher({\r\n                        type: \"teacher\",\r\n                        userId: userId.current.state.value,\r\n                        userName: userName.current.state.value,\r\n                        phone: phone.current.state.value,\r\n                        discipline: department.current.state.value,\r\n                        adminTeacherData,\r\n                        sex,\r\n                    });\r\n                }}\r\n            >\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>教师账号：</label>\r\n                    <Input ref={userId} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>教师姓名：</label>\r\n                    <Input ref={userName} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>教师电话：</label>\r\n                    <Input ref={phone} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>教师部门：</label>\r\n                    <Input ref={department} />\r\n                </div>\r\n                <div className=\"_wrap row row-start-center\">\r\n                    <label>选择性别：</label>\r\n                    <Dropdown overlay={menu}>\r\n                        <Button style={{ padding: \"0 20px\" }}>{sex}</Button>\r\n                    </Dropdown>\r\n                </div>\r\n            </Modal>\r\n            <style>\r\n                {\r\n                    `\r\n                    ._wrap {\r\n                        margin-bottom: 20px;\r\n                    }\r\n                    .ant-input {\r\n                        width: 80%;\r\n                    }\r\n                    input {\r\n                        margin: 20px;\r\n                    }\r\n                    `\r\n                }\r\n            </style>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToState, mapDispatchToProps)(TeacherMessage);\r\n","import React, {useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, } from \"antd\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LeftNav from \"../components/Administrator/LeftNav\";\r\nimport Header from \"../components/Administrator/Header\";\r\nimport StudentInformation from \"../components/Administrator/StudentInformation\";\r\nimport RegisterUser from \"../components/Administrator/RegisterUser\";\r\nimport LabCourse from \"../components/Administrator/LabCourse\";\r\nimport TeacherCourse from \"../components/Administrator/TeacherCourse\";\r\nimport StudentCourse from \"../components/Administrator/StudentCourse\";\r\nimport StudyInformation from \"../components/Administrator/StudyInformation\";\r\nimport StudySoftware from \"../components/Administrator/StudySoftware\";\r\nimport LabAnnounce from \"../components/Administrator/LabAnnounce\";\r\nimport DataMana from \"../components/Administrator/dataMana\";\r\nimport AdminMessage from \"../components/Administrator/AdminMessage\";\r\nimport TeacherMessage from \"../components/Administrator/TeacherMessage\";\r\nimport {FETCH_PARAM} from \"../constants/actionTypes\";\r\nconst {  Footer, Sider, Content } = Layout;\r\nconst Administrator = props =>{\r\n    const {handleParam, userIdentify, history} = props;\r\n    useEffect(() => {\r\n        userIdentify !== '超级管理员' &&  history.push('/user/home');\r\n        handleParam();\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Layout\r\n                style={{width: \"100%\", minHeight: \"100vh\"}}\r\n            >\r\n                <Sider width=\"250px\">\r\n                    <LeftNav/>\r\n                </Sider>\r\n                <Layout style={{height: \"100%\", minHeight: \"100vh\"}}>\r\n                    <Header/>\r\n                    <Content style={{margin: \" 20px\", background: \"white\"}}>\r\n                        <Switch>\r\n                            <Route path = \"/admin/userManage/administratorInformation\" component = { AdminMessage } />\r\n                            <Route path = \"/admin/userManage/teacherInformation\" component = { TeacherMessage } />\r\n                            <Route path = \"/admin/userManage/studentInformation\" component = { StudentInformation } />\r\n                            <Route path = \"/admin/userManage/registerUser\" component = { RegisterUser } />\r\n                            <Route path = \"/admin/courseManage/labCourse\" component = { LabCourse } />\r\n                            <Route path = \"/admin/courseManage/teacherCourse\" component = { TeacherCourse } />\r\n                            <Route path = \"/admin/courseManage/studentCourse\" component = { StudentCourse } />\r\n                            <Route path = \"/admin/informationManage/studyInformation\" component = { StudyInformation } />\r\n                            <Route path = \"/admin/informationManage/studySoftware\" component = { StudySoftware } />\r\n                            <Route path = \"/admin/labManage/labAnnounce\" component = { LabAnnounce } />\r\n                            <Route path = \"/admin/dataInformationManage\" component = { DataMana } />\r\n                            <Redirect to = \"/admin/userManage/administratorInformation\"/>\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer\r\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    >\r\n                        版权所有 极客网工作室\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        userIdentify: state.getIn([\"userMana\", \"common\", \"userIdentify\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleParam() {\r\n            dispatch({type: FETCH_PARAM})\r\n        }\r\n    })\r\n)(Administrator)\r\n","import axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst showStatus = (status) => {\r\n    const msg = {\r\n        400: '请求错误(400)',\r\n        401: '未授权,请重新登录(401)',\r\n        403: '拒绝访问(403)',\r\n        404: '请求出错(404)',\r\n        408: '请求超时(408)',\r\n        500: '服务器错误(500)',\r\n        501: '服务未实现(501)',\r\n        502: '网络错误(502)',\r\n        503: '服务不可用(503)',\r\n        504: '网络超时(504)',\r\n        505: 'HTTP版本不受支持(505)'\r\n    };\r\n    if (status in msg) {\r\n        return `${msg[status]},请检查网络或联系管理员`\r\n    } else {\r\n        return `连接出错(${status}),请检查网络或联系管理员`\r\n    }\r\n};\r\n\r\nconst Service = axios.create({\r\n    //基本域名 生产环境 ？ “线上服务器域名” ： “本地开发测试域名”\r\n    // baseURL: process.env.NODE_ENV === 'production' ? 'http://172.22.4.2:8080/':'http://172.22.4.2:8080/',\r\n    baseURL: process.env.NODE_ENV === 'production' ? 'http://49.235.20.228:8080/':'http://49.235.20.228:8080/',\r\n    //baseURL: 'http://localhost:8080/',\r\n        headers: {\r\n            get: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            },\r\n            post: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                // 'Content-Type': 'application/json'\r\n            }\r\n        },\r\n    timeout: 30000,\r\n    transformRequest: [ data => {\r\n        // data = JSON.stringify(data);\r\n        if(Object.prototype.toString.call(data) !== '[object FormData]') data = qs.stringify(data);\r\n        // data = JSON.stringify(data)\r\n        // console.log(data.prototype);\r\n        return data\r\n    }],\r\n    validateStatus () {\r\n        // 使用async-await，处理reject情况较为繁琐，所以全部返回resolve，在业务代码中处理异常\r\n        return true\r\n    },\r\n    transformResponse: [(data) => {\r\n        if (typeof data === 'string' && data.startsWith('{')) {\r\n            data = JSON.parse(data)\r\n        }\r\n        return data\r\n    }]\r\n});\r\n//请求拦截器\r\nService.interceptors.request.use(config => {\r\n    const isServer = typeof window === 'undefined';\r\n    if (!isServer) {\r\n        const token = window.localStorage.getItem('access');\r\n        if (token) {\r\n            config.headers.common['token'] = token;\r\n        }\r\n    }\r\n    return config\r\n},error => {\r\n    error.data = {};\r\n    error.data.msg = '服务器异常请联系管理员!';\r\n    return Promise.resolve(error);\r\n});\r\n//响应拦截器\r\nService.interceptors.response.use(response => {\r\n    const status = response.status;\r\n    let message = '';\r\n    if (status < 200 || status >= 300) {\r\n        message = showStatus(status);\r\n        if (typeof response.data === 'string') {\r\n            response.data = { message };\r\n        } else {\r\n            response.data.message = message;\r\n        }\r\n    }\r\n    return response;\r\n},error => {\r\n    error.data = {};\r\n    error.data.msg = '请求超时或服务器异常,请检查网络或联系管理员!';\r\n    return Promise.resolve(error)\r\n});\r\n\r\nexport default Service;\r\n","import {takeEvery, put, call} from \"redux-saga/effects\";\r\nimport { QUERY_ANNOUNCE, QUERY_ANNOUNCE_SUCCESS } from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\n\r\nfunction* queryAnnounceRes(data) {\r\n    try {\r\n        const {page, rows} = data.page;\r\n        let url = `queryAnnounce?page=${page}&rows=${rows}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: QUERY_ANNOUNCE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\nexport default function* rootAnnounceSagas() {\r\n    yield takeEvery(QUERY_ANNOUNCE, queryAnnounceRes)\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table, Carousel, Card, Modal, Button} from \"antd\";\r\nimport \"../static/style/home.scss\";\r\nimport * as announce from \"../redux/actionCreators/announce\";\r\nimport \"../redux/sagas/announceSagas/announceSaga\"\r\n\r\n//首页的轮播图和公告\r\nconst Home = props => {\r\n    const {total, handleFetchAnnounceRes, announceResource } = props;\r\n    const [modalContent,setModalContent] = useState({});\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const handleShowModal = data =>{\r\n        setModalVisible(true);\r\n        setModalContent(data);\r\n    };\r\n    useEffect(()=>{\r\n        handleFetchAnnounceRes({ page: 1, rows: 4})\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: '公告标题',\r\n            key: 'title',\r\n\r\n            width: '70%',\r\n            render: (data) => (\r\n                <span><a onClick={()=>handleShowModal(data)}>{data.title}</a></span>\r\n            ),\r\n\r\n\r\n        },\r\n        {\r\n            title: '发布时间',\r\n            align: 'center',\r\n            dataIndex: 'addTime',\r\n            key: 'addTime',\r\n            color: \"blue\"\r\n        }];\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className = \"homeWrap\">\r\n                <div className = \"homeLeft\">\r\n                    <Card\r\n                        bordered={false}\r\n                        title={\"实验室公告\"}\r\n                    >\r\n                        <Table\r\n                            rowKey={e=>(e.id)}\r\n                            dataSource = {[...announceResource]}\r\n                            columns = {columns}\r\n                            pagination = {{\r\n                                total,\r\n                                hideOnSinglePage: true,\r\n                                simple: true,\r\n                                pageSize: 4,\r\n                                onChange: e => handleFetchAnnounceRes({ page: e, rows: 4 }),\r\n                            }}\r\n                        />\r\n                        <Modal\r\n                            centered={true}\r\n                            title = {modalContent.title}\r\n                            visible={modalVisible}\r\n                            footer={\r\n                                <Button\r\n                                    type = \"primary\"\r\n                                    onClick={()=>(setModalVisible(!modalVisible))}\r\n                                >确定</Button>\r\n                            }\r\n                            onCancel={()=>(setModalVisible(!modalVisible))}\r\n                        >\r\n                            <div dangerouslySetInnerHTML = {{__html: modalContent.content}} />\r\n                            <div style={{marginTop:\"0.9375rem\"}}>附件:\r\n                                {\r\n                                    modalContent.fileName ?\r\n                                        <a\r\n                                            download={\"\"}\r\n                                            href={modalContent.url}\r\n                                            style={{marginLeft:\"0.6rem\"}}\r\n                                        >\r\n                                            {modalContent.fileName}\r\n                                        </a> :\r\n                                        '无'\r\n                                }\r\n                            </div>\r\n                            <div style={{width:\"100%\", display:\"flex\", justifyContent:\"flex-end\"}}>—— {modalContent.userName}</div>\r\n                        </Modal>\r\n                    </Card>\r\n                </div>\r\n                <div className = \"homeRight\">\r\n                    <Carousel autoplay>\r\n                        <div className={\"img-1\"}/>\r\n                        <div className={\"img-2\"}/>\r\n                        <div className={\"img-3\"}/>\r\n                        <div className={\"img-4\"}/>\r\n                        <div className={\"img-5\"}/>\r\n                        <div className={\"img-6\"}/>\r\n                    </Carousel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    //允许我们将store中的数据作为props绑定到组件中，只要store发生了变化就会调用，必须返回一个纯对象，这个对象会与组件的 props 合并\r\n    state => ({\r\n        total: state.getIn([\"announce\", \"total\"]),\r\n        announceResource: state.getIn([\"announce\", \"announceResource\"])\r\n\r\n    }),\r\n    dispatch => ({\r\n        handleFetchAnnounceRes(page) {\r\n            dispatch(announce.queryAnnounce(page))\r\n        }\r\n    })\r\n)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../static/style/search.scss\";\r\nimport { Input, Select } from 'antd';\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nlet flag = \"teacherName\";\r\n\r\nconst SearchCourse = props => {\r\n    const { handleSearchCourse } = props;\r\n    return(\r\n        <div className=\"container\">\r\n            <InputGroup\r\n                className=\"search\"\r\n                compact\r\n            >\r\n                <Select\r\n                    defaultValue=\"teacherName\"\r\n                    onChange={value => flag = value }\r\n                >\r\n                    <Option value=\"teacherName\">老师姓名</Option>\r\n                    <Option value=\"course\">课程名</Option>\r\n                </Select>\r\n                <Search\r\n                    placeholder=\"请输入搜索信息\"\r\n                    onSearch={(value,e) => handleSearchCourse(\r\n                        flag === \"teacherName\" ? {\r\n                            page: 1,\r\n                            teacherName: value,\r\n                            course: \"\",\r\n                            userId: \"\",\r\n                        } : {\r\n                            page: 1,\r\n                            teacherName: \"\",\r\n                            course: value,\r\n                            userId: \"\"\r\n                        }\r\n                    )\r\n                    }\r\n                    enterButton\r\n                />\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    dispatch => ({\r\n        handleSearchCourse(args) {\r\n            dispatch(resource.fetchSearchCourse(args))\r\n        }\r\n    })\r\n)(SearchCourse)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"antd\";\r\nimport * as course from \"../redux/actionCreators/resource\";\r\nimport SearchCourse from \"./SearchCourse\";\r\n//老师显示上机任务的第三个\r\nconst AllTasks = props => {\r\n    const {\r\n        taskTotal,\r\n        type,\r\n        userIdentify,\r\n        userId,\r\n        courseResource,\r\n        courseTask,\r\n        handleFetchTaskRes,\r\n        handleFetchCourseRes,\r\n        handleStudentAddCourse,\r\n        updateCourseFlag,\r\n        page,\r\n    } = props;\r\n    useEffect(()=>{\r\n        handleFetchCourseRes({page: 1, userId: userId});\r\n    },[updateCourseFlag]);\r\n    //翻页\r\n    const changePage = (e) => {\r\n        setCurrent(e);\r\n        handleFetchCourseRes({ page: e, userId: userId });\r\n    }\r\n//点击那个加号展开实验任务详情\r\n    const expandedRowRender = record => {\r\n        const columns = [\r\n            { title: '实验任务', dataIndex: 'taskName', key: 'taskName' },\r\n            { title: '任务附件', dataIndex: 'taskFileName', key: 'taskFileName' },\r\n            { title: '发布时间', dataIndex: 'addTime', key: 'addTime' }\r\n        ];\r\n        const el = (\r\n            <Table\r\n                rowKey={record => (record.id)}\r\n                size={'small'}\r\n                columns={columns}\r\n                dataSource={courseTask[record.teacherCourseId]}\r\n                pagination={false}\r\n            />\r\n        );\r\n        return el;\r\n    };\r\n    const [ current, setCurrent ] = useState(1);\r\n    useEffect(() => {\r\n        setCurrent(page);\r\n    },[page]);\r\n    const columns = [\r\n            { title: '实验课程', dataIndex: 'courseName', key: 'courseName' },\r\n            { title: '教学班编号', dataIndex: 'teacherCourseId', align: 'center', key: 'teacherCourseId' },\r\n            { title: '教学班备注', dataIndex: 'remark', align: 'center', key: 'remark' },\r\n            { title: '课程编号', dataIndex: 'courseNumber', align: 'center', key: 'courseNumber' },\r\n            { title: '课程教师', dataIndex: 'teacherName', align: 'center', key: 'teacherName' },\r\n            { title: '发布时间', dataIndex: 'addTime', align: 'center', key: 'addTime' },\r\n            userIdentify === \"学生\"\r\n                ?\r\n                {\r\n                    title: '实验处理',\r\n                    key: 'handleTask',\r\n                    render: (e) => (\r\n                        <span\r\n                            onClick={() =>(\r\n                                    handleStudentAddCourse({\r\n                                        teacherCourseId: e.teacherCourseId,\r\n                                        userId: userId,\r\n                                        type: type\r\n                                    })\r\n                            )}\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\"}}\r\n                        >\r\n                        {\r\n                            userIdentify === \"学生\" ?\r\n                                e.added ? \"已添加\" : \"添加课程\"\r\n                                :\r\n                                null\r\n                        }\r\n                    </span>\r\n                    )\r\n                } : {}\r\n        ];\r\n\r\n    return (\r\n        <div id=\"taskWrap\">\r\n            <SearchCourse/>\r\n            <Table\r\n                rowKey={record => record.teacherCourseId}\r\n                size={'small'}\r\n                columns={columns}\r\n                expandedRowRender={(record)=>(expandedRowRender(record))}\r\n                onExpand = {\r\n                    (expanded,record)=>{\r\n                        expanded && handleFetchTaskRes({teacherCourseId: record.teacherCourseId, courseTask});\r\n                    }\r\n                }\r\n                dataSource={courseResource}\r\n                pagination={{\r\n                    current,\r\n                    pageSize: 10,\r\n                    total: taskTotal,\r\n                    onChange: changePage,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        taskTotal: state.getIn([\"course\", \"taskTotal\"]),\r\n        courseResource: state.getIn([\"course\", \"courseResource\"]),\r\n        courseTask: state.getIn([\"course\", \"courseTask\"]),\r\n        userIdentify: state.getIn([\"userMana\", \"common\", \"userIdentify\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        type: state.getIn([\"userMana\", \"common\", \"type\"]),\r\n        addCourse_S : state.getIn(([\"course\", \"addCourse_S\"])),\r\n        page: state.getIn([\"course\", \"page\"]),\r\n        updateCourseFlag: state.getIn([\"course\", \"updateCourseFlag\"])\r\n    }),\r\n    dispatch => ({\r\n        handleFetchCourseRes(args){\r\n            dispatch(course.fetchCourse(args));\r\n        },\r\n        handleFetchTaskRes(teacherCourseId,courseTask){\r\n            dispatch(course.fetchCourseTask(teacherCourseId, courseTask));\r\n        },\r\n        handleStudentAddCourse(args){\r\n            dispatch(course.studentAddCourse(args));\r\n        },\r\n    })\r\n)(AllTasks);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Modal, Button, Upload, message, Alert } from \"antd\";\r\nimport * as course from \"../redux/actionCreators/resource\";\r\nconst { confirm } = Modal;\r\n\r\n//学生的\"我的任务\"\r\nconst StudentTasks = props => {\r\n    const {\r\n        type, userId, courseTask, myCourse,checkList, studentUploadFlag,param,\r\n        handleMyCourseRes, handleFetchTaskRes, handleStudentDeleteCourse,\r\n        handleStudentUploadWork, handleStudentQuerySubmit, handleStudentDeleteHomework\r\n    } = props;\r\n    const [uploadVisible, setUploadVisible] = useState(false);\r\n    const [checkWorkVisible, setCheckWorkVisible] = useState(false);\r\n    const [studentCourseId, setStudentCourseId] = useState(\"\");\r\n    const [taskId, setTaskId] = useState(\"\");\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploadLoading, setUploadLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        handleMyCourseRes({ userId: userId, type:type })\r\n    },[]);\r\n    useEffect(()=>{\r\n        setUploadVisible(false);\r\n        setUploadLoading(false)\r\n    },[studentUploadFlag]);\r\n    //学生删除课程/任务提示框\r\n    const deleteConfirm = (e, action) => {\r\n        confirm({\r\n            title: \"请确认~\",\r\n            content: \"删除后不可恢复，确认删除吗？\",\r\n            onOk() {\r\n                action === \"deleteCourse\" ?\r\n                    handleStudentDeleteCourse({\r\n                        studentCourseId: e.studentCourseId,\r\n                        userId: userId,\r\n                        teacherCourseId: e.teacherCourseId\r\n                    })\r\n                    :\r\n                    handleStudentDeleteHomework({\r\n                        userId: userId,\r\n                        workId: e.id,\r\n                    });\r\n                },\r\n            onCancel() {}\r\n        })\r\n    };\r\n    //学生上传作业\r\n    const studentUploadWork = () => {\r\n            if (fileList.length === 0) {\r\n                message.error(\"请选择文件！\");\r\n                setUploadLoading(false)\r\n            } else {\r\n                handleStudentUploadWork({\r\n                    studentCourseId: studentCourseId,\r\n                    taskId: taskId,\r\n                    userId: userId,\r\n                    file: fileList,\r\n                });\r\n                setFileList([])\r\n            }\r\n        }\r\n    //点击那个加号展开实验任务详情\r\n    const expandedRowRender = record => {\r\n        const columns = [\r\n            { title: '实验任务', dataIndex: 'taskName', key: 'taskName' },\r\n            {\r\n                title: '任务附件',\r\n                key: 'taskFileName',\r\n                align: 'center',\r\n                render: e => (\r\n                    <a download={\"\"} href = {e.url}>{e.taskFileName}</a>\r\n                )\r\n            },\r\n            { title: '发布时间', dataIndex: 'addTime', align: 'center', key: 'addTime' },\r\n            {\r\n                title: '作业处理',\r\n                key: \"handleHomework\",\r\n                align: \"center\",\r\n                render: e => (\r\n                    <div>\r\n                        <span\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                            onClick={\r\n                                    () => {\r\n                                        e.closed ?\r\n                                            Modal.error({\r\n                                                title: 'Attention!',\r\n                                                content: '老师已关闭该任务作业的上传',\r\n                                            }):\r\n                                    setUploadVisible(!uploadVisible);\r\n                                    setStudentCourseId(record.studentCourseId);\r\n                                    setTaskId(e.id);\r\n                                }\r\n                            }\r\n\r\n                        >\r\n                            上传作业\r\n                        </span>\r\n                        <span\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                            onClick={() => {\r\n                                setCheckWorkVisible(!checkWorkVisible);\r\n                                handleStudentQuerySubmit({\r\n                                    taskId: e.id,\r\n                                    userId: userId,\r\n                                })\r\n                            }}\r\n                        >\r\n                            查看作业\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        const el = (\r\n            <>\r\n                <Table\r\n                    size={'small'}\r\n                    rowKey={(record)=>(record.id)}\r\n                    columns={columns}\r\n                    dataSource={courseTask[record.teacherCourseId]}\r\n                    pagination={false}\r\n                />\r\n            </>\r\n        );\r\n        return el;\r\n    };\r\n    //主列表\r\n    const columns = [\r\n        { title: '实验课程', dataIndex: 'courseName', key: 'courseName' },\r\n        { title: '教学班备注', dataIndex: 'remark', align: 'center', key: 'remark' },\r\n        { title: '课程编号', dataIndex: 'teacherCourseId', align: 'center', key: 'teacherCourseId' },\r\n        { title: '实验教师', dataIndex: 'teacherName', align: 'center', key: 'teacherName' },\r\n        { title: '选课时间', dataIndex: 'addTime', align: 'center', key: 'addTime' },\r\n        {\r\n            title: '课程处理',\r\n            align: 'center',\r\n            render: (e)=>(\r\n                <span\r\n                    onClick={()=>deleteConfirm(e, \"deleteCourse\")}\r\n                    style={{color: \"#B30000\", cursor: \"pointer\"}}\r\n                >\r\n                    删除任务\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n\r\n    const uploadProps = {\r\n                beforeUpload:\r\n                    file => {\r\n                        fileList.push(file);\r\n                        return false\r\n                    },\r\n                onRemove:\r\n                    file=>{\r\n                        const index = fileList.indexOf(file.originFileObj);\r\n                        fileList.splice(index, 1);\r\n                    }\r\n            };\r\n\r\n    return (\r\n            <div>\r\n                <Table\r\n                    rowKey={record => record.teacherCourseId}\r\n                    size={'small'}\r\n                    columns={columns}\r\n                    expandedRowRender={(record)=>expandedRowRender(record)}\r\n                    onExpand = {\r\n                        (expanded,record)=>{\r\n                            expanded && handleFetchTaskRes({teacherCourseId: record.teacherCourseId, courseTask});\r\n                        }\r\n                    }\r\n                    dataSource={[...myCourse]}\r\n                    pagination={false}\r\n                />\r\n                <Modal\r\n                    title = {\"上传作业\"}\r\n                    visible = {uploadVisible}\r\n                    footer={\r\n                        <Button\r\n                            loading={uploadLoading}\r\n                            type = \"primary\"\r\n                            onClick={()=>{\r\n                                studentUploadWork();\r\n                                setUploadLoading(!uploadLoading)\r\n                            }}\r\n                        >\r\n                            上传文件\r\n                        </Button>\r\n                    }\r\n                    destroyOnClose = {true}\r\n                    onCancel={() => {\r\n                        setUploadVisible(!uploadVisible);\r\n                        setUploadLoading(false);\r\n\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Alert type='info' showIcon message={\r\n                            <div>\r\n                                <div>只能上传大小不超过<span className=\"fontC_red\">{Array.isArray(param) && param[4].keyValue + 'M'}</span>的文件，且同名文件将会覆盖</div>\r\n                                <div>可以拖动鼠标或者按住ctrl键选择多个文件上传</div>\r\n                            </div>\r\n                        } />\r\n                        <div className='padding_column_xs'>\r\n                            <Upload\r\n                            {...uploadProps}\r\n                            multiple = {true}\r\n                        >\r\n                            <Button>选择文件</Button>\r\n                        </Upload>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    title = {\"查看作业\"}\r\n                    visible = {checkWorkVisible}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        setCheckWorkVisible(!checkWorkVisible)\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Table\r\n                        rowKey={e=> (e.id)}\r\n                        pagination={false}\r\n                        scroll={{y: \"17.5rem\"}}\r\n                        size = \"small\"\r\n                        dataSource={[...checkList]}\r\n                        columns={[\r\n                            {title: \"作业名称\", dataIndex: \"workName\", key: \"workName\", width: \"55%\"},\r\n                            {title: \"上传时间\", dataIndex: \"addTime\", align: 'center', key: \"addTime\",},\r\n                            {\r\n                                title: \"作业操作\",\r\n                                key: \"handleWork\",\r\n                                align: 'center',\r\n                                render: (e) => (\r\n                                    <>\r\n                                        <a\r\n                                            download={\"\"}\r\n                                            href={e.url}\r\n                                            style={{color: \"#189EFF\", cursor: \"pointer\"}}\r\n                                        >\r\n                                            下载\r\n                                        </a>\r\n                                        <span\r\n                                            onClick={() => deleteConfirm(e, \"deleteHomework\")}\r\n                                            style={{color: \"#B30000\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                                        >\r\n                                            删除\r\n                                        </span>\r\n                                    </>\r\n                                )\r\n                            },\r\n                        ]}\r\n                    />\r\n                        <div className=\"fontS_12 padding_column_xxs fontC_red\" >请注意！上传的作业将于每年8月1日清空，请及时备份</div>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </div>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        type: state.getIn([\"userMana\", \"common\", \"type\"]),\r\n        myCourse: state.getIn([\"course\", \"myCourse\"]),\r\n        courseTask: state.getIn([\"course\", \"courseTask\"]),\r\n        checkList: state.getIn([\"course\", \"checkList\"]),\r\n        studentUploadFlag: state.getIn([\"course\", \"studentUploadFlag\"]),\r\n        param: state.getIn([\"userMana\", \"common\", \"param\"])\r\n    }),\r\n    dispatch => ({\r\n        handleMyCourseRes(args){\r\n            dispatch(course.queryMyCourse(args));\r\n        },\r\n        handleFetchTaskRes(teacherCourseId,courseTask){\r\n            dispatch(course.fetchCourseTask(teacherCourseId, courseTask));\r\n        },\r\n        handleStudentDeleteCourse(args){\r\n            dispatch(course.studentDeleteCourse(args))\r\n        },\r\n        handleStudentQuerySubmit(args){\r\n            dispatch(course.studentQuerySubmit(args))\r\n        },\r\n        handleStudentUploadWork(args){\r\n            dispatch(course.studentUploadHomework(args))\r\n        },\r\n        handleStudentDeleteHomework(args){\r\n            dispatch(course.studentDeleteHomework(args))\r\n        }\r\n\r\n    })\r\n)(StudentTasks);\r\n","/* eslint-disable */\nimport { saveAs } from 'file-saver'\nimport XLSX from 'xlsx'\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\n\n      //Skip ranges\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\n        }\n      });\n\n      //Handle Row Span\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      };\n\n      //Handle Value\n      outRow.push(cellValue !== \"\" ? cellValue : null);\n\n      //Handle Colspan\n      if (colspan)\n        for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\n    }\n    out.push(outRow);\n  }\n  return [out, ranges];\n};\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n\n      if (typeof cell.v === 'number') cell.t = 'n';\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\n      else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n\n      ws[cell_ref] = cell;\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n\n  /* original data */\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n  ws['!merges'] = ranges;\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\")\n}\n\nexport function export_json_to_excel({\n  multiHeader = [],\n  header,\n  data,\n  filename,\n  merges = [],\n  autoWidth = true,\n  bookType = 'xlsx'\n} = {}) {\n  /* original data */\n  filename = filename || 'excel-list'\n  data = [...data]\n  data.unshift(header);\n\n  for (let i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i])\n  }\n\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(item => {\n      ws['!merges'].push(XLSX.utils.decode_range(item))\n    })\n  }\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    const colWidth = data.map(row => row.map(val => {\n      /*先判断是否为null/undefined*/\n      if (val == null) {\n        return {\n          'wch': 10\n        };\n      }\n      /*再判断是否为中文*/\n      else if (val.toString().charCodeAt(0) > 255) {\n        return {\n          'wch': val.toString().length * 2\n        };\n      } else {\n        return {\n          'wch': val.toString().length\n        };\n      }\n    }))\n    /*以第一行为初始值*/\n    let result = colWidth[0];\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\n          result[j]['wch'] = colWidth[i][j]['wch'];\n        }\n      }\n    }\n    ws['!cols'] = result;\n  }\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), `${filename}.${bookType}`);\n}\n\nfunction formatJson(jsonSource, jsonFillter) {\n  return jsonSource.map(v => jsonFillter.map(j => {\n      return v[j]\n  }))\n}\n\nexport function export_json_to_excel2(th, jsonSource, jsonFillter, name) {\n  const data = formatJson(jsonSource, jsonFillter)\n  export_json_to_excel({header: th, data, filename: name})\n}","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport {Table, Input} from \"antd\";\r\nimport * as course from \"../redux/actionCreators/resource\";\r\n//老师的上机任务显示的第二个界面\r\n\r\nconst { Search } = Input;\r\n\r\nconst AllCourse = props => {\r\n    const { type, userId, courseTotal, allCourse, handleTeacherAddCourse, handleTeacherQueryCourse } = props;\r\n    useEffect(()=>{\r\n        handleTeacherQueryCourse({page: 1, userId: userId, courseName: ''});\r\n    },[userId]);\r\n    const [args, setArgs] = useState({page: 1, courseName: '', userId});\r\n\r\n    const columns = [\r\n        { title: '课程名', dataIndex: 'courseName', key: 'courseName' },\r\n        { title: '课程编号', dataIndex: 'courseNumber', align: 'center', key: 'courseNumber' },\r\n        { title: '发布时间', dataIndex: 'addTime',  align: 'center', key: 'addTime' },\r\n            {\r\n                title: '课程处理',\r\n                key: 'addTask',\r\n                align: 'center',\r\n                render: (e) => (\r\n                    <span\r\n                        onClick={() =>(\r\n                            handleTeacherAddCourse({\r\n                                courseId: e.id,\r\n                                teacherId: userId,\r\n                                type: type,\r\n                            })\r\n                        )}\r\n                        style={{color: \"#189EFF\", cursor: \"pointer\"}}\r\n                    >\r\n                        添加课程\r\n                    </span>\r\n                )\r\n            }\r\n    ];\r\n    //搜索\r\n    const handleSearch = (value) => {\r\n        setArgs({\r\n            ...args,\r\n            page: 1,\r\n            courseName: value\r\n        })\r\n        handleTeacherQueryCourse({\r\n            ...args,\r\n            page: 1,\r\n            courseName: value\r\n        })\r\n    }\r\n    //翻页\r\n    const changePage = (page) => {\r\n        setArgs({\r\n            ...args,\r\n            page: page\r\n        })\r\n        handleTeacherQueryCourse({\r\n            ...args,\r\n            page: page\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"margin_column_xxs\" style={{width: '15rem'}}>\r\n                <Search\r\n                    enterButton\r\n                    placeholder='请输入课程名'\r\n                    onSearch={handleSearch}\r\n                />\r\n            </div>\r\n            <Table\r\n                width={1024}\r\n                size={'small'}\r\n                rowKey={record => record.id}\r\n                columns={columns}\r\n                dataSource={[...allCourse]}\r\n                pagination={{\r\n                    current: args.page,\r\n                    total: courseTotal,\r\n                    onChange:changePage\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        courseTotal: state.getIn([\"course\", \"courseTotal\"]),\r\n        allCourse: state.getIn([\"course\", \"allCourse\"]),\r\n        type: state.getIn([\"userMana\", \"common\", \"type\"])\r\n\r\n    }),\r\n    dispatch => ({\r\n        handleTeacherAddCourse(args){\r\n            dispatch(course.teacherAddCourse(args));\r\n        },\r\n        handleTeacherQueryCourse(args){\r\n            dispatch(course.teacherQueryCourse(args));\r\n        }\r\n    })\r\n)\r\n(AllCourse);\r\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport {Modal, Input, Select, Table} from \"antd\";\nimport { teacherAddStudent } from '../redux/actionCreators/resource';\nimport * as resource from \"../redux/actionCreators/resource\";\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst AddStudents = (props) => {\n    const [searchInfo, setSearchInfo] = useState({type: 'userId', page: 1, input: ''})\n\n    const {\n        studentMessage,\n        total,\n        teacherCourseId,\n        visibleCallback,\n        addStudentVisible,\n        handleTeacherAddStudent,\n        handleSearchStudent\n    } = props;\n    //改变option\n    const handleSelect = (value) => {\n        setSearchInfo({\n            ...searchInfo,\n            type: value\n        })\n    }\n    //翻页\n    const changePage = (page) => {\n        setSearchInfo({\n            ...searchInfo,\n            page: page\n        });\n        handleSearchStudent({\n            page: page,\n            type: \"student\",\n            userId: searchInfo.type === 'userId' ? searchInfo.input : '',\n            userName: searchInfo.type === 'userName' ? searchInfo.input : ''\n        })\n\n    }\n    //查询学生信息\n    const search = (value) => {\n        setSearchInfo({\n            ...searchInfo,\n            input: value\n        })\n        handleSearchStudent({\n                    page: 1,\n                    type: \"student\",\n                    userId: searchInfo.type === 'userId' ? value : '',\n                    userName: searchInfo.type === 'userName' ? value : ''\n                })\n    };\n\n    //教师为学生添加课程\n    const addCourse = (e) => {\n        handleTeacherAddStudent(\n            {\n                userId: e.userId,\n                teacherCourseId: teacherCourseId\n            }\n        )\n    }\n\n    const columns = [\n        { title: \"学生姓名\", align: 'center', dataIndex: \"userName\", key: \"userName\" },\n        { title: \"学生学号\", align: 'center', dataIndex: \"userId\", key: \"userId\" },\n        {\n            title: \"操作\",\n            key: \"operate\",\n            align: 'center',\n            render: (e)=> (\n                <span\n                    onClick={()=>(addCourse(e))}\n                    style={{color: 'rgb(24, 144, 255)' ,cursor: \"pointer\",}}\n                >\n                    添加\n                </span>\n            )\n        }\n    ]\n\n    return (\n        <Modal\n            visible={addStudentVisible}\n            onCancel={() => (visibleCallback(false))}\n            footer={null}\n        >\n            <div style={{width: '17rem'}} className='flex margin_column_xs'>\n                <Select\n                    defaultValue='userId'\n                    onChange={handleSelect}\n                >\n                    <Option value='userId'>学号</Option>\n                    <Option value='userName'>姓名</Option>\n                </Select>\n                <Search\n                    onSearch={search}\n                    enterButton\n                />\n            </div>\n            <Table\n                dataSource={studentMessage}\n                columns={columns}\n                pagination={{\n                    current: searchInfo.page,\n                    total,\n                    onChange: changePage\n                }}\n            />\n        </Modal>\n    )\n};\n\nexport default connect(\n    state => ({\n        studentMessage: state.getIn([\"resource\", \"resource\", \"studentMessage\"]),\n        total: state.getIn([\"resource\", \"resource\", \"studentTotal\"]),\n        userId: state.getIn([\"resource\", \"resource\", \"studentId\"]),\n        userName: state.getIn([\"resource\", \"resource\", \"studentName\"]),\n        page: state.getIn([\"resource\", \"resource\", \"page\"]),\n\n    }),\n    dispatch => ({\n        handleTeacherAddStudent(args){\n            dispatch(teacherAddStudent(args))\n        },\n        handleSearchStudent(args){\n            dispatch(resource.fetchStudentMes(args))\n        }\n    })\n)(AddStudents)\n","\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Modal, Input, Button, Icon, Upload, message } from \"antd\";\r\nimport * as course from \"../redux/actionCreators/resource\";\r\nimport { export_json_to_excel2 } from \"../lib/Export2Excel\";\r\nimport AllCourse from \"./AllCourse\";\r\nimport AddStudents from \"./addStudents\";\r\n\r\nconst { confirm } = Modal;\r\n//教师任务的第一个\r\nconst TeacherTasks = props => {\r\n    const {\r\n        type, userId, submitTotal, submitList,downloadUrl,unSubmitList,\r\n        courseTask, myCourse, teacherUploadFlag, teacherUpdateFlag,\r\n        handleAddRemark, handleMyCourseRes,studentCourseList,\r\n        handleFetchTaskRes, handleTeacherDeleteCourse,\r\n        handleTeacherReleaseTask, handleTeacherDeleteTask,\r\n        handleToggleUpload, handleTeacherQuerySubmit,\r\n        handleTeacherQueryUnsubmit,handleTeacherUpdateTask,\r\n        handleTeacherDownloadSubmit,handleDeleteStudentCourse,\r\n        handleCheckStudent,\r\n    } = props;\r\n    const [ releaseVisible, setReleaseVisible ] = useState(false);\r\n    const [ remarkVisible, setRemarkVisible ] = useState(false);\r\n    const [ textVisible, setTextVisible ] = useState(true);\r\n    const [ updateVisible, setUpdateVisible ] = useState(false);\r\n    const [ unSubmitVisible, setUnSubmitVisible ] = useState(false);\r\n    const [ submitVisible, setSubmitVisible ] = useState(false);\r\n    const [ downloadVisible, setDownloadVisible ] = useState(false);\r\n    const [ checkStudentVisible, setCheckStudentVisible ] = useState(false);\r\n    const [ addCourseVisible, setAddCourseVisible ] = useState(false);\r\n    const [ addStudentVisible, setAddStudentVisible ] = useState(false);\r\n    const [teacherCourseId, setTeacherCourseId] = useState(\"\");\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskId, setTaskId] = useState();\r\n    const [userIdList, setUserIdList] = useState('');\r\n    const [updateName, setUpdateName] = useState(\"\");\r\n    const [ remark, setRemark ] = useState(\"\");\r\n    const [files, setFiles] = useState([]);\r\n    const [updateFiles,setUpdateFiles] = useState([]);\r\n    const [uploadLoading, setUploadLoading] = useState(false);\r\n    const [updateLoading, setUpdateLoading] = useState(false);\r\n    const [uploadBtn, setUploadBtn] = useState(false);\r\n    const [updateBtn, setUpdateBtn] = useState(false);\r\n    const [checkSubmit, setCheckSubmit] = useState({page: 1, rows: 10});\r\n    useEffect(()=>{\r\n        handleMyCourseRes({ userId: userId, type:type })\r\n    },[]);\r\n    useEffect(()=>{\r\n        setReleaseVisible(false);\r\n        setUploadLoading(false);\r\n        setUploadBtn(false);\r\n    },[teacherUploadFlag]);\r\n    useEffect(()=>{\r\n        setUpdateVisible(false);\r\n        setUpdateLoading(false);\r\n        setUpdateBtn(false);\r\n    },[teacherUpdateFlag]);\r\n\r\n    //删除课程或任务时弹出的确认框\r\n    const deleteConfirm = (e, action) => {\r\n        confirm({\r\n            title: \"请确认~\",\r\n            content: action === 'deleteTask' ? '删除将会移除所有学生作业，无法撤销，您确定吗？' : '删除该实验课程，会删除和该课程相关的作业及实验任务附件，您确定吗？',\r\n            onOk() {\r\n                action === \"deleteTask\" ?\r\n                        handleTeacherDeleteTask({\r\n                            taskId: e.id,\r\n                            teacherCourseId: e.teacherCourseId\r\n                        })\r\n                    :\r\n                        handleTeacherDeleteCourse({\r\n                            id: e.teacherCourseId,\r\n                            userId: userId,\r\n                            teacherCourseId:e.teacherCourseId\r\n                        })\r\n            },\r\n            onCancel() {}\r\n        })\r\n    };\r\n    //实现手动上传文件后发布任务\r\n    const handleUpload = () => {\r\n        if(taskName && taskName.trim().length !== 0){\r\n            handleTeacherReleaseTask(\r\n                files.length > 0 ?\r\n                {\r\n                    teacherCourseId: teacherCourseId,\r\n                    userId: userId,\r\n                    taskName: taskName,\r\n                    file: files[0],\r\n                    courseTask: courseTask\r\n                }\r\n            :\r\n                    {\r\n                        teacherCourseId: teacherCourseId,\r\n                        userId: userId,\r\n                        taskName: taskName,\r\n                        file: \"\",\r\n                        courseTask: courseTask\r\n                    }\r\n            );\r\n            setTaskName(\"\");\r\n            setFiles([]);\r\n        } else {\r\n            message.error(\"任务名不能为空哦！\");\r\n            setUploadLoading(false);\r\n        }\r\n    };\r\n    const handleUpdate = () => {\r\n        if(updateName && updateName.trim().length !== 0){\r\n            handleTeacherUpdateTask({\r\n                id: taskId,\r\n                taskName: updateName,\r\n                file: updateFiles[0],\r\n                teacherCourseId: teacherCourseId,\r\n                userId: userId\r\n            });\r\n            setUpdateFiles([]);\r\n            setTaskName(\"\");\r\n        }\r\n        else{\r\n            message.error(\"任务名不能为空哦！\");\r\n            setUpdateLoading(false);\r\n\r\n\r\n        }\r\n    };\r\n    //添加/修改教学班备注\r\n    const addRemark = () =>{\r\n        handleAddRemark({\r\n            teacherCourseId: teacherCourseId,\r\n            remark: remark,\r\n        });\r\n        setTimeout(()=>{\r\n            setRemarkVisible(!remarkVisible);\r\n            setRemark(\"\");\r\n        }, 1000 );\r\n    };\r\n    //点击那个加号展开实验任务详情\r\n    const expandedRowRender = record => {\r\n        const columns = [\r\n            { title: '任务名称', width: \"18%\", dataIndex: 'taskName', key: 'taskName', align: 'center' },\r\n            {\r\n                title: '任务附件',\r\n                key: 'taskFileName',\r\n                align: 'center',\r\n                width: \"18%\",\r\n                render: e => (\r\n                    <a download={\"\"} href = {e.url}>{e.taskFileName}</a>\r\n                )\r\n            },\r\n            { title: '发布时间', dataIndex: 'addTime', key: 'addTime', align: 'center' },\r\n            {\r\n                title: '学生作业',\r\n                key: 'studentWork',\r\n                align: 'center',\r\n                render: e => (\r\n                    <div>\r\n                        <span\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                            onClick={() => checkWorks(e)}\r\n                        >\r\n                            查看作业\r\n                        </span>\r\n                        <span\r\n                            onClick={()=>{\r\n                                handleToggleUpload({\r\n                                    taskId: e.id,\r\n                                    teacherCourseId: e.teacherCourseId,\r\n                                })\r\n                            }}\r\n                            style={{color: e.closed ? \"darkBlue\" : \"#B30000\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                        >\r\n                            {\r\n                                e.closed ? \"开启作业提交\" : \"关闭作业提交\"\r\n                            }\r\n                        </span>\r\n                        <span\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                            onClick={()=>{\r\n                                setUnSubmitVisible(!unSubmitVisible);\r\n                                handleTeacherQueryUnsubmit({\r\n                                    teacherCourseId: e.teacherCourseId,\r\n                                    taskId: e.id,\r\n                                });\r\n                            }}\r\n                        >\r\n                            未提交名单\r\n                        </span>\r\n                    </div>\r\n                )\r\n            },\r\n            {\r\n                title: '任务处理',\r\n                key: \"dealTask\",\r\n                align: 'center',\r\n                render: (e)=>(\r\n                    <div>\r\n                    <span\r\n                        onClick = {\r\n                            () => {\r\n                                setUpdateVisible(!updateVisible);\r\n                                setUpdateName(e.taskName);\r\n                                setTaskId(e.id);\r\n                                setTeacherCourseId(e.teacherCourseId);\r\n                            }\r\n                        }\r\n                        style = {{color: \"#189EFF\", cursor: \"pointer\"}}\r\n                    >\r\n                        修改任务\r\n                    </span>\r\n                        <span\r\n                            onClick={()=>deleteConfirm(e, \"deleteTask\")}\r\n                            style={{color: \"#B30000\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                        >\r\n                        删除任务\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        const el = (\r\n            <>\r\n                <Table\r\n                    size={'small'}\r\n                    rowKey={e => (e.id)}\r\n                    columns={columns}\r\n                    dataSource={courseTask[record.teacherCourseId]}\r\n                    pagination={false}\r\n                />\r\n            </>\r\n        );\r\n        return el;\r\n    };\r\n    //删除学生\r\n    const deleteStudent = (e) => {\r\n        confirm({\r\n            title: '将删除学生上传到该任务的所有作业，请下载该学生的作业备份再删除',\r\n            onOk(){\r\n                handleDeleteStudentCourse({\r\n                    studentCourseIdList: e.studentCourseId,\r\n                });\r\n            },\r\n            onCancel(){\r\n            }\r\n        })\r\n    }\r\n    //导出学生\r\n    const exportStudent = () => {\r\n        const tHeader = ['学生姓名', '学号']\r\n        const filterVal = ['userName', 'userId']\r\n        export_json_to_excel2(tHeader, studentCourseList, filterVal, '选课学生信息')\r\n    }\r\n    //下载作业\r\n    const downloadWorks = (type) =>{\r\n        if(type === 'part'){\r\n            if(userIdList.length !== 0) {\r\n                const hide = message.loading('文件正在打包中，请耐心等待～', 0);\r\n                handleTeacherDownloadSubmit({\r\n                    userIdList: userIdList,\r\n                    taskId: taskId,\r\n                    callback: e => (setDownloadVisible(e)),\r\n                    hide: hide\r\n                });\r\n            } else {\r\n                message.error('您还没有选择要下载的作业哦～')\r\n            }\r\n        } else if(type === 'all') {\r\n            const hide = message.loading('若文件体积过大，可能需要较长时间哦，请耐心等待～', 0);\r\n            handleTeacherDownloadSubmit({\r\n                userIdList: '',\r\n                taskId: taskId,\r\n                callback: e => (setDownloadVisible(e)),\r\n                hide:hide\r\n            });\r\n        }\r\n        }\r\n    //查看学生作业\r\n    const checkWorks = (e)=>{\r\n        setUserIdList('');\r\n        setCheckSubmit(\r\n            {\r\n                ...checkSubmit,\r\n                taskId: e.id\r\n            }\r\n        )\r\n        handleTeacherQuerySubmit({\r\n            ...checkSubmit,\r\n            taskId: e.id\r\n        });\r\n        setSubmitVisible(true);\r\n        setTaskId(e.id);\r\n    }\r\n    //查看学生作业中的翻页\r\n    const changePage = (e) => {\r\n        setCheckSubmit(\r\n            {\r\n                ...checkSubmit,\r\n                page: e\r\n            }\r\n        )\r\n        handleTeacherQuerySubmit({\r\n            ...checkSubmit,\r\n            page: e\r\n        })\r\n\r\n    }\r\n    //改变学生作业中每页显示数量\r\n    const onShowSizeChange = (current, pageSize) => {\r\n        setCheckSubmit(\r\n            {\r\n                ...checkSubmit,\r\n                page: 1,\r\n                rows: pageSize\r\n            }\r\n        )\r\n        handleTeacherQuerySubmit({\r\n            ...checkSubmit,\r\n            page: 1,\r\n            rows: pageSize\r\n        })\r\n    }\r\n\r\n\r\n    const columns = [\r\n        { title: '实验课程', dataIndex: 'courseName', key: 'courseName',align: 'center', },\r\n        { title: '教学班编号', dataIndex: 'teacherCourseId', key: 'teacherCourseId', align: 'center', },\r\n        {\r\n            title: '教学班备注',\r\n            key: 'remark',\r\n            align: 'center',\r\n            render: e => (\r\n                <div\r\n                    onClick = {\r\n                        ()=>{\r\n                            setTeacherCourseId(e.teacherCourseId);\r\n                            setRemarkVisible(!remarkVisible);\r\n                            setRemark(e.remark);\r\n                        }\r\n                    }\r\n                    style={{color: e.remark ? \"#F0BB04\" :\"#189EFF\", cursor: \"pointer\"}}\r\n                >{\r\n                    e.remark ?\r\n                        <div><span className=\"padding_row_xxs\" style={{color: 'rgba(0, 0, 0, 0.65)'}}>{e.remark.length > 10 ? e.remark.substr(0, 10) + '...' : e.remark}</span>修改</div>\r\n                        :\r\n                        <div>添加</div>\r\n                }\r\n                </div>\r\n            )\r\n        },\r\n        { title: '课程编号', dataIndex: 'courseNumber', key: 'courseNumber', align: 'center', },\r\n        { title: '添加时间', dataIndex: 'addTime', key: 'addTime', align: 'center', },\r\n        {\r\n            title: '课程处理',\r\n            key: \"dealCourse\",\r\n            align: 'center',\r\n            render: (e)=>(\r\n                <div>\r\n                    <span\r\n                        onClick={\r\n                            ()=>{\r\n                                setTeacherCourseId(e.teacherCourseId);\r\n                                setReleaseVisible(true);\r\n                            }\r\n                        }\r\n                        style={{color: \"#189EFF\", cursor: \"pointer\"}}\r\n                    >\r\n                        发布任务\r\n                    </span>\r\n                    <span\r\n                        onClick={()=>deleteConfirm(e, \"deleteCourse\")}\r\n                        style={{color: \"#B30000\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                    >\r\n                        删除课程\r\n                    </span>\r\n                    <span\r\n                        onClick={()=>{\r\n                            setTeacherCourseId(e.teacherCourseId);\r\n                            handleCheckStudent({\r\n                                teacherCourseId: e.teacherCourseId\r\n                            });\r\n                            setCheckStudentVisible(true);\r\n                        }}\r\n                        style={{color: \"#F0BB04\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                    >\r\n                        学生信息\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    ];\r\n\r\n    const releaseProps = {\r\n        beforeUpload:\r\n            file => {\r\n                files.push(file);\r\n                files.length > 0 ? setUploadBtn(true) : setUploadBtn(false);\r\n                return false\r\n            },\r\n        onRemove:\r\n            file=>{\r\n                const index = files.indexOf(file.originFileObj);\r\n                files.splice(index, 1);\r\n                files.length > 0 ? setUploadBtn(true) : setUploadBtn(false);\r\n\r\n            },\r\n    };\r\n\r\n    const updateProps = {\r\n        beforeUpload:\r\n            file => {\r\n                updateFiles.push(file);\r\n                updateFiles.length > 0 ? setUpdateBtn(true) : setUpdateBtn(false);\r\n                return false\r\n            },\r\n        onRemove:\r\n            file=>{\r\n                const index = updateFiles.indexOf(file.originFileObj);\r\n                updateFiles.splice(index, 1);\r\n                updateFiles.length > 0 ? setUpdateBtn(true) : setUpdateBtn(false);\r\n\r\n            }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => {setAddCourseVisible(true)}} type='primary' className='margin_column_xxs' >\r\n                <Icon type={'plus'} />\r\n                添加\r\n            </Button>\r\n            <Table\r\n                rowKey={record => record.teacherCourseId}\r\n                size={'small'}\r\n                columns={columns}\r\n                expandedRowRender={(record)=>expandedRowRender(record)}\r\n                onExpand = {\r\n                    (expanded,record)=>{\r\n                        expanded && handleFetchTaskRes({teacherCourseId: record.teacherCourseId, courseTask});\r\n                    }\r\n                }\r\n                dataSource={[...myCourse]}\r\n                pagination={false}\r\n            />\r\n            <Modal\r\n                width={'64rem'}\r\n                title='添加课程'\r\n                visible={addCourseVisible}\r\n                footer={null}\r\n                onCancel = {() => {\r\n                    setAddCourseVisible(false);\r\n                }}\r\n            >\r\n                <AllCourse />\r\n            </Modal>\r\n            <Modal\r\n                title = \"发布实验任务及上传附件\"\r\n                visible = {releaseVisible}\r\n                onCancel={() => {\r\n                    setReleaseVisible(false);\r\n                    setUploadLoading(false);\r\n                    setFiles([]);\r\n                    setTaskName(\"\");\r\n                }}\r\n                footer = {[\r\n                    <Button\r\n                        onClick={() => {\r\n                            setReleaseVisible(!releaseVisible);\r\n                            setUploadLoading(false);\r\n                            setUploadBtn(false);\r\n                            setFiles([]);\r\n                            setTaskName(\"\");\r\n                        }}\r\n                    >\r\n                        取消\r\n                    </Button>\r\n                ]}\r\n                destroyOnClose = {true}\r\n            >\r\n                <div style={{display: \"flex\", marginBottom: \"0.75rem\"}}>\r\n                    <Input\r\n                        style={{width: \"75%\"}}\r\n                        value={taskName}\r\n                        placeholder = {\"请输入任务名称\"}\r\n                        onChange = {(e) =>{\r\n                            setTaskName(e.target.value);\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        style={{marginLeft: \"0.75rem\"}}\r\n                        type = {\"primary\"}\r\n                        loading = {uploadLoading}\r\n                        onClick={()=> {\r\n                            if(files.length <= 1){\r\n                                setUploadLoading(true);\r\n                                handleUpload();\r\n                            }else{\r\n                                message.error(\"只能上传一个附件!\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        发布任务\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <div style={{display: \"flex\", alignItems: \"center\"}} >\r\n                        <Upload\r\n                            {...releaseProps}\r\n                        >\r\n                            <Button\r\n                                disabled={uploadBtn}\r\n                                onClick={()=>(setTextVisible(false))}\r\n                                style={{marginRight: \"0.625rem\"}}\r\n                            >\r\n                                <Icon type = \"upload\"/>\r\n                                选择文件\r\n                            </Button>\r\n                        </Upload>\r\n                        <p style={{ display: textVisible ? \"\" : \"none\" }}>{textVisible ? '(注：上传的文件将覆盖原有文件！)' : '可不上传文件直接发布任务'}</p>\r\n                    </div>\r\n                    <div className=\"fontC_red fontS_12 padding_column_xxs\">发布的任务和上传到该任务的作业，将于每年8月1日清空，请老师及时备份。</div>\r\n                </div>\r\n        </Modal>\r\n\r\n            <Modal\r\n                rowKey = {e=>e.id}\r\n                title = \"修改任务\"\r\n                visible = {updateVisible}\r\n                onCancel={() => {\r\n                    setUpdateVisible(!updateVisible);\r\n                    setUpdateLoading(false);\r\n                    setUpdateBtn(false);\r\n                    setUpdateFiles([]);\r\n                }}\r\n                footer = {[\r\n                    <Button\r\n                        disabled={updateBtn}\r\n                        onClick={() => {\r\n                            setUpdateVisible(!updateVisible);\r\n                            setUpdateLoading(false);\r\n                          }\r\n                        }\r\n                    >\r\n                        取消\r\n                    </Button>\r\n                ]}\r\n                destroyOnClose = {true}\r\n\r\n            >\r\n                <div style={{display: \"flex\", marginBottom: \"0.75rem\"}}>\r\n                    <Input\r\n                        style={{width: \"75%\"}}\r\n                        value = {updateName}\r\n                        onChange = {(e) =>{\r\n                            setUpdateName(e.target.value);\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        loading={updateLoading}\r\n                        style={{marginLeft: \"0.75rem\"}}\r\n                        type = {\"primary\"}\r\n                        onClick={()=>{\r\n                            setUpdateLoading(true);\r\n                            handleUpdate();\r\n                        }}\r\n                    >\r\n                        确认修改\r\n                    </Button>\r\n                </div>\r\n                <div\r\n                    style={{display: \"flex\", alignItems: \"center\"}}\r\n                >\r\n                    <Upload\r\n                        {...updateProps}\r\n                        showUploadList={true}\r\n                        multiple = {true}\r\n                    >\r\n                        <Button\r\n                            disabled={updateBtn}\r\n                            onClick={()=>(setTextVisible(false))}\r\n                            style={{marginRight: \"0.625rem\"}}\r\n                        >\r\n                            <Icon type = \"upload\"/>\r\n                            选择文件\r\n                        </Button>\r\n                    </Upload>\r\n                    <p style={{ display: textVisible ? \"\" : \"none\" }}>(注：可不上传文件直接发布任务~)</p>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title = {`${remark ? \"修改\" : \"添加\"}备注`}\r\n                visible={remarkVisible}\r\n                footer = {null}\r\n                onCancel={()=>setRemarkVisible(!remarkVisible)}\r\n            >\r\n                <div  style = {{display: \"flex\" }} >\r\n                <Input\r\n                    style={{marginRight: \"0.8125rem\"}}\r\n                    placeholder={`${remark ? remark : \"请输入内容（如：班级代码、专业等）\"}`}\r\n                    value={remark}\r\n                    onChange = {(e) =>{\r\n                        setRemark(e.target.value);\r\n                    }}\r\n                />\r\n                <Button\r\n                    type={\"primary\"}\r\n                    onClick={()=>addRemark()}\r\n                >\r\n                    确认\r\n                </Button>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                title = \"未提交作业名单\"\r\n                visible={unSubmitVisible}\r\n                footer = {null}\r\n                onCancel={() => { setUnSubmitVisible(!unSubmitVisible) }}\r\n            >\r\n                <Table\r\n                    rowKey={e => (e.studentId)}\r\n                    size = \"small\"\r\n                    dataSource={[...unSubmitList]}\r\n                    columns={[\r\n                        { title: \"学生姓名\", dataIndex: \"userName\", key: \"userName\" },\r\n                        { title: \"学生学号\", dataIndex: \"userId\", key: \"userId\" }\r\n                    ]}\r\n                    pagination={false}\r\n\r\n                />\r\n\r\n            </Modal>\r\n            <Modal\r\n                title = \"选课学生信息\"\r\n                visible={checkStudentVisible}\r\n                footer = {null}\r\n                onCancel={() => { setCheckStudentVisible(false) }}\r\n                footer = {[\r\n                    <Button onClick={() => {setAddStudentVisible(true)}} >添加</Button>,\r\n                    <Button type='primary' onClick={exportStudent} >导出</Button>\r\n                ]}\r\n            >\r\n                <Table\r\n                    rowKey={e => (e.userId)}\r\n                    size={\"small\"}\r\n                    dataSource = {[...studentCourseList]}\r\n                    columns={[\r\n                        { title: \"学生姓名\", dataIndex: \"userName\", key: \"userName\" },\r\n                        { title: \"学生学号\", dataIndex: \"userId\", key: \"userId\" },\r\n                        {\r\n                            title: \"操作\",\r\n                            key: \"operate\",\r\n                            render: (e)=> (\r\n                                <span\r\n                                    onClick={()=>(deleteStudent(e))}\r\n                                    style={{color: \"#B30000\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                                >\r\n                                    删除\r\n                                </span>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    pagination={false}\r\n\r\n                />\r\n\r\n            </Modal>\r\n            <Modal\r\n                title={\"请确认！\"}\r\n                width={\"15rem\"}\r\n                visible={downloadVisible}\r\n                footer = {\r\n                    <a download=\"\" href={downloadUrl}>\r\n                        <Button type={\"primary\"} onClick={() => (setDownloadVisible(false))} >确定</Button>\r\n                    </a>\r\n                }\r\n                onCancel={()=>(setDownloadVisible(!downloadVisible))}\r\n            >\r\n                点击确认按钮即可开始下载～\r\n            </Modal>\r\n            <Modal\r\n                title={`已提交作业信息`}\r\n                visible={submitVisible}\r\n                width={\"64rem\"}\r\n                onCancel = {()=>(setSubmitVisible(!submitVisible))}\r\n                footer={null}\r\n            >\r\n\r\n                <Button\r\n                    className='margin_row_xxs'\r\n                    onClick={() => (downloadWorks('part'))}\r\n                    type = {\"primary\"}\r\n                    >\r\n                    <Icon type = \"download\" />\r\n                    选择下载\r\n                </Button>\r\n                <Button\r\n                    onClick={() => (downloadWorks('all'))}\r\n                    type = {\"primary\"}\r\n                >\r\n                    <Icon type = \"download\" />\r\n                    全部下载\r\n                </Button>\r\n                <Table\r\n                    rowKey={e => (e.id)}\r\n                    pagination={{\r\n                        current: checkSubmit.page,\r\n                        total:submitTotal,\r\n                        showSizeChanger: true,\r\n                        onShowSizeChange: onShowSizeChange,\r\n                        onChange: changePage\r\n                    }}\r\n                    rowSelection ={{\r\n                        onChange: (selectedRowKeys, selectedRows) => {\r\n                            //setStartDownload(selectedRows);\r\n                            let studentIdList = selectedRows.map((e)=>(\r\n                                e.studentId\r\n                            ));\r\n                            let idList = Array.from(new Set(studentIdList));\r\n                            setUserIdList(idList.join(\";\"));\r\n                        },\r\n                    }}\r\n                    dataSource={[...submitList]}\r\n                    columns={[\r\n                        {title: \"学生姓名\", dataIndex: \"userName\", key: \"userName\"},\r\n                        {title: \"学号\", dataIndex: \"studentId\", key: \"studentId\"},\r\n                        {\r\n                            title: \"作业名称\",\r\n                            key: \"workName\",\r\n                            render: (e)=>(\r\n                                <a href={e.url}>{e.workName}</a>\r\n                            )\r\n                        },\r\n                        {title: \"上传时间\", dataIndex: \"addTime\", key: \"addTime\"}]\r\n                    }\r\n                />\r\n\r\n            </Modal>\r\n            <AddStudents\r\n                addStudentVisible={addStudentVisible}\r\n                visibleCallback={(e) => (setAddStudentVisible(e))}\r\n                teacherCourseId={teacherCourseId}\r\n                />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        type: state.getIn([\"userMana\", \"common\", \"type\"]),\r\n        myCourse: state.getIn([\"course\", \"myCourse\"]),\r\n        courseTask: state.getIn([\"course\", \"courseTask\"]),\r\n        unSubmitList: state.getIn([\"course\", \"unsubmitList\"]),\r\n        submitList: state.getIn([\"course\", \"submitList\"]),\r\n        submitTotal: state.getIn([\"course\", \"submitTotal\"]),\r\n        downloadUrl: state.getIn([\"course\", \"downloadUrl\"]),\r\n        studentCourseList: state.getIn([\"course\", \"studentCourseList\"]),\r\n        studentCourseTotal: state.getIn([\"course\",\"studentCourseTotal\"]),\r\n        teacherUploadFlag: state.getIn([\"course\", \"teacherUploadFlag\"]),\r\n        teacherUpdateFlag: state.getIn([\"course\", \"teacherUpdateFlag\"]),\r\n    }) ,\r\n    dispatch => ({\r\n        handleMyCourseRes(args){\r\n            dispatch(course.queryMyCourse(args));\r\n        },\r\n        handleFetchTaskRes(teacherCourseId,courseTask){\r\n            dispatch(course.fetchCourseTask(teacherCourseId, courseTask));\r\n        },\r\n        handleTeacherDeleteCourse(args){\r\n            dispatch(course.teacherDeleteCourse(args))\r\n        },\r\n        handleTeacherReleaseTask(args){\r\n            dispatch(course.teacherReleaseTask(args))\r\n        },\r\n        handleTeacherUpdateTask(args){\r\n            dispatch(course.teacherUpdateTask(args))\r\n        },\r\n        handleAddRemark(args){\r\n            dispatch(course.teacherAddRemark(args))\r\n        },\r\n        handleTeacherDeleteTask(args){\r\n            dispatch(course.teacherDeleteTask(args))\r\n        },\r\n        handleToggleUpload(args){\r\n            dispatch(course.teacherToggleUpload(args));\r\n        },\r\n        handleTeacherQueryUnsubmit(args){\r\n            dispatch(course.teacherQueryUnsubmit(args))\r\n        },\r\n        handleTeacherQuerySubmit(taskId){\r\n            dispatch(course.teacherQuerySubmit(taskId))\r\n        },\r\n        handleTeacherDownloadSubmit(args){\r\n            dispatch(course.teacherDownloadSubmit(args))\r\n        },\r\n        handleDeleteStudentCourse(args){\r\n            dispatch(course.teacherDeleteStudent(args))\r\n        },\r\n        handleCheckStudent(args){\r\n            dispatch(course.teacherCheckStudent(args));\r\n        }\r\n    })\r\n)(TeacherTasks);\r\n","import React, {useEffect, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './index.scss';\n\nconst Nav = (props) => {\n\n    const { location } = props;\n\n    useEffect(() =>{\n        // const str = location.substr(0,location.lastIndexOf('/'));\n        // setActiveOne(str);\n        // console.log(location, 1234);\n        setActiveOne(location);\n    },[location]);\n\n    const { tabList } = props;\n    const [activeOne, setActiveOne] = useState('/user/home');\n\n    //改变activeOne\n    const changeActive = (path) =>{\n        setActiveOne(path);\n    }\n\n    return (\n        <div className='nav flex'>\n            {\n                tabList.length !== 0 && tabList.map((e) => {\n                    return (\n                        <Link to={e.path} key={e.path}>\n                            <div \n                                onClick={()=>changeActive(e.path)} \n                                className={`nav_item ${activeOne === e.path ? 'nav_active' : 'nav_not_active' }`} \n                            >\n                                {e.name}\n                            </div>\n                        </Link>\n                    )\n                })\n            }\n        </div>\n\n    )\n}\n\nexport default Nav;\n","/*\r\nTasks是一个集成组件，里面有一个小的tab，小的tab包括myTasks和allTasks\r\n小的tab的显示是在学生登录的时候\r\n游客只能看见allTask\r\n */\r\nimport React, {useEffect} from \"react\";\r\nimport { Card } from \"antd\";\r\nimport AllTasks from \"../components/AllTasks\";\r\nimport StudentTasks from \"../components/StudentTasks\";\r\nimport { connect } from \"react-redux\";\r\nimport TeacherTasks from \"../components/TeacherTasks\";\r\nimport Nav from \"../components/nav\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nconst Tasks = props => {\r\n    const { userIdentify } = props;\r\n\r\n    useEffect(() => {\r\n        props.history.location.pathname === '/user/task' && props.history.push('/user/task/mytask')\r\n    }, [props.history.location.pathname]);\r\n\r\n    const tabList = [\r\n        {name: '我的任务', path: '/user/task/mytask'},\r\n        {name: '所有任务', path: '/user/task/alltask'}\r\n        ]\r\n\r\n    return (\r\n            <Card\r\n                style={{margin:\"0 auto\"}}\r\n                >\r\n                <Nav tabList={tabList} location={props.history.location.pathname} />\r\n                <Switch>\r\n                    <Route path=\"/user/task/mytask\" component={userIdentify === '教师' ? TeacherTasks : StudentTasks } />\r\n                    <Route path=\"/user/task/alltask\" component={AllTasks } />\r\n                </Switch>\r\n            </Card>\r\n    )\r\n};\r\nexport default connect(\r\n    state=>({\r\n        userIdentify: state.getIn([\"userMana\", \"common\", \"userIdentify\"]),\r\n        openKey: state.getIn([\"userMana\", \"common\", \"smallOpenKey\"])\r\n    }),\r\n    dispatch=>({\r\n\r\n    })\r\n)(Tasks);\r\n\r\n\r\n// {\r\n//     userIdentify === \"教师\" ?\r\n//         <TabPane tab = {\"实验课程\"} key = {2}>\r\n//             <AllCourse/>\r\n//         </TabPane> :\r\n//         null\r\n// }\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport \"../static/style/search.scss\";\r\nimport { Input, Select } from 'antd';\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nlet flag = \"resourceName\";\r\nconst SearchInput = props => {\r\n    const { handleSearchValue, history } = props;\r\n    // console.log(history)\r\n    const [type, setType] = useState(props.data);\r\n    const [flag, setFlag] = useState('')\r\n    useEffect(() => {\r\n        setFlag(\"resourceName\");\r\n        setType(props.data)\r\n    }, [props.data])\r\n    return(\r\n        <div className=\"container\">\r\n            <InputGroup\r\n                className=\"search\"\r\n                compact\r\n            >\r\n                <Select\r\n                    defaultValue=\"resourceName\"\r\n                    onChange={value => setFlag(value) }\r\n                >\r\n                    <Option value=\"resourceName\">\r\n                        {type === \"material\" ? \"资料名\" : \"软件名\"}\r\n                    </Option>\r\n                    <Option value=\"userName\">上传人</Option>\r\n                </Select>\r\n                <Search\r\n                    placeholder=\"请输入搜索信息\"\r\n                    onSearch={(value,e) => handleSearchValue(\r\n                        flag === \"resourceName\" ? {\r\n                            page: 1,\r\n                            type,\r\n                            resourceName: value,\r\n                            userName: \"\"\r\n                        } : {\r\n                            page: 1,\r\n                            type,\r\n                            resourceName: \"\",\r\n                            userName: value\r\n                        }\r\n                    )\r\n                    }\r\n                    enterButton\r\n                />\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n};\r\nexport default withRouter(connect(\r\n    state => ({\r\n\r\n    }),\r\n    dispatch => ({\r\n        handleSearchValue(args){\r\n            dispatch(resource.fetchSearchValue(args));\r\n        }\r\n    })\r\n)(SearchInput));\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../static/style/learningDatas.scss\";\r\nimport SearchInput from \"../components/Search\";\r\nimport { Table } from 'antd';\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\nconst LearningData = props => {\r\n    const {\r\n        resourceName,\r\n        userName,\r\n        type,\r\n        total,\r\n        studyResource,\r\n        handleFetchStudyRes,\r\n        handleSearchValue,\r\n        handleDownload,\r\n        searchFlag,\r\n        page,\r\n        learningDataTemp,\r\n        time,\r\n    } = props;\r\n    useEffect(() => {\r\n        handleFetchStudyRes({page: 1, type: \"material\", resourceName: null, userName: null})\r\n    },[learningDataTemp, time]);\r\n\r\n    const [current, setCurrent] = useState(1);\r\n    useEffect(()=>{\r\n        setCurrent(page);\r\n    },[page]);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '资料名称',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n            // width: '400px'\r\n        },\r\n        {\r\n            title: '大小',\r\n            dataIndex: 'size',\r\n            align: 'center',\r\n            key: 'size',\r\n        },\r\n        {\r\n            title: '上传人',\r\n            dataIndex: 'userName',\r\n            align: 'center',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: '上传时间',\r\n            key: 'addTime',\r\n            align: 'center',\r\n            dataIndex: 'addTime',\r\n        },\r\n        {\r\n            title: '下载次数',\r\n            key: 'num',\r\n            align: 'center',\r\n            dataIndex: 'downloadNum',\r\n        },\r\n        {\r\n            title: '下载资料',\r\n            key: 'url',\r\n            align: 'center',\r\n            dataIndex: 'url',\r\n            render: (text, record) => (\r\n                <a\r\n                    download={record.title}\r\n                    href={{text}.text}\r\n                    onClick={\r\n                        () => {\r\n                            handleDownload({\r\n                                id: record.id,\r\n                                type: \"material\"\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    下载\r\n                </a>\r\n            )\r\n        },\r\n    ];\r\n    return(\r\n       <>\r\n           <div className=\"dataWrapper\">\r\n               <SearchInput data={type}/>\r\n               <Table\r\n                   tableLayout={\"fixed\"}\r\n                   size={'small'}\r\n                   rowKey={record => record.id}\r\n                   columns={columns}\r\n                   dataSource={[...studyResource]}\r\n                   pagination={{\r\n                       total,\r\n                       pageSize: 10,\r\n                       current,\r\n                       onChange: e => {\r\n                           !searchFlag ?\r\n                               handleFetchStudyRes({\r\n                                   page: e,\r\n                                   type: \"material\",\r\n                                   resourceName: null,\r\n                                   userName: null\r\n                               })\r\n                               :\r\n                               handleSearchValue({\r\n                                   page: e,\r\n                                   type,\r\n                                   resourceName,\r\n                                   userName\r\n                               });\r\n                       }\r\n                   }}\r\n               />\r\n           </div>\r\n       </>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        resourceName: state.getIn([\"resource\",\"resource\",\"resourceName\"]),\r\n        type: state.getIn([\"resource\",\"resource\",\"type\"]),\r\n        userName: state.getIn([\"resource\",\"resource\",\"userName\"]),\r\n        total: state.getIn([\"resource\",\"resource\",\"allLearningTotal\"]),\r\n        searchFlag: state.getIn([\"resource\",\"resource\",\"searchFlag\"]),\r\n        studyResource: state.getIn([\"resource\",\"resource\",\"studyResource\"]),\r\n        learningUrl: state.getIn([\"resource\",\"resource\",\"learningUrl\"]),\r\n        searchResource: state.getIn([\"resource\", \"searchRes\", \"searchResource\"]),\r\n        page: state.getIn([\"resource\", \"resource\", \"page\"]),\r\n        learningDataTemp: state.getIn([\"resource\", \"resource\", \"learningDataTemp\"]),\r\n        time: state.getIn([\"resource\", \"resource\",\"time\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleFetchStudyRes(args) {\r\n            dispatch(resource.fetchStudyResource(args));\r\n        },\r\n        loadResource(args) {\r\n            dispatch(resource.fetchLoadResource(args));\r\n        },\r\n        handleSearchValue(args){\r\n            dispatch(resource.fetchSearchValue(args));\r\n        },\r\n        handleDownload(args) {\r\n            dispatch(resource.downloadResource(args));\r\n        }\r\n    })\r\n)(LearningData);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../static/style/learningDatas.scss\";\r\nimport SearchInput from \"../components/Search\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { Table } from 'antd';\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\nconst Software = props => {\r\n    const {\r\n        page,\r\n        searchFlag,\r\n        handleSearchValue,\r\n        resourceName,\r\n        userName,\r\n        type,\r\n        total,\r\n        softwareResource,\r\n        handleFetchSoftwareRes,\r\n        handleDownloadSoftware,\r\n        softwareDataTemp,\r\n        history\r\n    } = props;\r\n    useEffect(() => {\r\n        handleFetchSoftwareRes({page: 1, type: \"software\", resourceName: null, userName: null});\r\n    },[softwareDataTemp]);\r\n    const columns = [\r\n        {\r\n            title: '软件名称',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: '大小',\r\n            dataIndex: 'size',\r\n            align: 'center',\r\n            key: 'size',\r\n        },\r\n        {\r\n            title: '上传人',\r\n            dataIndex: 'userName',\r\n            align: 'center',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: '上传时间',\r\n            key: 'addTime',\r\n            align: 'center',\r\n            dataIndex: 'addTime',\r\n        },\r\n        {\r\n            title: '下载次数',\r\n            key: 'num',\r\n            align: 'center',\r\n            dataIndex: 'downloadNum',\r\n        },\r\n        {\r\n            title: '软件下载',\r\n            key: 'url',\r\n            align: 'center',\r\n            dataIndex: 'url',\r\n            render: (text, record) => (\r\n                <a\r\n                    download={record.title}\r\n                    href={{text}.text}\r\n                    onClick={\r\n                        () => {\r\n                            handleDownloadSoftware({\r\n                                id: record.id,\r\n                                type: \"software\"\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    下载\r\n                </a>\r\n            )\r\n        },\r\n    ];\r\n    const [current, setCurrent] = useState(1);\r\n    useEffect(()=>{\r\n        setCurrent(page);\r\n    },[page]);\r\n    return(\r\n        <div className=\"dataWrapper\">\r\n            <SearchInput data={type}/>\r\n            <Table\r\n                rowKey={e => (e.id)}\r\n                columns={columns}\r\n                dataSource={[...softwareResource]}\r\n                size={'small'}\r\n                pagination={{\r\n                    total,\r\n                    pageSize: 10,\r\n                    current,\r\n                    onChange: e => {\r\n                        !searchFlag ?\r\n                            handleFetchSoftwareRes({\r\n                                page: e,\r\n                                type: \"software\",\r\n                                resourceName: null,\r\n                                userName: null\r\n\r\n                            })\r\n                            :\r\n                            handleSearchValue({\r\n                                page: e,\r\n                                type,\r\n                                resourceName,\r\n                                userName\r\n                            })\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(connect(\r\n    state => ({\r\n        total: state.getIn([\"resource\",\"resource\",\"allSoftwareTotal\"]),\r\n        softwareResource: state.getIn([\"resource\",\"resource\",\"softwareResource\"]),\r\n        resourceName: state.getIn([\"resource\",\"resource\",\"resourceName\"]),\r\n        type: state.getIn([\"resource\",\"resource\",\"type\"]),\r\n        userName: state.getIn([\"resource\",\"resource\",\"userName\"]),\r\n        searchFlag: state.getIn([\"resource\",\"resource\",\"searchFlag\"]),\r\n        searchResource: state.getIn([\"resource\", \"searchRes\", \"searchResource\"]),\r\n        page: state.getIn([\"resource\", \"resource\", \"page\"]),\r\n        softwareDataTemp: state.getIn([\"resource\", \"resource\", \"softwareDataTemp\"])\r\n    }),\r\n    dispatch => ({\r\n        handleFetchSoftwareRes(args) {\r\n            dispatch(resource.fetchSoftwareResource(args));\r\n        },\r\n        handleSearchValue(args){\r\n            dispatch(resource.fetchSearchValue(args));\r\n        },\r\n        handleDownloadSoftware(args) {\r\n            dispatch(resource.downloadSoftware(args));\r\n        }\r\n    })\r\n)(Software));\r\n","import React,{ useState, useEffect} from \"react\";\r\nimport { Upload,Button, Icon } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../static/style/learningDatas.scss\";\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\nconst UpLoad = props => {\r\n    const {handleUpload, userId, userName, time, uploadFlag, history } = props;\r\n    const [ fileList, setFileList,] = useState([]);\r\n    const [ uploading, setUploading ] = useState(false);\r\n    const [type, setType] = useState('')\r\n    useEffect(() => {\r\n        setUploading(false);\r\n    }, [uploadFlag]);\r\n    useEffect(() => {\r\n        history.location.pathname === \"/user/resource/myresource\" && setType('material')\r\n        history.location.pathname === \"/user/download/mysoftware\" && setType('software')\r\n    }, [history.location.pathname])\r\n    return(\r\n        <div key={ time }>\r\n            <div style={{display: 'flex'}} className='uploadWrap'>\r\n                <Upload\r\n                    beforeUpload={\r\n                        file => {\r\n                            fileList.push(file);\r\n                            setFileList([...fileList]);\r\n                            return false\r\n                        }\r\n                    }\r\n                    onRemove={\r\n                        file => {\r\n                            const index = fileList.indexOf(file);\r\n                            const newFileList = fileList.slice();\r\n                            fileList.splice(index, 1);\r\n                        }\r\n                    }\r\n                >\r\n                    <Button >\r\n                        <Icon type=\"upload\" />\r\n                        {type === \"material\" ? \"选择资料\": \"选择软件\"}\r\n                    </Button>\r\n                </Upload>\r\n                <Button\r\n                    key={time}\r\n                    type=\"primary\"\r\n                    loading={uploading}\r\n                    style={{ margin: 16 }}\r\n                    onClick={\r\n                        () => {\r\n                            fileList.forEach((file) => {\r\n                                handleUpload({\r\n                                    type: type,\r\n                                    userId: userId,\r\n                                    file: file,\r\n                                    userName: userName,\r\n                                    page: 1\r\n                                });\r\n                            });\r\n                            setFileList([]);\r\n                            setUploading(true);\r\n                        }\r\n                    }\r\n                    disabled={fileList.length === 0}\r\n                >\r\n                    <Icon type=\"upload\" />\r\n                    {uploading ? '资料上传' : '开始上传'}\r\n                </Button>\r\n            </div>\r\n\r\n            {/* <Button\r\n                key={time}\r\n                type=\"primary\"\r\n                loading={uploading}\r\n                style={{ marginTop: 16 }}\r\n                onClick={\r\n                    () => {\r\n                        fileList.forEach((file) => {\r\n                            handleUpload({\r\n                                type: type,\r\n                                userId: userId,\r\n                                file: file,\r\n                                userName: userName,\r\n                                page: 1\r\n                            });\r\n                        });\r\n                        setFileList([]);\r\n                        setUploading(true);\r\n                    }\r\n                }\r\n                disabled={fileList.length === 0}\r\n            >\r\n                <Icon type=\"upload\" />\r\n                {uploading ? '资料上传' : '开始上传'}\r\n            </Button> */}\r\n            <style>\r\n                {\r\n                    `\r\n                        .uploadWrap > span {\r\n                            display: flex;\r\n                            align-items: center;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(connect(\r\n    state => ({\r\n        type: state.getIn([\"resource\", \"resource\", \"type\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        userName: state.getIn([\"userMana\", \"common\", \"name\"]),\r\n        time: state.getIn([\"resource\", \"resource\", \"time\"]),\r\n        uploadFlag: state.getIn([\"resource\", \"resource\", \"uploadFlag\"])\r\n    }),\r\n    dispatch => ({\r\n        handleUpload(args) {\r\n            dispatch(resource.fetchUploadStudyRes(args))\r\n        }\r\n    })\r\n)(UpLoad));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from 'antd';\r\nimport UpLoad from \"./UpLoad\";\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\nimport \"../static/style/learningDatas.scss\";\r\n\r\nconst MyData = props => {\r\n    const {\r\n        handleMyData,\r\n        userName,\r\n        total,\r\n        teacherData,\r\n        handleDeleteData,\r\n        userId,\r\n        resourceTemp,\r\n        time,\r\n    }= props;\r\n    useEffect(() => {\r\n        handleMyData({page:1, type:\"material\", userName: userName})\r\n    },[resourceTemp, time]);\r\n\r\n    const columns = [\r\n        {\r\n            title: '资料名',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: '大小',\r\n            dataIndex: 'size',\r\n            align: 'center',\r\n            key: 'size',\r\n        },\r\n        {\r\n            title: '上传时间',\r\n            key: 'addTime',\r\n            align: 'center',\r\n            dataIndex: 'addTime',\r\n        },\r\n        {\r\n            title: '资料处理',\r\n            key: '资料处理',\r\n            align: 'center',\r\n            dataIndex: '资料处理',\r\n            render: (text,data) => (\r\n                <a\r\n                    onClick={\r\n                        () => {\r\n                            handleDeleteData({\r\n                                resourceId: data.id,\r\n                                type: \"material\",\r\n                                userId: userId,\r\n                                userName: userName\r\n                            });\r\n                        }\r\n                    }\r\n                    className=\"resDelete\">\r\n                    删除\r\n                </a>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return(\r\n        <>\r\n            <div className=\"dataWrapper\">\r\n                <p style={{color: '#FF0000'}}>请及时清理过期的，无用的资料，以节约空间</p>\r\n                <UpLoad/>\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    size={'small'}\r\n                    columns={columns}\r\n                    dataSource={[...teacherData]}\r\n                    pagination={{\r\n                        total,\r\n                        pageSize: 10,\r\n                        defaultCurrent: 1,\r\n                        onChange: e => {\r\n                            handleMyData({\r\n                                page: e,\r\n                                type: 'material',\r\n                                userName: userName\r\n                            })\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        userName: state.getIn([\"userMana\", \"common\", \"name\"]),\r\n        teacherData: state.getIn([\"resource\", \"resource\", \"teacherData\"]),\r\n        total: state.getIn([\"resource\", \"resource\", \"myLearningTotal\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        resourceTemp: state.getIn([\"resource\", \"resource\", \"resourceTemp\"]),\r\n        time: state.getIn([\"resource\", \"resource\", \"time\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleMyData(args){\r\n            dispatch(resource.fetchTeacherData(args));\r\n        },\r\n        handleDeleteData(args){\r\n            dispatch(resource.deleteData(args))\r\n        }\r\n    })\r\n)(MyData);\r\n","import React, { useEffect } from \"react\";\r\nimport { Card} from \"antd\";\r\nimport LearningData from \"./LearningData\";\r\nimport MyData from \"../components/MyData\";\r\nimport Nav from \"../components/nav\";\r\nimport { Route, Switch} from \"react-router-dom\";\r\n\r\nconst TeacherData = (props) => {\r\n\r\n    const { pathname } = props.history.location;\r\n\r\n    useEffect(() => {\r\n        pathname === '/user/resource' && props.history.push('/user/resource/myresource')\r\n    }, [pathname]);\r\n\r\n    const tabList = [\r\n        {name: '我的资料', path: '/user/resource/myresource'},\r\n        {name: '所有资料', path: '/user/resource/allresource'}\r\n    ]\r\n\r\n    return (\r\n        <Card\r\n            style={{margin:\"0 auto\"}}\r\n        >\r\n            <Nav tabList={tabList} location={props.history.location.pathname} />\r\n            <Switch>\r\n                <Route path=\"/user/resource/myresource\" component={MyData} />\r\n                <Route path=\"/user/resource/allresource\" component={LearningData} />\r\n            </Switch>\r\n        </Card>\r\n    )\r\n};\r\nexport default TeacherData;\r\n","import React, {useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from 'antd';\r\nimport UpLoad from \"./UpLoad\";\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\nimport \"../static/style/learningDatas.scss\";\r\n\r\nconst MySoftware = props => {\r\n    const {\r\n        handleMySoftware,\r\n        userId,\r\n        userName,\r\n        total,\r\n        teacherSoftware,\r\n        handleDeleteSoftware,\r\n        softwareTemp,\r\n        time,\r\n    }= props;\r\n    useEffect(() => {\r\n        handleMySoftware({page:1, type:\"software\", userName: userName})\r\n    },[softwareTemp, time]);\r\n    const columns = [\r\n        {\r\n            title: '软件名称',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: '大小',\r\n            dataIndex: 'size',\r\n            align: 'center',\r\n            key: 'size',\r\n        },\r\n        {\r\n            title: '上传时间',\r\n            key: 'addTime',\r\n            align: 'center',\r\n            dataIndex: 'addTime',\r\n        },\r\n        {\r\n            title: '软件处理',\r\n            key: '软件处理',\r\n            align: 'center',\r\n            dataIndex: '软件处理',\r\n            render: (text,data) => (\r\n                <a\r\n                    onClick={\r\n                        () => {\r\n                            handleDeleteSoftware({\r\n                                resourceId: data.id,\r\n                                type: \"software\",\r\n                                userId: userId,\r\n                                userName: userName\r\n                            });\r\n                        }\r\n                    }\r\n                    className=\"resDelete\">\r\n                    删除\r\n                </a>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return(\r\n        <>\r\n            <div className=\"dataWrapper\">\r\n                <p style={{color: '#FF0000'}}>请及时清理过期的，无用的软件，以节约空间</p>\r\n                <UpLoad/>\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    size={'small'}\r\n                    columns={columns}\r\n                    dataSource={[...teacherSoftware]}\r\n                    pagination={{\r\n                        total,\r\n                        pageSize: 10,\r\n                        defaultCurrent: 1,\r\n                        onChange: e => {\r\n                            handleMySoftware({\r\n                                page: e,\r\n                                type: 'software',\r\n                                userName: userName\r\n                            })\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        userName: state.getIn([\"userMana\", \"common\", \"name\"]),\r\n        teacherSoftware: state.getIn([\"resource\", \"resource\", \"teacherSoftware\"]),\r\n        total: state.getIn([\"resource\", \"resource\", \"mySoftwareTotal\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        softwareTemp: state.getIn([\"resource\", \"resource\", \"softwareTemp\"]),\r\n        time: state.getIn([\"resource\", \"resource\", \"time\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleMySoftware(args){\r\n            dispatch(resource.fetchTeacherSoftware(args));\r\n        },\r\n        handleDeleteSoftware(args) {\r\n            dispatch(resource.deleteSoftware(args))\r\n        }\r\n    })\r\n)(MySoftware);\r\n","import React, {useEffect} from \"react\";\r\nimport { Card } from \"antd\";\r\nimport Software from \"./Software\";\r\nimport MySoftware from \"../components/MySoftware\";\r\nimport Nav from \"../components/nav\";\r\nimport { Route, Switch} from \"react-router-dom\";\r\n\r\nconst TeacherSoftware = (props) => {\r\n\r\n    const { pathname } = props.history.location;\r\n\r\n    useEffect(() => {\r\n        pathname === '/user/download' && props.history.push('/user/download/mysoftware')\r\n    }, [pathname]);\r\n\r\n    const tabList = [\r\n        {name: '我的软件', path: '/user/download/mysoftware'},\r\n        {name: '所有软件', path: '/user/download/allsoftware'}\r\n    ]\r\n\r\n    return (\r\n        <Card>\r\n            <Nav tabList={tabList} location={props.history.location.pathname} />\r\n            <Switch>\r\n                <Route path=\"/user/download/mysoftware\" component={MySoftware} />\r\n                <Route path=\"/user/download/allsoftware\" component={Software} />\r\n            </Switch>\r\n        </Card>\r\n    )\r\n};\r\nexport default TeacherSoftware;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../static/style/search.scss\";\r\nimport { Table } from 'antd';\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\nimport * as admin from \"../redux/actionCreators/admin\";\r\n\r\nconst StudentTable = props => {\r\n    const {studentMessage, total, handleSearchStudent, userId, userName, page, resetPassword, reUserId} = props;\r\n    const [current, setCurrent] = useState(1);\r\n    useEffect(()=>{\r\n        setCurrent(page);\r\n    },[page]);\r\n    const columns = [\r\n        {\r\n            key: '1',\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n        },\r\n        {\r\n            key: '2',\r\n            title: '学生姓名',\r\n            dataIndex: 'userName',\r\n        },\r\n        {\r\n            key: '3',\r\n            title: '性别',\r\n            dataIndex: 'sex',\r\n        },\r\n        {\r\n            key: '4',\r\n            title: '',\r\n            dataIndex: 'resetPassword',\r\n            render: (text, record) => {\r\n                return (<a\r\n                            onClick={() => {resetPassword({'id': record.userId, 'userId': reUserId})}}\r\n                        >\r\n                                重置密码\r\n                        </a>)\r\n\r\n            }\r\n        }\r\n    ];\r\n    const rowSelection = {\r\n        getCheckboxProps: record => ({\r\n            disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n            name: record.name,\r\n        }),\r\n    };\r\n\r\n    return(\r\n        <Table\r\n            rowKey={record => record.id}\r\n            dataSource={studentMessage}\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            pagination={\r\n                {\r\n                    current,\r\n                    total,\r\n                    pageSize: 10,\r\n                    onChange: e => {\r\n                            handleSearchStudent({\r\n                                page: e,\r\n                                type: \"student\",\r\n                                userId,\r\n                                userName\r\n                            })\r\n                    },\r\n                    defaultCurrent: 1,\r\n                }\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        studentMessage: state.getIn([\"resource\", \"resource\", \"studentMessage\"]),\r\n        total: state.getIn([\"resource\", \"resource\", \"studentTotal\"]),\r\n        userId: state.getIn([\"resource\", \"resource\", \"studentId\"]),\r\n        userName: state.getIn([\"resource\", \"resource\", \"studentName\"]),\r\n        page: state.getIn([\"resource\", \"resource\", \"page\"]),\r\n        reUserId: state.getIn(['userMana', 'common', 'userId'])\r\n    }),\r\n    dispatch => ({\r\n        handleSearchStudent(args){\r\n            dispatch(resource.fetchStudentMes(args))\r\n        },\r\n        resetPassword(args) {\r\n            dispatch(admin.resetPassword(args))\r\n        }\r\n    })\r\n)(StudentTable);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../static/style/search.scss\";\r\nimport { Input, Select } from 'antd';\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\n\r\nconst InputGroup = Input.Group;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nlet flag = \"userId\";\r\n\r\nconst SearchStudent = props => {\r\n    const { handleSearchStudent } = props;\r\n    return(\r\n        <div className=\"searchStudentWrapper\">\r\n            <InputGroup\r\n                className=\"search\"\r\n                compact\r\n            >\r\n                <Select\r\n                    defaultValue=\"userId\"\r\n                    onChange={\r\n                        (value) => {\r\n                            flag = value\r\n                        }\r\n                    }\r\n                >\r\n                    <Option value=\"userId\">学号</Option>\r\n                    <Option value=\"useName\">姓名</Option>\r\n                </Select>\r\n                <Search\r\n                    className=\"studentSearch\"\r\n                    placeholder=\"请输入搜索信息\"\r\n                    enterButton\r\n                    onSearch={\r\n                        (value, e) => {\r\n                            handleSearchStudent(\r\n                                flag === \"userId\" ?\r\n                                    {\r\n                                        page: 1,\r\n                                        type: \"student\",\r\n                                        userId: value,\r\n                                        userName: \"\"\r\n                                    } :{\r\n                                        page: 1,\r\n                                        type: \"student\",\r\n                                        userId: \"\",\r\n                                        userName: value\r\n                                    })\r\n                        }\r\n                    }\r\n                />\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    dispatch => ({\r\n        handleSearchStudent(args){\r\n            dispatch(resource.fetchStudentMes(args))\r\n        }\r\n    })\r\n)(SearchStudent)\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {Modal, Button, Input, Select, Form, Table} from \"antd\";\r\nimport \"../static/style/header.scss\";\r\nimport * as user from \"../redux/actionCreators/user\";\r\nimport {checkNumber, Encrypto, isChinese, openNotification, Decrypt} from \"../utils/commonFunction\";\r\nimport { LOG_OUT } from \"../constants/actionTypes\";\r\nimport StudentTable from \"./StudentTable\";\r\nimport SearchStudent from \"./SearchStudent\";\r\nconst { Option } = Select;\r\n\r\nlet sex = \"男\",teacherId = \"\", question = \"Q1\";\r\n\r\nconst Header = props => {\r\n    const [registerUserId, setRegisterUserId] = useState([])\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n            setRegisterUserId([selectedRowKeys])\r\n        },\r\n        getCheckboxProps: record => ({\r\n            disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n            name: record.name,\r\n        }),\r\n    };\r\n    const handleSexChange = val => {\r\n        sex = val;\r\n    };\r\n    const handleTeacherChange = val => {\r\n        teacherId = val;\r\n    };\r\n    const handleQuestionChange = val => {\r\n        question = val;\r\n    }\r\n    const {\r\n        login,\r\n        handleLogin,\r\n        handleRegister,\r\n        handleTeacher,\r\n        reUserId,\r\n        reGrade,\r\n        reAcademy,\r\n        reDiscipline,\r\n        reClass,\r\n        reSex,\r\n        reType,\r\n        rePhone,\r\n        rePassword,\r\n        name,\r\n        userIdentify,\r\n        handleLogOut,\r\n        handlePreserve,\r\n        data,\r\n        handleQueryRegister,\r\n        total,\r\n        handleRegistered,\r\n        teacherName,\r\n        registerSuccess,\r\n        registeredFlag,\r\n        querySecret,\r\n        secretGuardExistence,\r\n        isQuestion,\r\n        resetPasswardData,\r\n        addQuestion,\r\n        checkQuestion,\r\n        isCheck,\r\n        modifyPassward,\r\n        visible,\r\n        sendForgetFlag,\r\n        forgetFlag,\r\n        newUser\r\n    } = props;\r\n    useEffect(() => {\r\n        registerSuccess ? setRegisterVisible(!registerVisible) : setRegisterVisible(registerVisible)\r\n    }, [registerSuccess]);\r\n    useEffect(() => {\r\n        if (reType !== \"\") {\r\n            handleQueryRegister({userId: reUserId, type: \"teacher\", page: 1})\r\n        }\r\n    }, [registeredFlag]);\r\n    //注册信息\r\n    const userId = useRef();\r\n    const userName = useRef();\r\n    const academy = useRef();\r\n    const grade = useRef();\r\n    const discipline = useRef();\r\n    const cls = useRef();\r\n    const phone = useRef();\r\n    const password = useRef();\r\n    const type = useRef();\r\n    //学生修改信息\r\n    const modifyUserId = useRef();\r\n    const modifyUserName = useRef();\r\n    const modifyAcademy = useRef();\r\n    const modifyGrade = useRef();\r\n    const modifyDiscipline = useRef();\r\n    const modifyCls = useRef();\r\n    const modifySex = useRef();\r\n    const modifyType = useRef();\r\n    const modifyPhone = useRef();\r\n    const modifyPassword = useRef();\r\n    //密保\r\n    const questionAnswer = useRef()\r\n    const newPassward = useRef()\r\n    const [loginVisible, setLoginVisible] = useState(false);\r\n    const [registerVisible, setRegisterVisible] = useState(false);\r\n    const [identifyVisible, setIdentifyVisible] = useState(false);\r\n    const [studentMessageVisible, setStudentMessageVisible] = useState(false);\r\n    const [studentCertification, setStudentCertification] = useState(false);\r\n    const [resetVisible, setResetVisible] = useState(false)\r\n    //身份\r\n    const [identify, setIdentify] = useState(\"游客\");\r\n    useEffect(() => {\r\n        setIdentify(userIdentify);\r\n        //改这里\r\n        userIdentify === '超级管理员' && props.history.push('/admin')\r\n    },[userIdentify]);\r\n    //教师批准注册用户\r\n    const columns = [\r\n        {\r\n            title: '学号',\r\n            dataIndex: 'userId',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '学生姓名',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: '年级',\r\n            dataIndex: 'grade',\r\n            key: 'grade',\r\n        },\r\n        {\r\n            title: '学院',\r\n            dataIndex: 'academy',\r\n            key: 'academy',\r\n        },\r\n        {\r\n            title: '专业',\r\n            dataIndex: 'discipline',\r\n            key: 'discipline',\r\n        },\r\n        {\r\n            title: '班级',\r\n            dataIndex: 'cls',\r\n            key: 'cls',\r\n        },\r\n        {\r\n            title: '性别',\r\n            dataIndex: 'sex',\r\n            key: 'sex',\r\n        },\r\n        {\r\n            title: '电话',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: '注册时间',\r\n            dataIndex: 'registerDate',\r\n            key: 'registerDate',\r\n        },\r\n        {\r\n            title: '授权状态',\r\n            dataIndex: 'state',\r\n            key: 'state',\r\n            render: (text, data) => \r\n            <a\r\n               onClick={() => {\r\n                text == \"批准\" && handleRegistered({\r\n                    userId: [data.userId],\r\n                    teacherId: reUserId,\r\n                    type: reType,\r\n                    page: 1\r\n                }) \r\n               }}\r\n            >\r\n                {text === \"no\"? text=\"批准\":text=\"已批准\"}\r\n            </a>,\r\n        },\r\n        ];\r\n    //我的信息\r\n    const refs = [\r\n        {\r\n            ref: modifyUserId,\r\n            defaultMessage: reUserId,\r\n            title: \"学号\"\r\n        },\r\n        {\r\n            ref: modifyUserName,\r\n            defaultMessage: name,\r\n            title: \"姓名\"\r\n        },\r\n        {\r\n            ref: modifyAcademy,\r\n            defaultMessage: reAcademy,\r\n            title: \"学院\"\r\n        },\r\n        {\r\n            ref: modifyGrade,\r\n            defaultMessage: reGrade,\r\n            title: \"年级\"\r\n        },\r\n        {\r\n            ref: modifyDiscipline,\r\n            defaultMessage: reDiscipline,\r\n            title: \"专业\"\r\n        },\r\n        {\r\n            ref: modifyCls,\r\n            defaultMessage: reClass,\r\n            title: \"班级\"\r\n        },\r\n        {\r\n            ref: modifySex,\r\n            defaultMessage: reSex,\r\n            title: \"性别\"\r\n        },\r\n        {\r\n            ref: modifyType,\r\n            defaultMessage: reType,\r\n            title: \"类型\"\r\n        },\r\n        {\r\n            ref: modifyPhone,\r\n            defaultMessage: rePhone,\r\n            title: \"电话\"\r\n        },\r\n        {\r\n            ref: modifyPassword,\r\n            defaultMessage: Decrypt(rePassword),\r\n            title: \"密码\"\r\n        }\r\n    ];\r\n    const layout = {\r\n        labelCol: {\r\n          span: 4,\r\n        },\r\n        wrapperCol: {\r\n          span: 16,\r\n        },\r\n      };\r\n      useEffect(() => {\r\n        setResetVisible(false);\r\n        setLoginVisible(false)\r\n    }, [visible])\r\n    useEffect(() => {\r\n        if(forgetFlag) {\r\n            isQuestion === true && setResetVisible(true)\r\n            isQuestion === false && setResetVisible(false)\r\n            isQuestion === false && openNotification('你没有添加密保问题，不能修改密码，请联系老师重置密码'); \r\n        }\r\n    }, [forgetFlag, isQuestion])\r\n    useEffect(() => {\r\n        setResetVisible(modifyPassward)\r\n    }, [newUser])\r\n    return (\r\n        <>\r\n            <header className=\"userHeader\">\r\n                <ul id=\"headerNav\" className=\"row row-start-center\">\r\n                    {\r\n                        login &&\r\n                        <li onClick={() => setIdentifyVisible(!identifyVisible)}>\r\n                            <span>您好,</span>\r\n                            <span className=\"name\">{name}</span>\r\n                        </li>\r\n                    }\r\n                    {/* 我的信息 */}\r\n                    {\r\n                        identifyVisible && login &&\r\n                            <>\r\n                                <Modal\r\n                                    keyboard\r\n                                    title={\"我的信息（其他信息不可改只可更改密码）\"}\r\n                                    visible={identifyVisible}\r\n                                    onCancel={() => setIdentifyVisible(!identifyVisible)}\r\n                                    onOk={() => setIdentifyVisible(!identifyVisible)}\r\n                                    footer={\r\n                                        <Button\r\n                                            type={\"primary\"}\r\n                                            onClick={\r\n                                                () => {\r\n                                                    setResetVisible(true);\r\n                                                    secretGuardExistence(reUserId);\r\n                                                    setIdentifyVisible(!identifyVisible);\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            修改密码\r\n                                        </Button>\r\n                                    }\r\n                                >\r\n                                    <Form.Item\r\n                                        className=\"row row-spacebetween-center\"\r\n                                        style={{\r\n                                            margin: 0,\r\n                                            flexWrap: \"wrap\"\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            refs.map(el => (\r\n                                                <div\r\n                                                    className=\"row center-center\"\r\n                                                    style={{width: \"30rem\"}}\r\n                                                >\r\n                                                    <label>{el.title}</label>\r\n                                                    <Input\r\n                                                        disabled={true}\r\n                                                        ref={el.ref}\r\n                                                        defaultValue={el.defaultMessage}\r\n                                                        className=\"modifyInput\"\r\n                                                        onPressEnter={\r\n                                                            () => {\r\n                                                                handlePreserve({\r\n                                                                    userId: modifyUserId.current.state.value,\r\n                                                                    userName: modifyUserName.current.state.value,\r\n                                                                    grade: modifyGrade.current.state.value,\r\n                                                                    academy: modifyAcademy.current.state.value,\r\n                                                                    discipline: modifyDiscipline.current.state.value,\r\n                                                                    cls: modifyCls.current.state.value,\r\n                                                                    phone: modifyPhone.current.state.value,\r\n                                                                    sex: modifySex.current.state.value,\r\n                                                                    password: Encrypto(modifyPassword.current.state.value)\r\n                                                                });\r\n                                                                setIdentifyVisible(!identifyVisible);\r\n                                                            }\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Item>\r\n                                </Modal>\r\n                            </>\r\n\r\n                    }\r\n                    <li>\r\n                        {`身份 - ${identify}`}\r\n                    </li>\r\n                    {\r\n                        login && identify === \"教师\" &&\r\n                            <li\r\n                                className=\"studentMessage\"\r\n                                onClick={() => setStudentMessageVisible(!studentMessageVisible)}\r\n                            >\r\n                                学生信息\r\n                            </li>\r\n                    }\r\n                    {\r\n                        studentMessageVisible && login &&\r\n                            <>\r\n                                <Modal\r\n                                    visible={studentMessageVisible}\r\n                                    onCancel={() => setStudentMessageVisible(!studentMessageVisible)}\r\n                                    title={\"学生信息\"}\r\n                                    footer={null}\r\n                                    width= '60rem'\r\n                                >\r\n                                    <div className=\"studentMesWrapper\">\r\n                                        <div className=\"searchWrapper\">\r\n                                            <Button\r\n                                                style={{marginRight: \"0.5rem\"}}\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        setStudentCertification(true);\r\n                                                        handleQueryRegister({\r\n                                                            userId: reUserId,\r\n                                                            type: reType,\r\n                                                            page: 1\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                学生认证\r\n                                            </Button>\r\n                                            {\r\n                                                studentCertification &&\r\n                                                    <>\r\n                                                        <Modal\r\n                                                            width= '68rem'\r\n                                                            visible={studentCertification}\r\n                                                            onCancel={() => setStudentCertification(!studentCertification)}\r\n                                                            title={\"学生注册(显示的学生为：学生选择您为审核人)\"}\r\n                                                            footer={\r\n                                                                <Button\r\n                                                                    type={\"primary\"}\r\n                                                                    onClick={ () => {\r\n                                                                        handleRegistered({\r\n                                                                                userId: registerUserId,\r\n                                                                            })\r\n                                                                        }\r\n                                                                    }\r\n                                                                >\r\n                                                                    批量批准\r\n                                                                </Button>\r\n                                                            }\r\n                                                        >\r\n                                                            <Table\r\n                                                                rowKey={record => record.userId}\r\n                                                                rowSelection={rowSelection}\r\n                                                                style={{width: \"65rem\"}}\r\n                                                                columns={columns}\r\n                                                                dataSource={data}\r\n                                                                pagination={{\r\n                                                                    total,\r\n                                                                    pageSize: 10,\r\n                                                                    onChange: e => {\r\n                                                                        handleQueryRegister({\r\n                                                                            userId: reUserId,\r\n                                                                            type: \"teacher\",\r\n                                                                            page: e\r\n                                                                        })\r\n                                                                    }\r\n                                                                }}\r\n                                                            />\r\n                                                        </Modal>\r\n                                                    </>\r\n                                            }\r\n                                            <SearchStudent style={{marginLeft: '1rem'}} />\r\n                                        </div>\r\n                                        <StudentTable/>\r\n                                    </div>\r\n                                </Modal>\r\n                            </>\r\n                    }\r\n                    {/*退出*/}\r\n                    {\r\n                        login &&\r\n                        <a\r\n                            href=\"\"\r\n                            onClick={\r\n                                e => {\r\n                                    e.preventDefault();\r\n                                    localStorage.removeItem('access');\r\n                                    handleLogOut();\r\n                                    setLoginVisible(loginVisible);\r\n                                }\r\n                            }\r\n                        >\r\n                            退出\r\n                        </a>\r\n                    }\r\n                    {/*登录*/}\r\n                    {\r\n                        !login &&\r\n                        <li\r\n                            className=\"navItem\"\r\n                            onClick={() => setLoginVisible(!loginVisible)}\r\n                        >\r\n                            登录\r\n                        </li>\r\n                    }\r\n                    {\r\n                        loginVisible && !login ?\r\n                            <Modal\r\n                                zIndex={100}\r\n                                visible={ loginVisible }\r\n                                title=\"登录\"\r\n                                onCancel={() => setLoginVisible(!loginVisible)}\r\n                                onOk={\r\n                                    () => {\r\n                                       setLoginVisible(!loginVisible)\r\n                                    }\r\n                                }\r\n                                footer={\r\n                                    <Button\r\n                                        type={\"primary\"}\r\n                                        onClick={ () => {\r\n                                            handleLogin({\r\n                                                userId: userId.current.state.value,\r\n                                                password: Encrypto(password.current.input.value),\r\n                                            });\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        登录\r\n                                    </Button>\r\n                                }\r\n                            >\r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"用户名\"\r\n                                        name=\"username\"\r\n                                        rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your username!',\r\n                                        },\r\n                                        ]}\r\n                                    >\r\n                                        <Input ref={userId} placeholder='学生用户名为学号' />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"密码\"\r\n                                        name=\"password\"\r\n                                        rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                        ]}\r\n                                    >\r\n                                        <Input.Password\r\n                                            ref={password}\r\n                                            onPressEnter={() => {\r\n                                                handleLogin({\r\n                                                    userId: userId.current.state.value,\r\n                                                    password: Encrypto(password.current.input.value),\r\n                                                });\r\n                                            }}\r\n                                            placeholder='初始密码为：123'\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                                <Button\r\n                                    style={{marginTop: \"1rem\"}}\r\n                                    onClick={() => {\r\n                                        if(userId.current.state.value) {\r\n                                            secretGuardExistence(userId.current.state.value)\r\n                                            sendForgetFlag()\r\n                                        } else {\r\n                                            openNotification('账号不能为空, 请输入用户名')\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    忘记密码\r\n                                </Button>\r\n                            </Modal> : \"\"\r\n                    }\r\n                    {/* 修改密码 */}\r\n                    <Modal\r\n                        zIndex={1000}\r\n                        destroyOnClose={true}\r\n                        visible={ resetVisible }\r\n                        // title={ isCheck ? \"修改密码\" : (isQuestion ? \"修改密码\" : \"添加密保问题\")}\r\n                        title={isQuestion ? \"修改密码\" : \"添加密保问题\"}\r\n                        onCancel={() => setResetVisible(!resetVisible)}\r\n                        onOk={\r\n                            () => {\r\n                                setResetVisible(!resetVisible);\r\n                                querySecret({userId: reUserId});\r\n                            }\r\n                        }\r\n                        footer={\r\n                            <Button\r\n                                type={\"primary\"}\r\n                                onClick={ () => {\r\n                                        isQuestion ? checkQuestion({\r\n                                            'userId':  (userId.current && userId.current.state.value) || reUserId,\r\n                                            'question': question,\r\n                                            'answer': questionAnswer.current.state.value,\r\n                                            'password': Encrypto(newPassward.current.state.value)\r\n\r\n                                        }) : addQuestion({\r\n                                            'userId': (userId.current && userId.current.state.value) || reUserId,\r\n                                            'question': question,\r\n                                            'answer': questionAnswer.current.state.value\r\n                                        })\r\n                                    }\r\n                                }\r\n                            >\r\n                                提交\r\n                            </Button>\r\n                        }\r\n                    >\r\n                        <div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    请选择密保问题:\r\n                                </label>\r\n                                <Select defaultValue=\"Q1\" style={{width: \"70%\"}} onChange={val => handleQuestionChange(val)}>\r\n                                    <Option value='Q1' >您就读的高中叫什么名字？</Option>\r\n                                    <Option value=\"Q2\" >您的母亲叫什么名字？</Option>\r\n                                    <Option value=\"Q3\" >您就读的小学叫什么名字？</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label>输入密保问题答案：</label><Input ref={questionAnswer} style={{width: \"70%\"}}/>\r\n                            </div>\r\n                            {\r\n                                isQuestion && \r\n                                <div className=\"row row-spacebetween-center\">\r\n                                    <label>输入你的新密码：</label><Input ref={newPassward} style={{width: \"70%\"}}/>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </Modal>\r\n                    \r\n                    {/*注册*/}\r\n                    {\r\n                        !login &&\r\n                        <li\r\n                            className=\"navItem\"\r\n                            onClick={\r\n                                () => {\r\n                                    setRegisterVisible(!registerVisible);\r\n                                    handleTeacher({});\r\n                                }\r\n                            }\r\n                        >\r\n                            注册\r\n                        </li>\r\n                    }\r\n                    {\r\n                        registerVisible && !login &&\r\n                        <Modal\r\n                            title=\"注册\"\r\n                            visible={registerVisible}\r\n                            onCancel={() => setRegisterVisible(!registerVisible)}\r\n                            footer={\r\n                                <div className=\"row row-spacebetween-center\">\r\n                                    <span>提示：信息必须真实,完整,否则无效！</span>\r\n                                    <Button\r\n                                        type={\"primary\"}\r\n                                        onClick={\r\n                                            () => {\r\n                                                handleRegister({\r\n                                                    userId: userId.current.state.value,\r\n                                                    userName: userName.current.state.value,\r\n                                                    academy: academy.current.state.value,\r\n                                                    grade: grade.current.state.value,\r\n                                                    discipline: discipline.current.state.value,\r\n                                                    cls: cls.current.state.value,\r\n                                                    sex,\r\n                                                    phone: phone.current.state.value,\r\n                                                    teacherId,\r\n                                                    password: Encrypto(password.current.input.value),\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        注册\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        >\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    学号\r\n                                </label>\r\n                                <Input ref={userId} style={{width: \"90%\"}} placeholder={'例：2018211304'} />\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    年级\r\n                                </label>\r\n                                <Input ref={grade} style={{width: \"90%\"}} placeholder={'例：2018'}/>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    专业\r\n                                </label>\r\n                                <Input ref={discipline} style={{width: \"90%\"}} placeholder={'例：电子商务'}/>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    性别\r\n                                </label>\r\n                                <Select defaultValue=\"男\" style={{width: \"90%\"}} onChange={val => handleSexChange(val)}>\r\n                                    <Option value=\"男\" >男</Option>\r\n                                    <Option value=\"女\" >女</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label>教师</label>\r\n                                <Select\r\n                                    onSearch={\r\n                                        value => { return 0; }\r\n                                    }\r\n                                    onChange={\r\n                                        val => handleTeacherChange(val)\r\n                                    }\r\n                                    style={{width: \"90%\"}}\r\n                                    placeholder=\"注册后需要该教师审核通过，请选择\"\r\n                                >\r\n                                    {\r\n                                        teacherName.map((item,index) => <Option value={item[1]} key={index}>{item[0]}</Option>)\r\n                                    }\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    电话\r\n                                </label>\r\n                                <Input ref={phone} style={{width: \"90%\"}} placeholder={'输入11位的数字'}/>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    姓名\r\n                                </label>\r\n                                <Input ref={userName} style={{width: \"90%\"}}/>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    学院\r\n                                </label>\r\n                                <Input ref={academy} style={{width: \"90%\"}} placeholder={'例：经济管理现代邮政学院'}/>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    班级\r\n                                </label>\r\n                                <Input ref={cls} style={{width: \"90%\"}} placeholder={'例：03131802'}/>\r\n                            </div>\r\n                            <div className=\"row row-spacebetween-center\">\r\n                                <label htmlFor=\"\">\r\n                                    密码\r\n                                </label>\r\n                                <Input.Password\r\n                                    onPressEnter={\r\n                                        () => {\r\n                                            handleRegister({\r\n                                                userId: userId.current.state.value,\r\n                                                userName: userName.current.state.value,\r\n                                                academy: academy.current.state.value,\r\n                                                grade: grade.current.state.value,\r\n                                                discipline: discipline.current.state.value,\r\n                                                cls: cls.current.state.value,\r\n                                                sex,\r\n                                                phone: phone.current.state.value,\r\n                                                teacherId,\r\n                                                password: Encrypto(password.current.input.value),\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    ref={password}\r\n                                    style={{width: \"90%\"}}\r\n                                />\r\n                            </div>\r\n                        </Modal>\r\n                    }\r\n                    <li style={{paddingLeft: 10}}>\r\n                        <a href=\"http://172.22.4.2.node6.cqupt.co/manual/html/student.html\" >\r\n                            使用手册\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withRouter(connect(\r\n    state => ({\r\n        login: state.getIn([\"userMana\",\"common\",\"login\"]),\r\n        teacher: state.getIn([\"userMana\", \"student\", \"teacher\"]),\r\n        userIdentify: state.getIn([\"userMana\", \"common\", \"userIdentify\"]),\r\n        name: state.getIn([\"userMana\", \"common\", \"name\"]),\r\n        reAcademy: state.getIn([\"userMana\", \"common\", \"academy\"]),\r\n        reDiscipline: state.getIn([\"userMana\", \"common\", \"discipline\"]),\r\n        reGrade: state.getIn([\"userMana\", \"common\", \"grade\"]),\r\n        reSex: state.getIn([\"userMana\", \"common\", \"sex\"]),\r\n        reUserId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        reClass: state.getIn([\"userMana\", \"common\", \"class\"]),\r\n        reType: state.getIn([\"userMana\", \"common\", \"type\"]),\r\n        rePhone: state.getIn([\"userMana\", \"common\", \"phone\"]),\r\n        rePassword: state.getIn([\"userMana\", \"common\", \"password\"]),\r\n        data: state.getIn([\"userMana\", \"common\", \"registerStudent\"]),\r\n        total: state.getIn([\"userMana\", \"common\", \"registerTotal\"]),\r\n        teacherName: state.getIn([\"resource\", \"resource\", \"teacherName\"]),\r\n        ratify: state.getIn([\"resource\", \"resource\", \"ratify\"]),\r\n        registerSuccess: state.getIn([\"userMana\", \"common\", \"registerSuccess\"]),\r\n        registeredFlag: state.getIn([\"userMana\", \"common\", \"registeredFlag\"]),\r\n        resetPasswardData: state.getIn([\"userMana\", \"common\", \"resetPasswardData\"]),\r\n        isQuestion: state.getIn([\"userMana\", \"common\", \"isQuestion\"]),\r\n        isCheck: state.getIn([\"userMana\", \"common\", \"isCheck\"]),\r\n        modifyPassward: state.getIn([\"userMana\", \"common\", \"modifyPassward\"]),\r\n        visible: state.getIn([\"userMana\", \"common\", \"visible\"]),\r\n        forgetFlag: state.getIn([\"userMana\", \"common\", \"forgetFlag\"]),\r\n        newUser: state.getIn([\"userMana\", \"common\", \"newUser\"])\r\n    }),\r\n    dispatch => ({\r\n        handleLogin(args) {\r\n            if (args.length === 0) {\r\n                openNotification(\"请输入密码\")\r\n            } else {\r\n                dispatch(user.login(args));\r\n            }\r\n        },\r\n        handleRegister(args) {\r\n            if (!checkNumber(args.userId) && args.userId.length === 10) {\r\n                openNotification(\"请检查学号格式\");\r\n            } else if (!checkNumber(args.grade) && args.grade.length === 4) {\r\n                openNotification(\"请检查年级的格式\")\r\n            } else if (!isChinese(args.discipline)) {\r\n                openNotification(\"请检查专业的格式\")\r\n            } else if (!checkNumber(args.phone) && args.phone.length === 11) {\r\n                openNotification(\"请检查电话的格式\")\r\n            } else if (!isChinese(args.userName)) {\r\n                openNotification(\"请检查姓名的格式\")\r\n            } else if (!isChinese(args.academy)) {\r\n                openNotification(\"请检查学院的格式\")\r\n            } else if (!checkNumber(args.cls) && args.cls.length === 8) {\r\n                openNotification(\"请检查班级的格式\")\r\n            } else if (args.length === 0) {\r\n                openNotification(\"请输入密码\");\r\n            } else {\r\n                dispatch(user.register(args));\r\n            }\r\n        },\r\n        handleTeacher(){\r\n            dispatch(user.teacher());\r\n        },\r\n        handleLogOut() {\r\n            dispatch({type: LOG_OUT});\r\n        },\r\n        handlePreserve(args) {\r\n            dispatch(user.preserve(args));\r\n        },\r\n        handleQueryRegister(args) {\r\n            dispatch(user.queryRegister(args));\r\n        },\r\n        handleRegistered(args) {\r\n            dispatch(user.registered(args));\r\n        },\r\n        querySecret(args) {\r\n            dispatch(user.querySecret(args))\r\n        },\r\n        secretGuardExistence(args) {\r\n            dispatch(user.secretGuardExistence(args))\r\n        },\r\n        checkQuestion(args) {\r\n            dispatch(user.checkQuestion(args))\r\n        },\r\n        addQuestion(args) {\r\n            dispatch(user.addQuestion(args))\r\n        },\r\n        sendForgetFlag() {\r\n            dispatch(user.sendForgetFlag())\r\n        }\r\n    })\r\n)(Header));\r\n","import * as constants from \"../../constants/actionTypes\";\r\n\r\nexport const login = args => ({\r\n    type: constants.LOGIN,\r\n    args\r\n});\r\n\r\nexport const register = args => ({\r\n    type: constants.REGISTER,\r\n    args\r\n});\r\nexport const teacher = () => ({\r\n    type: constants.TEACHERRES\r\n});\r\n//保存\r\nexport const preserve = args => ({\r\n    type: constants.PRESERVE,\r\n    args\r\n});\r\n//查询带注册用户\r\nexport const queryRegister = args => ({\r\n    type: constants.FETCH_QUERY_REGISTER,\r\n    args\r\n});\r\n//批准注册用户\r\nexport const registered = args => ({\r\n    type: constants.REGISTERED,\r\n    args\r\n});\r\n\r\nexport const querySecret = args => ({\r\n    type: constants.QUERY_SECRET,\r\n    args\r\n})\r\n\r\nexport const secretGuardExistence = args => ({\r\n    type: constants.SECRET_GUARD_EXISTENCE,\r\n    args\r\n})\r\n\r\nexport const checkQuestion = args => ({\r\n    type: constants.CHECK_QUESTION,\r\n    args\r\n})\r\n\r\nexport const addQuestion = args => ({\r\n    type: constants.ADD_QUESTION,\r\n    args\r\n})\r\n\r\nexport const sendForgetFlag = () => ({\r\n    type: constants.SEND_FORGET_FLAG,\r\n})\r\n","import React, {useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Tag} from \"antd\";\r\nimport \"../static/style/footer.scss\"\r\nimport {COUNTER, FETCH_PARAM} from \"../constants/actionTypes\";\r\nconst linkArr = [\r\n    {\r\n        title: '极客网',\r\n        url: ''\r\n    },\r\n    {\r\n        title: '技能认证',\r\n        url: 'http://172.22.4.29:8000/'\r\n    },\r\n    {\r\n        title: '开放上机',\r\n        url: 'http://172.22.4.29/'\r\n    },\r\n    {\r\n        title: '网址大全',\r\n        url: 'http://202.202.43.125/'\r\n    }\r\n    ]\r\nconst Footer = (props) => {\r\n    const { handleCounter, handleParam, pv, uv } = props;\r\n    useEffect(() => {\r\n        handleCounter();\r\n        handleParam()\r\n    },[]);\r\n    return (\r\n        <div className={\"footerWrap\"}>\r\n            <div className={\"footer\"}>\r\n                <div className={\"footerTop\"}>\r\n                    <div>\r\n                        <p>相关链接</p>\r\n                        {\r\n                            linkArr.map((item)=>(\r\n                                <Tag\r\n                                    key={item.url}\r\n                                >\r\n                                    <a href={item.url}>\r\n                                        {item.title}\r\n                                    </a>\r\n                                </Tag>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={\"footerBottom\"}>\r\n                    <p>版权所有 极客工作室</p>\r\n                    <p style={{marginLeft: \"1rem\"}}>页面刷新量：{pv || 0}</p>\r\n                    <p style={{marginLeft: \"1rem\"}}>用户登录次数：{uv || 0}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        counter: state.getIn([\"userMana\", \"common\", \"counter\"]),\r\n        pv: state.getIn([\"userMana\", \"common\", \"pv\"]),\r\n        uv: state.getIn([\"userMana\", \"common\", \"uv\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleCounter() {\r\n            dispatch({type: COUNTER});\r\n        },\r\n        handleParam() {\r\n            dispatch({type: FETCH_PARAM})\r\n        }\r\n    })\r\n)(Footer);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport Home from \"./Home\";\r\nimport Tasks from \"./Tasks\";\r\nimport LearningData from \"./LearningData\";\r\nimport Software from \"./Software\";\r\nimport TeacherData from \"./teacherData\";\r\nimport TeacherSoftware from \"./TeacherSoftware\";\r\nimport {changeType} from \"../redux/actionCreators/resource\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { BackTop } from \"antd\";\r\nimport Nav from \"../components/nav\";\r\nimport AllTasks from \"../components/AllTasks\";\r\n\r\nconst User = props => {\r\n    const { userIdentify} = props;\r\n\r\n    const tabList = [\r\n        {name: '实验室首页', path: '/user/home'},\r\n        {name: '实验任务', path: '/user/task'},\r\n        {name: '学习资料', path: '/user/resource'},\r\n        {name: '软件下载', path: '/user/download'}\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className=\"margin_0_auto\" style={{width: '64rem'}}>\r\n                <div style={{width: '64rem'}}>\r\n                    <Nav tabList={tabList} location={props.history.location.pathname.length > 14 ? props.history.location.pathname.substr(0,props.history.location.pathname.lastIndexOf('/')) : props.history.location.pathname}/>\r\n                </div>\r\n                <div style={{\r\n                    padding: '10px 5px',\r\n                    width: '1024px',\r\n                    border: '1px solid #e8e8e8',\r\n                    minHeight: '500px'\r\n                }}>\r\n                    <Switch>\r\n                        <Route path=\"/user/home\" component={Home}/>\r\n                        <Route path=\"/user/task\" component={(userIdentify === '教师' || userIdentify === '学生') ? Tasks : AllTasks}/>\r\n                        <Route path=\"/user/resource\" component={userIdentify === \"教师\" ? TeacherData : LearningData}/>\r\n                        <Route path=\"/user/download\" component={userIdentify === \"教师\" ? TeacherSoftware : Software}/>\r\n                        <Redirect from='*' to='/user/home' />\r\n                    </Switch>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n            <BackTop />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        userIdentify: state.getIn([\"userMana\",\"common\",\"userIdentify\"]),\r\n        openKey: state.getIn([\"userMana\", \"common\", \"bigOpenKey\"]),\r\n        time: state.getIn([\"userMana\", \"common\", \"time\"])\r\n    }),\r\n    dispatch => ({\r\n        changeType(key) {\r\n            dispatch(changeType(key))\r\n        }\r\n    })\r\n)(User)\r\n\r\n// {\r\n//     userIdentify !== \"超级管理员\" ?\r\n//         <Tabs\r\n//             key={time}\r\n//             defaultActiveKey={openKey}\r\n//             style={{width: \"64rem\", margin:\"0 auto\", minHeight: \"32rem\"}}\r\n//             onChange={() => {}}\r\n//         >\r\n//             <TabPane tab={\"实验室首页\"} key={1}>\r\n//                 <Home/>\r\n//             </TabPane>\r\n//             <TabPane tab={\"实验任务\"} key={2}>\r\n//                 <Tasks/>\r\n//             </TabPane>\r\n//             <TabPane tab={\"学习资料\"} key={3}>\r\n//                 {\r\n//                     userIdentify === \"教师\" ? <TeacherData/>: <LearningData/>\r\n//                 }\r\n//             </TabPane>\r\n//             <TabPane tab={\"软件下载\"} key={4}>\r\n//                 {\r\n//                     userIdentify === \"教师\" ? <TeacherSoftware/>: <Software/>\r\n//                 }\r\n//             </TabPane>\r\n//         </Tabs>\r\n//         :\r\n//         history.push('/admin')\r\n// }\r\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Administrator from \"./pages/Administrator\";\r\nimport Users from \"./pages/Users\";\r\n\r\n\r\nexport default function () {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/user\" component={Users}/>\r\n            <Route path=\"/admin\" component={Administrator}/>\r\n            <Redirect from='*' to='/user/home' />\r\n        </Switch>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\nimport Routes from \"./Routes\";\nimport './static/style/reset.scss';\nimport {connect} from \"react-redux\";\nimport AddStudents from './components/addStudents'\n\nimport {KEEP_ALIVE} from \"./constants/actionTypes\";\n\nlet flag = true;\nfunction App(props) {\n    const { handleKeepAlive, userIdentify } = props;\n    useEffect(() => {\n        if (flag) handleKeepAlive();\n        flag = false;\n    },[]);\n  return (\n      <div className=\"App\">\n        {/*<Header />*/}\n        <Routes />\n        <AddStudents/>\n        {/*<Footer/>*/}\n        {/*<BackTop />*/}\n      </div>\n  );\n}\n\nexport default connect(\n    state => ({\n        userIdentify: state.getIn([\"userMana\", \"common\", \"userIdentify\"])\n    }),\n    dispatch => ({\n        handleKeepAlive() {\n            dispatch({ type: KEEP_ALIVE })\n        }\n    })\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { fromJS } from \"immutable\";\r\nimport * as constants from \"../../../constants/actionTypes\";\r\n\r\n\r\nconst defaultState = fromJS({\r\n    handleHomework: [],\r\n    teacher: [],\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case constants.QUERY_HOMEWORK_OK:\r\n            return state.set(\"handleHomework\", action.payload);\r\n        case constants.HANDLE_TEACHERRES_SUCCESS:\r\n            return state.merge({\r\n                teacher: action.payload\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { fromJS } from \"immutable\";\r\nimport {\r\n    default as constants,\r\n    COUNTER_SUCCESS,\r\n    LOG_OUT,\r\n    LOGIN_SUCCESS,\r\n    PRESERVE_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTERED_SUCCESS,\r\n    FETCH_QUERY_REGISTER_SUCCESS,\r\n    FETCH_PARAM_SUCCESS,\r\n    SECRET_GUARD_EXISTENCE_SUCCESS,\r\n    RESET_PASSWARD,\r\n    ADD_QUESTION_SUCCESS,\r\n    CHECK_QUESTION_SUCCESS,\r\n    SEND_FORGET_FLAG_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\n\r\nconst defaultSate = fromJS({\r\n    login: false,\r\n    userIdentify: \"游客\",\r\n    name: \"\",\r\n    userId: \"\",\r\n    academy:\"\",\r\n    class: \"\",\r\n    discipline: \"\",\r\n    grade:\"\",\r\n    sex: \"\",\r\n    type: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    bigOpenKey: sessionStorage.getItem(\"bigOpenKey\"),\r\n    smallOpenKey: sessionStorage.getItem(\"smallOpenKey\"),\r\n    time: Date.now(),\r\n    registerSuccess: false,\r\n    counter: '',\r\n    registeredFlag: \"\",\r\n    registerTotal: \"\",\r\n    registerStudent: [],\r\n    pv: '',\r\n    uv: '',\r\n    param: [],\r\n    isQuestion: '',\r\n    resetPasswardData: {},\r\n    isCheck: false,\r\n    modifyPassward: '',\r\n    visible: '',\r\n    gorgetFlag: '',\r\n    newUser: ''\r\n});\r\n\r\nexport default (state = defaultSate, action) => {\r\n    switch (action.type) {\r\n        case LOG_OUT:\r\n            return state.merge({\r\n                login: false,\r\n                userIdentify: \"游客\",\r\n                userId: \"\",\r\n                academy:\"\",\r\n                class: \"\",\r\n                discipline: \"\",\r\n                grade:\"\",\r\n                sex: \"\",\r\n                type: \"\",\r\n                phone: \"\",\r\n                bigOpenKey: sessionStorage.setItem(\"bigOpenKey\", \"1\"),\r\n                time: Date.now()\r\n            });\r\n        case LOGIN_SUCCESS:\r\n            return state.merge({\r\n                login: true,\r\n                userIdentify:action.payload.id,\r\n                name: action.payload.name,\r\n                userId: action.payload.userId,\r\n                academy: action.payload.academy,\r\n                class: action.payload.cls,\r\n                discipline: action.payload.discipline,\r\n                grade: action.payload.grade,\r\n                sex: action.payload.sex,\r\n                type: action.payload.type,\r\n                phone: action.payload.phone,\r\n                password: action.payload.password,\r\n                bigOpenKey: sessionStorage.setItem(\"bigOpenKey\", \"1\"),\r\n                time: Date.now(),\r\n            });\r\n        case RESET_PASSWARD:\r\n            return state.merge({\r\n                resetPasswardData: action.payload,\r\n                modifyPassward: true,\r\n                isQuestion: false,  \r\n                newUser: new Date()\r\n            })\r\n        case SECRET_GUARD_EXISTENCE_SUCCESS:\r\n            return state.merge({\r\n                isQuestion: action.payload,\r\n                // modifyPassward: new Date()\r\n            })\r\n        case SEND_FORGET_FLAG_SUCCESS:\r\n            return state.merge({\r\n                forgetFlag: new Date()\r\n            })\r\n        case ADD_QUESTION_SUCCESS:\r\n            return state.merge({\r\n                isQuestion: true\r\n            })\r\n        case CHECK_QUESTION_SUCCESS: \r\n            return state.merge({\r\n                isCheck: true,\r\n                visible: new Date(),\r\n                login: true,\r\n                userIdentify: (action.payload.type == 'student' && '学生') || (action.payload.type == 'teacher' && '教师') || (action.payload.type == 'admin' && '超级管理员'),\r\n                name: action.payload.userName,\r\n                userId: action.payload.userId,\r\n                academy: action.payload.academy,\r\n                class: action.payload.cls,\r\n                discipline: action.payload.discipline,\r\n                grade: action.payload.grade,\r\n                sex: action.payload.sex,\r\n                type: action.payload.type,\r\n                phone: action.payload.phone,\r\n                password: action.payload.password,\r\n                bigOpenKey: sessionStorage.setItem(\"bigOpenKey\", \"1\"),\r\n            })\r\n        case REGISTER_SUCCESS:\r\n            return state.merge({\r\n                registerSuccess: true,\r\n            });\r\n        case PRESERVE_SUCCESS:\r\n            return state.merge({\r\n                login: true,\r\n                name: action.payload.userName,\r\n                userId: action.payload.userId,\r\n                academy: action.payload.academy,\r\n                class: action.payload.class,\r\n                discipline: action.payload.discipline,\r\n                grade: action.payload.grade,\r\n                sex: action.payload.sex,\r\n                type: action.payload.type,\r\n                phone: action.payload.phone,\r\n                password: action.payload.password,\r\n                visible: new Date()\r\n            });\r\n        case COUNTER_SUCCESS:\r\n            return state.merge({\r\n                counter: action.payload\r\n            });\r\n        case FETCH_PARAM_SUCCESS:\r\n            return state.merge({\r\n                pv: action.payload[6].keyValue,\r\n                uv: action.payload[7].keyValue,\r\n                param: action.payload\r\n            });\r\n        //老师查询待批准学生\r\n        case FETCH_QUERY_REGISTER_SUCCESS:\r\n            return state.merge({\r\n                registerTotal: action.payload.total,\r\n                registerStudent: action.payload.items,\r\n            });\r\n        //老师批准学生\r\n        // case constants.REGISTERED_SUCCESS:\r\n        //     return state.merge({\r\n        //         registerTotal: action.payload.total,\r\n        //         registerStudent: action.payload.items,\r\n        //     });\r\n        case REGISTERED_SUCCESS:\r\n            return state.set(\"registeredFlag\", new Date());\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport student from \"./student.js\";\r\nimport common from \"./common\";\r\n\r\nexport default combineReducers({\r\n    student,\r\n    common\r\n})","import {fromJS} from \"immutable\";\r\nimport * as constants from \"../../../constants/actionTypes\"\r\n\r\nconst defaultState = fromJS({\r\n    studyResource: [],\r\n    softwareResource:[],\r\n    searchFlag: false,\r\n    allSoftwareTotal: \"\",\r\n    allLearningTotal: \"\",\r\n    mySoftwareTotal: \"\",\r\n    myLearningTotal: \"\",\r\n    searchTotal: \"\",\r\n    type: \"\",\r\n    resourceName: \"\",\r\n    //上传人名字\r\n    userName: \"\",\r\n    teacherData: [],\r\n    teacherSoftware: [],\r\n    registerTotal: \"\",\r\n    registerStudent: [],\r\n    teacherName: [],\r\n    studentTotal: \"\",\r\n    studentMessage: [],\r\n    studentId: \"\",\r\n    studentName: \"\",\r\n    page: 1,\r\n    time: Date.now(),\r\n    uploadFlag: true,\r\n    softwareTemp: \"\",\r\n    resourceTemp: \"\",\r\n    learningDataTemp: \"\",\r\n    softwareDataTemp: \"\",\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        //获取学习资源\r\n        case constants.FETCH_STUDY_RES_SUCCESS:\r\n            //merge：浅合并，新数据与旧数据对比，旧数据中不存在的属性直接添加，旧数据中已存在的属性用新数据中的覆盖\r\n            return state.merge({\r\n                searchFlag: false,\r\n                allLearningTotal: action.payload.total,\r\n                studyResource: action.payload.items,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                page: action.payload.page,\r\n            });\r\n            //学习资源下载次数\r\n        case constants.DOWNLOAD_RESOURCE_SUCCESS:\r\n            return state.set(\"learningDataTemp\", new Date());\r\n        case constants.DOWNLOAD_SOFTWARE_SUCCESS:\r\n            return state.set(\"softwareDataTemp\", new Date());\r\n            //获取软件资源\r\n        case constants.FETCH_SOFTWARE_RES_SUCCESS:\r\n            return state.merge({\r\n                storageSoftwareRes: JSON.parse(action.softwareResource),\r\n                storageSoftwareTotal: JSON.parse(action.softwareTotal),\r\n                allSoftwareTotal: action.payload.total,\r\n                softwareResource: action.payload.items,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                page: action.payload.page,\r\n            });\r\n            //下载软件\r\n        case constants.FETCH_LOAD_RESOURCE_SUCCESS:\r\n            return state.merge({\r\n                learningUrl: action.loadUrl\r\n            });\r\n            //搜索学习资源\r\n        case constants.FETCH_SEARCH_DATA_SUCCESS:\r\n            return state.merge({\r\n                searchFlag: true,\r\n                allLearningTotal: action.payload.total,\r\n                studyResource: action.payload.items,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                page: action.payload.page,\r\n            });\r\n            //搜索软件资源\r\n        case constants.FETCH_SEARCH_SOFTWARE_SUCCESS:\r\n            return state.merge({\r\n                searchFlag: true,\r\n                allSoftwareTotal: action.payload.total,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                softwareResource: action.payload.items,\r\n                page: action.payload.page,\r\n            });\r\n            //关于tab键的切换\r\n        // case constants.CHANGE_TYPE:\r\n        //     // return state.set(\"type\", action.key === '3' ? \"material\" : \"software\");\r\n        //     console.log(action.key)\r\n        //     return state.merge({\r\n        //         type: (action.key === '3' && \"material\") || (action.key === '4' && \"software\")\r\n        //     })\r\n            //获取老师学习资源\r\n        case  constants.FETCH_TEACHER_DATA_SUCCESS:\r\n            return state.merge({\r\n                myLearningTotal: action.payload.total,\r\n                teacherData: action.payload.items,\r\n            });\r\n            //获取老师软件资源\r\n        case  constants.FETCH_TEACHER_SOFTWARE_SUCCESS:\r\n            return state.merge({\r\n                mySoftwareTotal: action.payload.total,\r\n                teacherSoftware: action.payload.items,\r\n            });\r\n            //删除我的资料\r\n        case constants.DELETE_DATA_SUCCESS:\r\n            return state.set(\"resourceTemp\", new Date());\r\n            //删除我的软件\r\n        case constants.DELETE_SOFTWARE_SUCCESS:\r\n            return state.set(\"softwareTemp\", new Date());\r\n            //上传学习资源\r\n        case constants.FETCH_UPLOAD_DATA_SUCCESS:\r\n            return state.merge({\r\n                time: Date.now(),\r\n                uploadFlag: new Date(),\r\n                resourceTemp: Date.now()\r\n            });\r\n        case constants.NOT_UPLOAD:\r\n            return state.merge({\r\n                uploadFlag: new Date(),\r\n                time: new Date(),\r\n            });\r\n            //上传软件资源\r\n        case constants.FETCH_UPLOAD_SOFTWARE_SUCCESS:\r\n            return state.merge({\r\n                time: Date.now(),\r\n                uploadFlag: new Date(),\r\n                softwareTemp: Date.now()\r\n            });\r\n        //     //老师查询待批准学生\r\n        // case constants.FETCH_QUERY_REGISTER_SUCCESS:\r\n        //     return state.merge({\r\n        //          registerTotal: action.payload.total,\r\n        //          registerStudent: action.payload.items,\r\n        //     });\r\n        //     //老师批准学生\r\n        // case constants.REGISTERED_SUCCESS:\r\n        //     return state.merge({\r\n        //         registerTotal: action.payload.total,\r\n        //         registerStudent: action.payload.items,\r\n        //     });\r\n            //获取全部老师姓名\r\n        case constants.HANDLE_TEACHERRES_SUCCESS:\r\n            return state.merge({\r\n                teacherName: action.payload\r\n            });\r\n        //老师搜索学生信息\r\n        case constants.FETCH_STUDENT_MESSAGE_SUCCESS:\r\n            return state.merge({\r\n                studentTotal: action.payload.total,\r\n                studentMessage: action.payload.items,\r\n                studentId: action.userId,\r\n                studentName: action.userName,\r\n                page: action.payload.page,\r\n                time: Date.now()\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux-immutable\";\r\nimport resource from \"./resource\";\r\n\r\nexport default combineReducers({\r\n    resource,\r\n})","import {fromJS} from \"immutable\";\r\nimport * as constants from '../../constants/actionTypes';\r\nconst defaultState = fromJS(\r\n    {\r\n        announceResource: [],\r\n        total: \"\",\r\n        releaseAnnounceFlag: true,\r\n        deleteAnnounceFlag: true,\r\n    }\r\n);\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case constants.QUERY_ANNOUNCE_SUCCESS:\r\n            return state.merge({\r\n                announceResource: action.payload.items,\r\n                total: action.payload.total,\r\n            }\r\n            );\r\n        case constants.ADMIN_RELEASE_ANNOUNCE_SUCCESS:\r\n        case constants.ADMIN_EDIT_ANNOUNCE_SUCCESS:\r\n            const releaseAnnounceFlag = state.toJS().releaseAnnounceFlag;\r\n            return state.set(\r\n                \"releaseAnnounceFlag\", !releaseAnnounceFlag\r\n            );\r\n        case constants.ADMIN_DELETE_ANNOUNCE_SUCCESS:\r\n            const deleteAnnounceFlag = state.toJS().deleteAnnounceFlag;\r\n            return state.set(\r\n                \"deleteAnnounceFlag\", !deleteAnnounceFlag\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { fromJS,  } from \"immutable\";\r\nimport * as constants from \"../../constants/actionTypes\";\r\nconst defaultState = fromJS({\r\n    taskTotal: \" \",\r\n    courseTotal: \"\",\r\n    submitTotal: \"\",\r\n    downloadUrl: \"\",\r\n    courseTask: [],\r\n    taskResource: {},\r\n    myCourse: [],\r\n    allCourse: [],\r\n    unsubmitList: [],\r\n    submitList: [],\r\n    checkList : [],\r\n    studentCourseList: [],\r\n    teacherUploadFlag: false,\r\n    studentUploadFlag: false,\r\n    teacherUpdateFlag: false,\r\n    updateCourseFlag: false,\r\n});\r\nexport default (state = defaultState, action) => {\r\n    //那个游客也可见的课程页面，并用于学生添加课程\r\n    switch (action.type) {\r\n        case constants.QUERY_COURSE_RES_SUCCESS:\r\n            return state.merge({\r\n                taskTotal: action.payload.total,\r\n                courseResource: action.payload.items\r\n            });\r\n        case constants.QUERY_COURSE_TASK_SUCCESS:\r\n            let obj = {};\r\n            obj[action.teacherCourseId] = action.payload;\r\n            let newObj = Object.assign(obj,action.courseTask);\r\n            return state.set(\r\n                \"courseTask\", newObj,\r\n            );\r\n        case constants.QUERY_MY_COURSE_SUCCESS:\r\n            return state.set(\r\n                \"myCourse\", action.payload\r\n            );\r\n        case constants.TEACHER_QUERY_COURSE_SUCCESS:\r\n            return state.merge({\r\n                allCourse: action.payload.items,\r\n                courseTotal: action.payload.total,\r\n            });\r\n        case constants.STUDENT_QUERY_SUBMIT_SUCCESS:\r\n            return state.set(\r\n                \"checkList\", action.payload\r\n            );\r\n        case constants.TEACHER_QUERY_UNSUBMIT_SUCCESS:\r\n            return state.set(\r\n                \"unsubmitList\", action.payload\r\n            );\r\n        case constants.TEACHER_QUERY_SUBMIT_SUCCESS:\r\n            return state.merge({\r\n                submitTotal: action.payload.total,\r\n                submitList: action.payload.items\r\n            });\r\n        case constants.TEACHER_DOWNLOAD_SUBMIT_SUCCESS:\r\n            return state.set(\r\n                \"downloadUrl\", action.payload\r\n            );\r\n            //修改store\r\n            //学生删除课程\r\n        case constants.STUDENT_DELETE_COURSE_SUCCESS:\r\n            const myCourseRes_S = state.toJS().myCourse;\r\n            const courseResourceRes_S = state.toJS().courseResource;\r\n            const myCourseArr_S = [];\r\n            myCourseRes_S.map((e)=>(\r\n                myCourseArr_S.push(e.studentCourseId)\r\n              ));\r\n            courseResourceRes_S.map((e)=>{\r\n                if(e.teacherCourseId === action.teacherCourseId){\r\n                    e.added = !e.added;\r\n                }\r\n            });\r\n             const myCourseIndex_S = myCourseArr_S.indexOf(action.studentCourseId);\r\n            myCourseRes_S.splice(myCourseIndex_S, 1);\r\n            return state.merge({\r\n                myCourse: myCourseRes_S,\r\n                courseResource: courseResourceRes_S\r\n            });\r\n            //学生删除作业\r\n        case constants.STUDENT_DELETE_HOMEWORK_SUCCESS:\r\n            let checkListRes = state.toJS().checkList;\r\n            const checkListSearch = action.payload;\r\n            let checkListArr = [];\r\n            checkListRes.map((e)=>(\r\n                checkListArr.push(e.id)\r\n            ));\r\n            const checkListIndex = checkListArr.indexOf(checkListSearch);\r\n            checkListRes.splice(checkListIndex, 1);\r\n            return state.set(\r\n                \"checkList\", checkListRes\r\n            );\r\n            //老师删除课程后\r\n            case constants.TEACHER_DELETE_COURSE_SUCCESS:\r\n                const myCourseRes_T = state.toJS().myCourse;\r\n                const allCourseRes_T = state.toJS().allCourse;\r\n                let myCourseArr_T = [];\r\n                myCourseRes_T.map((e)=>(\r\n                    myCourseArr_T.push(e.teacherCourseId)\r\n                ));\r\n                allCourseRes_T.map((e) => {\r\n                    if(e.id === action.payload){\r\n                        e.added = !e.added;\r\n                    }\r\n                });\r\n                const myCourseIndex_T = myCourseArr_T.indexOf(action.payload);\r\n                myCourseRes_T.splice(myCourseIndex_T, 1);\r\n                return state.merge({\r\n                    myCourse: myCourseRes_T,\r\n                    allCourse: allCourseRes_T\r\n                });\r\n            //老师删除任务后\r\n            case constants.TEACHER_DELETE_TASK_SUCCESS:\r\n                let teacherDeleteTask = state.toJS().courseTask;\r\n                let deleteIndex = 0;\r\n                    teacherDeleteTask[action.teacherCourseId].map((item, index)=>{\r\n                    if(item.id === action.taskId){\r\n                        deleteIndex = index;\r\n                        return index;\r\n                    }\r\n                });\r\n                teacherDeleteTask[action.teacherCourseId].splice(deleteIndex, 1);\r\n                return state.set(\r\n                    \"courseTask\", teacherDeleteTask\r\n                );\r\n\r\n            //学生添加课程\r\n        case constants.STUDENT_ADD_COURSE_SUCCESS:\r\n            const courseResourceRes = state.toJS().courseResource;\r\n            const newCourseResource = courseResourceRes.map((e)=>{\r\n                    if(e.teacherCourseId === action.payload){\r\n                        e.added = !e.added;\r\n                    }\r\n                    return e;\r\n                });\r\n            return state.set(\r\n                \"courseResource\", newCourseResource\r\n            );\r\n            //老师添加课程后：\r\n        case constants.TEACHER_ADD_COURSE_SUCCESS:\r\n            const allCourseRes = state.toJS().allCourse;\r\n            const updateCourseFlag1 = state.toJS().updateCourseFlag;\r\n            allCourseRes.map((e) => {\r\n                if(e.id === action.payload){\r\n                    e.added = !e.added;\r\n                }\r\n            });\r\n            return state.merge({\r\n                allCourse: allCourseRes,\r\n                updateCourseFlag: !updateCourseFlag1,\r\n            });\r\n\r\n            //remark改变后\r\n        case constants.TEACHER_ADD_REMARK_SUCCESS:\r\n            let myCourseRes = state.toJS().myCourse;\r\n            const updateCourseFlag2 = state.toJS().updateCourseFlag;\r\n            let teacherCourseId1 = action.payload.teacherCourseId;\r\n            let remark = action.payload.remark;\r\n            let myCourseList = myCourseRes.map((e)=>{\r\n                if(e.teacherCourseId === teacherCourseId1)\r\n                     e.remark = remark ;\r\n                return e;\r\n            });\r\n            return state.merge({\r\n                myCourse: myCourseList,\r\n                updateCourseFlag: !updateCourseFlag2,\r\n\r\n            });\r\n            //开启上传下载作业！\r\n        case constants.TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS:\r\n            let toggleCourseTask = state.toJS().courseTask;\r\n                toggleCourseTask[action.teacherCourseId].map((e)=>{\r\n                if(e.id === action.taskId){\r\n                    e.closed = !e.closed;\r\n                    return e;\r\n                }\r\n            });\r\n            return state.set(\r\n                \"courseTask\",toggleCourseTask\r\n            );\r\n            //老师发布任务后，任务动态显示在列表在\r\n        case constants.TEACHER_RELEASE_TASKS_SUCCESS:\r\n            const releaseTask = state.toJS().courseTask;\r\n            const teacherUploadFlag = state.toJS().teacherUploadFlag;\r\n            releaseTask[action.teacherCourseId] = action.payload;\r\n            return state.merge({\r\n                courseTask: releaseTask,\r\n                teacherUploadFlag: !teacherUploadFlag,\r\n            });\r\n            //老师发布任务失败\r\n        case constants.TEACHER_RELEASE_TASKS_FAILED:\r\n            const teacherUploadFlag2 = state.toJS().teacherUploadFlag;\r\n            return state.set(\r\n                \"teacherUploadFlag\",!teacherUploadFlag2\r\n            );\r\n            //老师修改任务后，任务变化\r\n        case constants.TEACHER_UPDATE_TASK_SUCCESS:\r\n            const updateTask =  state.toJS().courseTask;\r\n            const teacherUpdateFlag = state.toJS().teacherUpdateFlag;\r\n            updateTask[action.teacherCourseId] = action.payload;\r\n            return state.merge({\r\n                courseTask: updateTask,\r\n                teacherUpdateFlag: !teacherUpdateFlag\r\n            });\r\n            //老师修改任务失败\r\n        case constants.TEACHER_UPDATE_TASK_FAILED:\r\n            const teacherUpdateFlag2 = state.toJS().teacherUpdateFlag;\r\n            return state.set(\r\n                \"teacherUpdateFlag\", !teacherUpdateFlag2\r\n            );\r\n            //学生上传任务成功,学生上传任务失败\r\n        case constants.STUDENT_UPLOAD_HOMEWORK_SUCCESS:\r\n        case constants.STUDENT_UPLOAD_HOMEWORK_FAILED:\r\n            const studentUploadFlag = state.toJS().studentUploadFlag;\r\n            return state.set(\r\n                \"studentUploadFlag\", !studentUploadFlag\r\n            );\r\n            //搜索课程\r\n        case constants.FETCH_SEARCH_COURSE_SUCCESS:\r\n            return state.merge({\r\n                taskTotal: action.payload.total,\r\n                courseResource: action.payload.items\r\n            });\r\n        case constants.TEACHER_CHECK_STUDENT_SUCCESS:\r\n            return state.set(\r\n                \"studentCourseList\", action.payload,\r\n            );\r\n        case constants.TEACHER_DELETE_STUDENT_SUCCESS:\r\n            let studentCourseList = state.toJS().studentCourseList;\r\n            let arr = [];\r\n            studentCourseList.map(e=>{\r\n                if(e.studentCourseId !== action.payload) {\r\n                    return arr.push(e);\r\n                }\r\n            });\r\n            return state.set(\r\n                \"studentCourseList\", arr\r\n            );\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { fromJS } from \"immutable\";\r\nimport * as constants from \"../../../constants/actionTypes\"\r\n\r\nconst defaultState = fromJS({\r\n    adminData: [],\r\n    adminTeacherData: [],\r\n    adminStudentData: [],\r\n    adminRegisterUserData: [],\r\n    adminTotal: \"\",\r\n    registerUserTotal: \"\",\r\n    studentTotal: \"\",\r\n    teacherTotal: \"\",\r\n    temp: '',\r\n    addTeacherFlag: true,\r\n    addAdminFlag: true,\r\n    addStudentFlag: true,\r\n    modifyAdminTemp: '',\r\n    modifyTeacherTemp: '',\r\n    modifyStudentTemp: '',\r\n    teacherPage: \"\",\r\n    studentPage: \"\",\r\n    studentSearchFlag: false,\r\n    teacherSearchFlag: false,\r\n    paramSystem: [],\r\n    addVisible: false,\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        //获取注册用户信息\r\n        case constants.FETCH_REGISTER_DATA_SUCCESS:\r\n            return state.merge({\r\n                adminRegisterUserData: action.payload.items,\r\n                registerUserTotal: action.payload.total\r\n            });\r\n            //批量授权\r\n        case constants.AGREE_REGISTER_SUCCESS:\r\n            return state.set(\"temp\", new Date());\r\n        //获取学生数据\r\n        case constants.FETCH_STUDENT_DATA_SUCCESS:\r\n            return state.merge({\r\n                adminStudentData: action.payload.items,\r\n                studentTotal: action.payload.total,\r\n                studentPage: action.payload.page,\r\n            });\r\n            //添加学生\r\n        case constants.ADD_NEW_STUDENT_SUCCESS:\r\n            const {payloadS, newDataS } = action;\r\n            const dataS = [newDataS, ...payloadS];\r\n            dataS.pop();\r\n            return state.merge({\r\n                adminStudentData: dataS,\r\n                addStudentFlag: false,\r\n                addVisible: false\r\n            });\r\n            //删除学生\r\n        case constants.DELETE_STUDENT_SUCCESS:\r\n            return state.set(\"temp\",new Date());\r\n            //导入学生\r\n        case constants.IMPORT_USER_success:\r\n            return state.set(\"temp\", new Date());\r\n            //修改学生\r\n        case constants.MODIFY_STUDENT_SUCCESS:\r\n            return state.set(\"modifyStudentTemp\", new Date());\r\n            //搜索学生\r\n        case constants.SEARCH_STUDENT_SUCCESS:\r\n            return state.merge({\r\n                adminStudentData: action.payload.items,\r\n                studentTotal: action.payload.total,\r\n                studentPage: action.payload.page,\r\n                studentSearchFlag: true\r\n            });\r\n        //获取管理员数据\r\n        case constants.FETCH_ADMINISTRATOR_DATA_SUCCESS:\r\n            return state.merge({\r\n                adminData: action.payload.items,\r\n                adminTotal: action.payload.total\r\n            });\r\n            //添加管理员信息\r\n        case constants.ADD_NEW_ADMIN_SUCCESS:\r\n            const { payloadA, newDataA } = action;\r\n            const dataA = [newDataA, ...payloadA];\r\n            dataA.pop();\r\n            return state.merge({\r\n                adminData: dataA,\r\n                addAdminFlag: false,\r\n                addVisible:false\r\n            });\r\n            //修改管理员信息\r\n        case constants.MODIFY_ADMIN_SUCCESS:\r\n            return state.set(\"modifyAdminTemp\", new Date());\r\n            //获取老师数据\r\n        case constants.FETCH_TEACHER_RES_SUCCESS:\r\n            return state.merge({\r\n                adminTeacherData: action.payload.items,\r\n                teacherTotal: action.payload.total,\r\n                teacherPage: action.payload.page\r\n            });\r\n            //添加老师\r\n        case constants.ADD_NEW_TEACHER_SUCCESS:\r\n            const { payload, newData } = action;\r\n            const data = [newData, ...payload];\r\n            data.pop();\r\n            return state.merge({\r\n                adminTeacherData: data,\r\n                addTeacherFlag: false\r\n            });\r\n            //修改教师信息\r\n        case constants.MODIFY_TEACHER_SUCCESS:\r\n            return state.set(\"modifyTeacherTemp\", new Date());\r\n            //搜索老师\r\n        case constants.SEARCH_TEACHER_SUCCESS:\r\n            return state.merge({\r\n                adminTeacherData: action.payload.items,\r\n                teacherTotal: action.payload.total,\r\n                teacherPage: action.payload.page,\r\n                teacherSearchFlag: true\r\n            });\r\n            //删除老师\r\n        case constants.DELETE_TEACHER_SUCCESS:\r\n            return state.set(\"temp\",new Date());\r\n            //删除注册用户\r\n        case constants.DELETE_REGISTER_USER_SUCCESS:\r\n            return state.set(\"temp\", new Date());\r\n            //获取系统参数\r\n        case constants.FETCH_PARAM_SUCCESS:\r\n            return state.merge({\r\n                paramSystem: action.payload\r\n            });\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n","import { fromJS } from \"immutable\";\r\nimport * as constants from \"../../../constants/actionTypes\"\r\nconst defaultState = fromJS({\r\n    resourceData: '',\r\n    resourceTotal: '',\r\n    softwareData: '',\r\n    softwareTotal: '',\r\n    resourcePage: '',\r\n    softwarePage: '',\r\n    temp: '',\r\n    resourceSearchFlag: false,\r\n    softwareSearchFlag: false,\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        //获取学习资料\r\n        case constants.FETCH_ADMIN_RESOURCE_DATA_SUCCESS:\r\n            return state.merge({\r\n                resourceData: action.payload.items,\r\n                resourceTotal: action.payload.total,\r\n                resourcePage: action.payload.page\r\n            });\r\n            //获取软件\r\n        case constants.FETCH_ADMIN_SOFTWARE_DATA_SUCCESS:\r\n            return state.merge({\r\n                softwareData: action.payload.items,\r\n                softwareTotal: action.payload.total,\r\n                softwarePage: action.payload.page\r\n            });\r\n            //搜索学习资料\r\n        case constants.SEARCH_RESOURCE_DATA_SUCCESS:\r\n            return state.merge({\r\n                resourceData: action.payload.items,\r\n                resourceTotal: action.payload.total,\r\n                resourcePage: action.payload.page,\r\n                resourceSearchFlag: true,\r\n            });\r\n            //上传学习资料\r\n        case constants.IMPORT_RESOURCE_SUCCESS:\r\n            return state.set(\"temp\", new Date());\r\n            //搜索软件资料\r\n        case constants.SEARCH_SOFTWARE_DATA_SUCCESS:\r\n            return state.merge({\r\n                softwareData: action.payload.items,\r\n                softwareTotal: action.payload.total,\r\n                softwarePage: action.payload.page,\r\n                resourceSearchFlag: true\r\n            });\r\n            //删除学习资料\r\n        case constants.DELETE_RESOURCE_DATA_SUCCESS:\r\n            return state.set(\"temp\", new Date());\r\n            //删除软件\r\n        case constants.DELETE_SOFTWARE_DATA_SUCCESS:\r\n            return state.set(\"temp\", new Date());\r\n            //导入软件\r\n        case constants.IMPORT_SOFTWARE_SUCCESS:\r\n            return state.set(\"temp\", new Date());\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n","import { fromJS } from \"immutable\";\r\nimport * as constants from \"../../../constants/actionTypes\";\r\nconst defaultState = fromJS({\r\n    labCourses: [],\r\n    labCourseTotal: \"\",\r\n    addCourseFlag: true,\r\n    deleteCourseFlag: true,\r\n    importCourseFlag: true,\r\n    studentCourses: [],\r\n    studentCourseTotal: \"\",\r\n    studentCourseFlag: true,\r\n    teacherCourseFlag: true,\r\n});\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case constants.ADMIN_QUERY_LABCOURSE_SUCCESS:\r\n            return state.merge({\r\n                labCourses: action.payload.items,\r\n                labCourseTotal: action.payload.total,\r\n            });\r\n        case constants.ADMIN_ADD_LABCOURSE_SUCCESS:\r\n            const addCourseFlag = state.toJS().addCourseFlag;\r\n            return state.set(\r\n                \"addCourseFlag\", !addCourseFlag\r\n            );\r\n        case constants.ADMIN_DELETE_LABCOURSE_SUCCESS:\r\n            const deleteCourseFlag = state.toJS().deleteCourseFlag;\r\n            return state.set(\r\n                \"deleteCourseFlag\", !deleteCourseFlag\r\n        );\r\n        case constants.ADMIN_IMPORT_LABCOURSE_SUCCESS:\r\n            const importCourseFlag = state.toJS().importCourseFlag;\r\n            return state.set(\r\n                \"importCourseFlag\", !importCourseFlag\r\n            );\r\n        case constants.ADMIN_QUERY_STUDENTCOURSE_SUCCESS:\r\n            return state.merge({\r\n                studentCourses: action.payload.items,\r\n                studentCourseTotal: action.payload.total,\r\n            });\r\n        case constants.DELETE_STUDENTCOURSE_SUCCESS:\r\n            const studentCourseFlag = state.toJS().studentCourseFlag;\r\n            return state.set(\r\n                \"studentCourseFlag\", !studentCourseFlag\r\n            );\r\n        case constants.ADMIN_DELETE_TEACHERCOURSES_SUCCESS:\r\n            const teacherCourseFlag = state.toJS().teacherCourseFlag;\r\n            return state.set(\r\n                \"teacherCourseFlag\", !teacherCourseFlag\r\n            );\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport userManage from './userManage';\r\nimport resourceManage from \"./resourceManage\";\r\nimport labCourse from \"./labCourse\";\r\n\r\nexport default combineReducers({\r\n    userManage,\r\n    resourceManage,\r\n    labCourse,\r\n})\r\n","import { combineReducers } from \"redux-immutable\";\r\nimport userMana from \"./userMana\";\r\nimport resource from \"./resource\";\r\nimport announce from \"./announce\";\r\nimport course from \"./course\";\r\nimport admin from \"./adminMana\";\r\n\r\nexport default combineReducers({\r\n    userMana,\r\n    resource,\r\n    announce,\r\n    course,\r\n    admin\r\n})","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n    LOGIN,\r\n    QUERY_HOMEWORK,\r\n    QUERY_HOMEWORK_OK,\r\n    REGISTER,\r\n    REGISTER_SUCCESS,\r\n    TEACHERRES,\r\n    HANDLE_TEACHERRES_SUCCESS,\r\n    LOGIN_SUCCESS,\r\n    PRESERVE,\r\n    PRESERVE_SUCCESS,\r\n    FETCH_QUERY_REGISTER,\r\n    FETCH_QUERY_REGISTER_SUCCESS,\r\n    REGISTERED,\r\n    REGISTERED_SUCCESS,\r\n    SECRET_GUARD_EXISTENCE,\r\n    SECRET_GUARD_EXISTENCE_SUCCESS,\r\n    RESET_PASSWARD,\r\n    CHECK_QUESTION,\r\n    CHECK_QUESTION_SUCCESS,\r\n    ADD_QUESTION,\r\n    ADD_QUESTION_SUCCESS,\r\n    SEND_FORGET_FLAG,\r\n    SEND_FORGET_FLAG_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\nimport { openNotification } from \"../../../utils/commonFunction\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction *handleQueryHomework(args) {\r\n    try {\r\n        const { userId, taskId } = args;\r\n        const data = { userId, taskId };\r\n        const res = yield call(Service.post, \"student/queryWork\", data);\r\n        if (res.data.error_code === 0) {\r\n            yield put({type: QUERY_HOMEWORK_OK, payload: res.data.data})\r\n        } else {\r\n\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//登录请求\r\nfunction *handleLogin(args) {\r\n    try {\r\n        const { userId, password} = args.args;\r\n        const data = { userId, password };\r\n        const res = yield call(Service.post, \"login\", data);\r\n        switch (res.data.error_code) {\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 0:\r\n                let name = res.data.data.userName;\r\n                let id = \"游客\";\r\n                switch (res.data.data.type) {\r\n                    case \"student\":\r\n                        id = \"学生\";\r\n                        break;\r\n                    case \"teacher\":\r\n                        id = \"教师\";\r\n                        break;\r\n                    case \"admin\":\r\n                        id = \"超级管理员\";\r\n                        break;\r\n                    default:\r\n                        return id;\r\n                }\r\n                localStorage.setItem(\"access\", res.data.data.token);\r\n                yield put({\r\n                    type: LOGIN_SUCCESS,\r\n                    payload: {\r\n                        id,\r\n                        name: res.data.data.userName,\r\n                        userId: res.data.data.userId,\r\n                        academy: res.data.data.academy,\r\n                        class: res.data.data.cls,\r\n                        discipline: res.data.data.discipline,\r\n                        grade: res.data.data.grade,\r\n                        sex: res.data.data.sex,\r\n                        type: res.data.data.type,\r\n                        phone: res.data.data.phone,\r\n                        password: res.data.data.password,\r\n                    }\r\n                });\r\n                openNotification(res.data.message, \"已登陆\");\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message, \"登录失败\");\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 300:\r\n                localStorage.setItem(\"access\", res.data.data.token);\r\n                yield put({\r\n                    type: RESET_PASSWARD,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification('您是新用户，请添加密保问题');\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//注册请求\r\nfunction *handleRegister(args) {\r\n    try {\r\n        const { academy, cls, discipline, grade, password, phone, sex, teacherId, userId, userName } = args.args;\r\n        const data = {academy, cls, discipline, grade, password, phone, sex, teacherId, userId, userName};\r\n        const res = yield call(Service.post, \"register\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: REGISTER_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//请求所有老师姓名\r\nfunction *handleTeacher() {\r\n    try {\r\n        const teacherRes = yield call(Service.get, \"queryAllTeacher\");\r\n        let itemsArr = teacherRes.data.data.items;\r\n        let teacherName = itemsArr.map((item,index) => {\r\n            return  [item.userName, item.userId];\r\n        });\r\n        switch (teacherRes.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: HANDLE_TEACHERRES_SUCCESS,\r\n                    payload: [...teacherName]\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(teacherRes.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(teacherRes.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(teacherRes.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//修改自己信息\r\nfunction *handlePreserve(args) {\r\n    try {\r\n        const {userId, userName, grade, academy, discipline, cls, phone, sex, password} = args.args;\r\n        const data = {userId, userName, grade, academy, discipline, cls, phone, sex, password};\r\n        const res = yield call(Service.post, \"user/updateMySelfInfo\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: PRESERVE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                openNotification(\"修改密码失败\");\r\n        }\r\n    } catch(e) {\r\n\r\n    }\r\n}\r\n\r\n//老师查询待批准的学生\r\nfunction *handleQueryRegister(data) {\r\n    const { userId, type, page } = data.args;\r\n    const url = `register/queryRegister?userId=${userId}&type=${type}&page=${page}`;\r\n    const res = yield call(Service.get, url);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: FETCH_QUERY_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\n//老师批准注册用户\r\nfunction *handleRegistered(args) {\r\n    console.log('1')\r\n    const {userId} = args.args;\r\n    let formData = new FormData();\r\n    formData.append(\"list\", userId);\r\n    const list = formData.get(\"list\");\r\n    const data = {list};\r\n    const res = yield call(Service.post, \"register/registered\" ,data);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: REGISTERED_SUCCESS,\r\n            });\r\n            openNotification(res.data.message);\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n//查询是否有密保问题\r\nfunction *secretGuardExistence(args) {\r\n    const res = yield call(Service.get, `user/secretGuardExistence?userId=${args.args}`);\r\n    console.log(res)\r\n    if(res.data.error_code === 0) {\r\n        yield put({\r\n            type: SECRET_GUARD_EXISTENCE_SUCCESS,\r\n            payload: res.data.data\r\n        })\r\n    } else {\r\n        openNotification(res.data.message)\r\n    }\r\n}\r\n//传送忘记密码标志\r\nfunction *sendForgetFlag() {\r\n    yield put({\r\n        type: SEND_FORGET_FLAG_SUCCESS\r\n    })\r\n}\r\n//验证密保\r\nfunction *checkQuestion(args) {\r\n    const res = yield call(Service.get, `user/checkSecretGuard?userId=${args.args.userId}&question=${args.args.question}&answer=${args.args.answer}&password=${args.args.password}`,);\r\n    if(res.data.error_code === 0) {\r\n        openNotification('修改密码成功')\r\n        yield put({\r\n            type: CHECK_QUESTION_SUCCESS,\r\n            payload: res.data.data\r\n        })\r\n        const data = {\r\n            \"userId\": args.args.userId,\r\n            \"password\": args.args.password\r\n        }\r\n        const resLogin = yield call(Service.post, \"login\", data);\r\n        if(resLogin.data.error_code === 0) {\r\n            console.log(res.data.data.token)\r\n            localStorage.setItem(\"access\", resLogin.data.data.token);\r\n        }\r\n    } else {\r\n        openNotification('密保问题验证错误')\r\n    }\r\n}\r\n\r\n//添加密保\r\nfunction *addQuestion(args) {\r\n    const res = yield call(Service.post, 'user/addSecretGuard', args.args);\r\n    if(res.data.error_code === 0) {\r\n        openNotification('添加密保问题成功')\r\n        yield put({\r\n            type: ADD_QUESTION_SUCCESS,\r\n        })\r\n    } else {\r\n        openNotification(res.data.message)\r\n    }\r\n}\r\n\r\nexport default function *watchStudentSagas() {\r\n    yield takeEvery(QUERY_HOMEWORK, handleQueryHomework);\r\n    yield takeEvery(LOGIN, handleLogin);\r\n    yield takeEvery(REGISTER, handleRegister);\r\n    yield takeEvery(TEACHERRES,handleTeacher);\r\n    yield takeEvery(PRESERVE, handlePreserve);\r\n    yield takeEvery(FETCH_QUERY_REGISTER, handleQueryRegister);\r\n    yield takeEvery(REGISTERED, handleRegistered);\r\n    yield takeEvery(SECRET_GUARD_EXISTENCE, secretGuardExistence);\r\n    yield takeEvery(CHECK_QUESTION, checkQuestion);\r\n    yield takeEvery(ADD_QUESTION, addQuestion);\r\n    yield takeEvery(SEND_FORGET_FLAG, sendForgetFlag);\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    KEEP_ALIVE,\r\n    LOGIN_SUCCESS,\r\n    COUNTER,\r\n    COUNTER_SUCCESS,\r\n    FETCH_PARAM,\r\n    FETCH_PARAM_SUCCESS,\r\n    QUERY_SECRET,\r\n    QUERY_SECRET_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *handleKeepAlive() {\r\n    try {\r\n        const res = yield call(Service.get, 'keep_alive');\r\n        if (res.data.error_code === 0) {\r\n            let id = \"游客\";\r\n            switch (res.data.data.type) {\r\n                case \"student\":\r\n                    id = \"学生\";\r\n                    break;\r\n                case \"teacher\":\r\n                    id = \"教师\";\r\n                    break;\r\n                case \"admin\":\r\n                    id = \"超级管理员\";\r\n                    break;\r\n                default:\r\n                    return id;\r\n            }\r\n            yield put({\r\n                type: LOGIN_SUCCESS,\r\n                payload: {\r\n                    id,\r\n                    name: res.data.data.userName,\r\n                    userId: res.data.data.userId,\r\n                    academy: res.data.data.academy,\r\n                    class: res.data.data.cls,\r\n                    discipline: res.data.data.discipline,\r\n                    grade: res.data.data.grade,\r\n                    sex: res.data.data.sex,\r\n                    type: res.data.data.type,\r\n                    phone: res.data.data.phone,\r\n                    password: res.data.data.password,\r\n                }\r\n            })\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//访问量\r\nfunction *counter() {\r\n    const res = yield call(Service.get, \"counter\");\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: COUNTER_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n//获取系统参数\r\nfunction *handleParam() {\r\n    const res = yield call(Service.get, `system/queryParameters`);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: FETCH_PARAM_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n// 是否存在密保问题\r\nfunction *querySecret(args) {\r\n    const res = yield call(Service.get, `user/secretGuardExistence?userId=${args.userId}`);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: QUERY_SECRET_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function *rootUserSagas() {\r\n    yield takeEvery(KEEP_ALIVE, handleKeepAlive);\r\n    yield takeEvery(COUNTER,counter);\r\n    yield takeEvery(FETCH_PARAM,handleParam);\r\n    yield takeEvery(QUERY_SECRET,querySecret);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport allUser from \"./allUser\";\r\nimport user from \"./user\";\r\n\r\nexport default function *rootUserSagas() {\r\n    yield all([\r\n        allUser(),\r\n        user(),\r\n    ])\r\n}\r\n","import { takeEvery, call, put} from \"redux-saga/effects\";\r\nimport {\r\n    FETCH_STUDY_RES_SUCCESS,\r\n    FETCH_STUDY_RESOURCE,\r\n    FETCH_TEACHER_DATA,\r\n    FETCH_TEACHER_DATA_SUCCESS,\r\n    DELETE_DATA,\r\n    DELETE_DATA_SUCCESS,\r\n    DOWNLOAD_RESOURCE,\r\n    DOWNLOAD_RESOURCE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\nimport { openNotification } from \"../../../utils/commonFunction\";\r\n\r\nfunction *fetchStudyRes(data) {\r\n    try {\r\n        const {page, type, resourceName, userName} = data.args;\r\n        let url;\r\n        if (data.args.resourceName !== null) {\r\n            url = `resource/queryResource?page=${page}&type=${type}&resourceName=${resourceName}`;\r\n        } else if (data.args.userName !== null) {\r\n            url = `resource/queryResource?page=${page}&type=${type}&userName=${userName}`;\r\n        } else {\r\n            url = `resource/queryResource?page=${page}&type=${type}`;\r\n        }\r\n        const res = yield call(Service.get, url);\r\n        const resData = Object.assign(res.data.data, {type,resourceName,userName});\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_STUDY_RES_SUCCESS,\r\n                    payload: resData,\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction *fetchTeacherRes(data) {\r\n    try{\r\n        const {page, type, userName} = data.args;\r\n        let url = `resource/queryResource?page=${page}&type=${type}&userName=${userName}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_TEACHER_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nfunction *deleteStudyData(args) {\r\n    try{\r\n        const {resourceId, type, userId} = args.args;\r\n        let formData = new FormData();\r\n        formData.append('resourceIdList',resourceId);\r\n        const resourceIdList = formData.get('resourceIdList');\r\n        const data = {resourceIdList, type, userId};\r\n        const res = yield call(Service.post, \"resource/delete\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_DATA_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                openNotification(\"删除失败\");\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nfunction *downloadResource(args) {\r\n    const {id, type } = args.args;\r\n    const data = {id, type };\r\n    const res = yield call(Service.post, \"resource/download\", data);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: DOWNLOAD_RESOURCE_SUCCESS\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield takeEvery(FETCH_STUDY_RESOURCE, fetchStudyRes);\r\n    yield takeEvery(FETCH_TEACHER_DATA, fetchTeacherRes);\r\n    yield takeEvery(DELETE_DATA, deleteStudyData);\r\n    yield takeEvery(DOWNLOAD_RESOURCE, downloadResource);\r\n}\r\n","import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    FETCH_SOFTWARE_RES_SUCCESS,\r\n    FETCH_SOFTWARE_RESOURCE,\r\n    FETCH_TEACHER_SOFTWARE,\r\n    FETCH_TEACHER_SOFTWARE_SUCCESS,\r\n    DELETE_SOFTWARE,\r\n    DELETE_SOFTWARE_SUCCESS,\r\n    DOWNLOAD_SOFTWARE,\r\n    DOWNLOAD_SOFTWARE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction* fetchSoftwareRes(data) {\r\n    try {\r\n        let storage = window.localStorage;\r\n        const {page, type, resourceName, userName} = data.args;\r\n        let url;\r\n        if (data.args.resourceName !== null) {\r\n            url = `resource/queryResource?page=${page}&type=${type}&resourceName=${resourceName}`;\r\n        } else if (data.args.userName !== null) {\r\n            url = `resource/queryResource?page=${page}&type=${type}&userName=${userName}`;\r\n        } else {\r\n            url = `resource/queryResource?page=${page}&type=${type}`;\r\n        }\r\n        const res = yield call(Service.get, url);\r\n        storage.softwareResource = JSON.stringify(res.data.data.items);\r\n        storage.total = JSON.stringify(res.data.data.total);\r\n        const resData = Object.assign(res.data.data, {type,resourceName,userName});\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_SOFTWARE_RES_SUCCESS,\r\n                    payload: resData,\r\n                    softwareResource: storage.softwareResource,\r\n                    softwareTotal: storage.total,\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch(e) {\r\n\r\n    }\r\n}\r\n\r\nfunction *fetchTeacherSoftwareRes(data) {\r\n    try{\r\n        const {page, type, userName} = data.args;\r\n        let url = `resource/queryResource?page=${page}&type=${type}&userName=${userName}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_TEACHER_SOFTWARE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\nfunction *deleteSoftware(args) {\r\n    try{\r\n        const {resourceId, type, userId} = args.args;\r\n        let formData = new FormData();\r\n        formData.append('resourceIdList',resourceId);\r\n        const resourceIdList = formData.get('resourceIdList');\r\n        const data = {resourceIdList, type, userId};\r\n        const res = yield call(Service.post, \"resource/delete\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_SOFTWARE_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                openNotification(\"删除失败\");\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nfunction *downloadSoftware(args) {\r\n    const {id, type } = args.args;\r\n    const data = {id, type };\r\n    const res = yield call(Service.post, \"resource/download\", data);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: DOWNLOAD_SOFTWARE_SUCCESS,\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield takeEvery(FETCH_SOFTWARE_RESOURCE, fetchSoftwareRes);\r\n    yield takeEvery(FETCH_TEACHER_SOFTWARE, fetchTeacherSoftwareRes);\r\n    yield takeEvery(DELETE_SOFTWARE, deleteSoftware);\r\n    yield takeEvery(DOWNLOAD_SOFTWARE, downloadSoftware);\r\n}\r\n","import { takeEvery, call, put} from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    FETCH_SEARCH_VALUE,\r\n    FETCH_SEARCH_DATA_SUCCESS,\r\n    FETCH_SEARCH_SOFTWARE_SUCCESS,\r\n    FETCH_STUDENT_MESSAGE,\r\n    FETCH_STUDENT_MESSAGE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *fetchSearchValue($data) {\r\n    try {\r\n        const { page, resourceName, userName, type} = $data.args;\r\n        const res = yield call(\r\n            Service.get,\r\n            `resource/queryResource?page=${page}&type=${type}&userName=${userName}&resourceName=${resourceName}`\r\n        );\r\n        const resData = Object.assign(res.data.data, {type,resourceName,userName});\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                switch (type) {\r\n                    case \"material\":\r\n                        yield put({\r\n                            type: FETCH_SEARCH_DATA_SUCCESS,\r\n                            payload: resData,\r\n                        });\r\n                        break;\r\n                    case \"software\":\r\n                        yield put({\r\n                            type: FETCH_SEARCH_SOFTWARE_SUCCESS,\r\n                            payload: resData,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0\r\n                }\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\n//老师查询学生信息\r\nfunction *handleSearchStudentMes(args) {\r\n    try{\r\n        const { page, type, userId, userName } = args.args;\r\n        const res = yield call(Service.get,\r\n            `user/userInfo?page=${page}&type=${type}&userId=${userId}&userName=${userName}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_STUDENT_MESSAGE_SUCCESS,\r\n                    payload: res.data.data,\r\n                    userId: userId,\r\n                    userName: userName\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield takeEvery(FETCH_SEARCH_VALUE, fetchSearchValue);\r\n    yield takeEvery(FETCH_STUDENT_MESSAGE, handleSearchStudentMes);\r\n}\r\n","import { takeEvery, call, put} from \"redux-saga/effects\";\r\nimport {\r\n    FETCH_UPLOAD_RES,\r\n    FETCH_UPLOAD_DATA_SUCCESS,\r\n    FETCH_UPLOAD_SOFTWARE_SUCCESS,\r\n    NOT_UPLOAD\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\nimport { openNotification } from \"../../../utils/commonFunction\";\r\n\r\nfunction *uploadData(args) {\r\n    try{\r\n        const {type, userId, file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append(\"type\",type);\r\n        formData.append(\"userId\", userId);\r\n        formData.append(\"file\", file);\r\n        const res = yield call(Service.post, \"resource/upload\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                switch (type) {\r\n                    case \"material\":\r\n                        yield put({\r\n                            type: FETCH_UPLOAD_DATA_SUCCESS,\r\n                        });\r\n                        break;\r\n                    case \"software\":\r\n                        yield put({\r\n                            type: FETCH_UPLOAD_SOFTWARE_SUCCESS,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0\r\n                }\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                yield put({\r\n                    type: NOT_UPLOAD\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                yield put({\r\n                    type: NOT_UPLOAD\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                yield put({\r\n                    type: NOT_UPLOAD\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                openNotification(\"上传失败\");\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield takeEvery(FETCH_UPLOAD_RES, uploadData);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport studyResource from \"./studyResource\";\r\nimport softwareResource from \"./softwareResource\";\r\nimport search from  \"./search\";\r\nimport upload from \"./upload\";\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield all([\r\n        studyResource(),\r\n        softwareResource(),\r\n        search(),\r\n        upload(),\r\n    ])\r\n}","import { all } from \"redux-saga/effects\";\r\nimport announceSource from \"./announceSaga\";\r\n\r\nexport default function *rootAnnounceSagas() {\r\n    yield all([\r\n        announceSource()\r\n    ])\r\n}","import { takeEvery, put, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    QUERY_COURSE,\r\n    QUERY_COURSE_RES_SUCCESS,\r\n    FETCH_SEARCH_COURSE_SUCCESS,\r\n    FETCH_SEARCH_COURSE\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\"\r\nimport Service from \"../../../lib/Service\";\r\n//获取所有课程，用于学生添加课程那个\r\nfunction* queryCourseRes(data) {\r\n    try {\r\n        const {page, userId} = data.args;\r\n        let url = `course/queryCourse?page=${page}&userId=${userId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type:QUERY_COURSE_RES_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n        }\r\n\r\n}\r\n\r\nfunction *handleSearchCourse(data) {\r\n    const { page, teacherName, course, userId} = data.args;\r\n    const url = `course/queryCourse?page=${page}&teacherName=${teacherName}&course=${course}&userId=${userId}`;\r\n    const res = yield call(Service.get, url);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: FETCH_SEARCH_COURSE_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function* rootCourseSaga() {\r\n    yield takeEvery(QUERY_COURSE, queryCourseRes);\r\n    yield takeEvery(FETCH_SEARCH_COURSE, handleSearchCourse);\r\n}","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n    QUERY_MY_COURSE,\r\n    QUERY_MY_COURSE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\n\r\n//老师和学生的我的任务界面\r\nfunction* queryMyCourseRes(data) {\r\n    try{\r\n        let { userId, type } = data.args;\r\n        let url = `course/queryMyCourse?userId=${userId}&type=${type}`;\r\n        const res = yield call(Service.get, url);\r\n        switch(res.data.error_code){\r\n            case 0:\r\n            yield put({\r\n                type: QUERY_MY_COURSE_SUCCESS,\r\n                payload: res.data.data,\r\n            });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\nexport default function* rootMyCourse() {\r\n    yield takeEvery(QUERY_MY_COURSE, queryMyCourseRes)\r\n}\r\n","//一系列课程处理操作，老师学生添加，删除课程，老师添加课程备注\r\nimport { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    TEACHER_ADD_COURSE,\r\n    STUDENT_ADD_COURSE,\r\n    TEACHER_DELETE_COURSE,\r\n    STUDENT_DELETE_COURSE,\r\n    TEACHER_ADD_REMARK,\r\n    TEACHER_RELEASE_TASKS,\r\n    STUDENT_DELETE_COURSE_SUCCESS,\r\n    STUDENT_ADD_COURSE_SUCCESS,\r\n    TEACHER_DELETE_COURSE_SUCCESS,\r\n    TEACHER_ADD_REMARK_SUCCESS,\r\n    QUERY_MY_COURSE_SUCCESS,\r\n    TEACHER_RELEASE_TASKS_SUCCESS,\r\n    TEACHER_ADD_COURSE_SUCCESS,\r\n    TEACHER_RELEASE_TASKS_FAILED,\r\n    TEACHER_CHECK_STUDENT,\r\n    TEACHER_CHECK_STUDENT_SUCCESS,\r\n    TEACHER_DELETE_STUDENT_SUCCESS,\r\n    TEACHER_DELETE_STUDENT,\r\n    TEACHER_ADD_STUDENT,\r\n    TEACHER_ADD_STUDENT_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport { message } from \"antd\";\r\n\r\n\r\n//学生添加课程\r\nfunction* studentAddCourse(args) {\r\n    try {\r\n        const { teacherCourseId, userId, type } = args.args;\r\n        const data = { teacherCourseId, userId };\r\n        const res = yield call(Service.post, \"student/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"添加成功~\");\r\n                const updateUrl = `course/queryMyCourse?userId=${userId}&type=${type}`;\r\n                const updateRes = yield call(Service.get, updateUrl);\r\n                switch(updateRes.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type: STUDENT_ADD_COURSE_SUCCESS,\r\n                            payload: teacherCourseId\r\n\r\n                        });\r\n                        yield put({\r\n                            type: QUERY_MY_COURSE_SUCCESS,\r\n                            payload: updateRes.data.data,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                message.error(\"请勿重复添加！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//老师为学生添加课程\r\nfunction* teacherAddStudent(args) {\r\n    try {\r\n        const { teacherCourseId, userId } = args.args;\r\n        const data = { teacherCourseId, userId };\r\n        const res = yield call(Service.post, \"student/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"添加成功~\");\r\n                const Url = `teacher/queryStudents?teacherCourseId=${teacherCourseId}`;\r\n                const Res = yield call(Service.get, Url);\r\n                switch (Res.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type: TEACHER_CHECK_STUDENT_SUCCESS,\r\n                            payload: Res.data.data,\r\n                        });\r\n                        break;\r\n                    case -1:\r\n                        message.error(\"查询失败！\");\r\n                        break;\r\n                }\r\n                break;\r\n            case -1:\r\n                message.error(\"请勿重复添加！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//老师添加课程\r\nfunction* teacherAddCourse(args) {\r\n    try {\r\n        const { courseId, teacherId, teacherCourseId, type } = args.args;\r\n        const data = { courseId, teacherId };\r\n        const res = yield call(Service.post, \"teacher/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success( \"添加成功~\");\r\n                const updateUrl = `course/queryMyCourse?userId=${teacherId}&type=${type}`;\r\n                const updateRes = yield call(Service.get, updateUrl);\r\n                switch(updateRes.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type: TEACHER_ADD_COURSE_SUCCESS,\r\n                            payload: courseId\r\n                        });\r\n                        yield put({\r\n                            type: QUERY_MY_COURSE_SUCCESS,\r\n                            payload: updateRes.data.data,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                message.error(\"请勿重复添加！\");\r\n                break;\r\n            default:\r\n                message.error(res.data.message);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//学生删除课程\r\nfunction* studentDeleteCourse(args) {\r\n    try {\r\n        const { studentCourseId, userId, teacherCourseId } = args.args;\r\n        const data = { studentCourseId, userId };\r\n        const res = yield call(Service.post, \"student/deleteCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除成功~\");\r\n                yield put({\r\n                    type: STUDENT_DELETE_COURSE_SUCCESS,\r\n                    teacherCourseId: teacherCourseId,\r\n                    studentCourseId: studentCourseId\r\n                })\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\")\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n//老师删除课程\r\nfunction* teacherDeleteCourse(args) {\r\n    try {\r\n        const { id, userId, teacherCourseId } = args.args;\r\n        const data = { id, userId };\r\n        const res = yield call(Service.post, \"teacher/deleteCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success( \"删除成功！\");\r\n                yield put({\r\n                    type: TEACHER_DELETE_COURSE_SUCCESS,\r\n                    payload: teacherCourseId,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//老师添加课程备注\r\nfunction* teacherAddRemark(args) {\r\n    try {\r\n        const {teacherCourseId, remark} = args.args;\r\n        const data = {teacherCourseId, remark};\r\n        const res = yield call(Service.post, \"teacher/addRemark\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"操作成功~\");\r\n                yield put({\r\n                    type: TEACHER_ADD_REMARK_SUCCESS,\r\n                    payload: data\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"操作失败！\");\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//老师发布课程任务\r\nfunction* teacherReleaseTask(args) {\r\n    try {\r\n        const {teacherCourseId, userId, taskName, file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append('teacherCourseId',teacherCourseId);\r\n        formData.append('userId',userId);\r\n        formData.append('taskName',taskName);\r\n        formData.append('fileName', file);\r\n        const res = yield call(Service.post, \"teacher/addCourseTask\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success('发布任务成功~');\r\n                const url = `course/queryCourseTask?teacherCourseId=${teacherCourseId}`;\r\n                const Res = yield call(Service.get, url);\r\n                switch (Res.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type:TEACHER_RELEASE_TASKS_SUCCESS,\r\n                            payload: Res.data.data,\r\n                            teacherCourseId,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                yield put(\r\n                    {\r\n                        type: TEACHER_RELEASE_TASKS_FAILED,\r\n                    }\r\n                );\r\n                message.error(\"已发布过该实验任务！\");\r\n                break;\r\n            default:\r\n                message.error(res.data.message);\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//老师查看选修该课学生名单\r\nfunction* teacherCheckStudent(args) {\r\n    try {\r\n        const {teacherCourseId} = args.args;\r\n        const url = `teacher/queryStudents?teacherCourseId=${teacherCourseId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_CHECK_STUDENT_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"查询失败！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* teacherDeleteStudent(args) {\r\n    try {\r\n        const {studentCourseIdList} = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"studentCourseIdList\", studentCourseIdList);\r\n        const res = yield call(Service.post, `teacher/deleteStudentCourses`, formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除成功~\");\r\n                yield put({\r\n                    type: TEACHER_DELETE_STUDENT_SUCCESS,\r\n                    payload: studentCourseIdList,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootStudentAddCourse() {\r\n    yield takeEvery(STUDENT_ADD_COURSE, studentAddCourse);\r\n    yield takeEvery(TEACHER_ADD_COURSE, teacherAddCourse);\r\n    yield takeEvery(TEACHER_DELETE_COURSE, teacherDeleteCourse);\r\n    yield takeEvery(STUDENT_DELETE_COURSE, studentDeleteCourse);\r\n    yield takeEvery(TEACHER_ADD_REMARK, teacherAddRemark);\r\n    yield takeEvery(TEACHER_RELEASE_TASKS, teacherReleaseTask);\r\n    yield takeEvery(TEACHER_CHECK_STUDENT, teacherCheckStudent);\r\n    yield takeEvery(TEACHER_DELETE_STUDENT, teacherDeleteStudent);\r\n    yield takeEvery(TEACHER_ADD_STUDENT, teacherAddStudent);\r\n}\r\n","//获取教师的课程列表,前tab的第二个\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport {\r\n    TEACHER_QUERY_COURSE,\r\n    TEACHER_QUERY_COURSE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\n\r\nfunction* queryTeacherCourse(data) {\r\n    try{\r\n        const { page, userId } = data.args;\r\n        const url = `course/allCourse?page=${page}&userId=${userId}&courseName=${data.args.courseName}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_QUERY_COURSE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch(e){\r\n\r\n    }\r\n}\r\nexport default function* rootTeacherCourse() {\r\n    yield takeEvery(TEACHER_QUERY_COURSE, queryTeacherCourse)\r\n}\r\n\r\nconst arr = [1, 7, 7, 4, 3];\r\nlet obj = {};\r\nlet res = arr.map((e)=>{\r\n    return obj.hasOwnProperty(e) ? e : obj[e];\r\n});\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n    TEACHER_DELETE_TASK,\r\n    TEACHER_QUERY_UNSUBMIT,\r\n    TEACHER_UPDATE_TASK,\r\n    TEACHER_QUERY_UNSUBMIT_SUCCESS,\r\n    TEACHER_QUERY_SUBMIT,\r\n    TEACHER_QUERY_SUBMIT_SUCCESS,\r\n    TEACHER_TOGGLE_TASK_UPLOAD,\r\n    STUDENT_QUERY_SUBMIT,\r\n    STUDENT_QUERY_SUBMIT_SUCCESS,\r\n    STUDENT_UPLOAD_HOMEWORK,\r\n    STUDENT_UPLOAD_HOMEWORK_SUCCESS,\r\n    STUDENT_DELETE_HOMEWORK,\r\n    QUERY_COURSE_TASK_SUCCESS,\r\n    QUERY_COURSE_TASK,\r\n    TEACHER_DOWNLOAD_SUBMIT,\r\n    TEACHER_DOWNLOAD_SUBMIT_SUCCESS,\r\n    STUDENT_DELETE_HOMEWORK_SUCCESS,\r\n    TEACHER_DELETE_TASK_SUCCESS,\r\n    TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS,\r\n    TEACHER_UPDATE_TASK_SUCCESS, TEACHER_UPDATE_TASK_FAILED, STUDENT_UPLOAD_HOMEWORK_FAILED\r\n\r\n} from \"../../../constants/actionTypes\";\r\nimport { message } from \"antd\";\r\nimport Service from \"../../../lib/Service\";\r\n\r\n//老师修改任务\r\nfunction* teacherUpdateTask(args) {\r\n    try {\r\n        const {id, taskName, file, teacherCourseId, userId} = args.args;\r\n        const formData = new FormData();\r\n        formData.append('id',id);\r\n        formData.append('userId',userId);\r\n        formData.append('taskName',taskName);\r\n        formData.append('fileName', file);\r\n        const res = yield call(Service.post, \"teacher/updateTask\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success('修改任务成功~');\r\n                const url = `course/queryCourseTask?teacherCourseId=${teacherCourseId}`;\r\n                const Res = yield call(Service.get, url);\r\n                switch (Res.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type:TEACHER_UPDATE_TASK_SUCCESS,\r\n                            payload: Res.data.data,\r\n                            teacherCourseId,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                yield put({\r\n                    type: TEACHER_UPDATE_TASK_FAILED,\r\n                });\r\n                message.error(\"该文件已存在！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//老师删除实验任务\r\nfunction *teacherDeleteTask(args) {\r\n    try {\r\n        const { taskId, teacherCourseId } = args.args;\r\n        const data = {taskId};\r\n        const res = yield call(Service.post, \"teacher/deleteTask\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除实验任务成功！\");\r\n                yield put({\r\n                    type: TEACHER_DELETE_TASK_SUCCESS,\r\n                    taskId: taskId,\r\n                    teacherCourseId: teacherCourseId\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//教师开启/关闭实验任务作业的上传\r\nfunction* teacherToggleTaskUpload(args) {\r\n    const {taskId, teacherCourseId} = args.args;\r\n    const data = {taskId};\r\n    try {\r\n        const res = yield call(Service.post, \"teacher/toggleUpload\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"操作成功~\");\r\n                yield put({\r\n                    type: TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS,\r\n                    taskId: taskId,\r\n                    teacherCourseId: teacherCourseId\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"操作失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//教师查看未交作业同学名单\r\nfunction* teacherQueryUnsubmit(args){\r\n    try {\r\n        const { teacherCourseId, taskId } = args.args;\r\n        const url = `teacher/queryUnSubmit?teacherCourseId=${teacherCourseId}&taskId=${taskId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n              yield put({\r\n                  type: TEACHER_QUERY_UNSUBMIT_SUCCESS,\r\n                  payload: res.data.data,\r\n              });\r\n              break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n//教师查看已交作业名单\r\nfunction* teacherQuerySubmit(data){\r\n    try {\r\n        const { taskId, rows, page } = data.data;\r\n        const url = `teacher/queryWork?taskId=${taskId}&rows=${rows}&page=${page}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_QUERY_SUBMIT_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n//老师批量下载已提交作业\r\nfunction* teacherDownloadSubmit(args){\r\n    try {\r\n        const { taskId, userIdList, callback, hide } = args.args;\r\n        const data = { taskId, userIdList };\r\n        const url = `teacher/downloadWorks`;\r\n        const res = yield call(Service.post, url, data);\r\n        hide()\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_DOWNLOAD_SUBMIT_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                callback(true);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//学生上传任务作业\r\nfunction* studentUploadHomework(args) {\r\n    try {\r\n        const {userId, studentCourseId, taskId, file} = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"userId\", userId);\r\n        formData.append(\"studentCourseId\", studentCourseId);\r\n        formData.append(\"taskId\", taskId);\r\n        file.forEach(\r\n            e => (\r\n                formData.append(\"file\", e)\r\n            )\r\n        );\r\n        const res = yield call(Service.post, \"resource/uploadWorks\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                res.data.data.length === 0 ?\r\n                    message.success(res.data.message) :\r\n                    res.data.data.map(err => (message.error(err.message + err.reason)));\r\n                yield put({\r\n                    type: STUDENT_UPLOAD_HOMEWORK_SUCCESS\r\n                });\r\n                break;\r\n            case -1:\r\n                yield  put(\r\n                {\r\n                    type: STUDENT_UPLOAD_HOMEWORK_FAILED,\r\n                }\r\n            );\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//学生查看已经上传的作业\r\nfunction* studentQuerySubmit(args){\r\n    try {\r\n        const { userId, taskId } = args.args;\r\n        const url = `student/queryWork?userId=${userId}&taskId=${taskId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: STUDENT_QUERY_SUBMIT_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//学生删除已上传作业\r\nfunction *studentDeleteHomework(args) {\r\n    try {\r\n        const {userId, workId} = args.args;\r\n        const data = {userId, workId};\r\n        const res = yield call(Service.post, \"student/removeWork\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除作业成功~\");\r\n                yield put({\r\n                    type: STUDENT_DELETE_HOMEWORK_SUCCESS,\r\n                    payload: workId,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除作业失败！\");\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n//老师学生获取任务详情\r\nfunction* queryCourseTaskRes(data) {\r\n    try {\r\n        const {teacherCourseId, courseTask} = data.teacherCourseId;\r\n        const url = `course/queryCourseTask?teacherCourseId=${teacherCourseId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type:QUERY_COURSE_TASK_SUCCESS,\r\n                    payload: res.data.data,\r\n                    teacherCourseId,\r\n                    courseTask\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootHandleTask() {\r\n    yield takeEvery(TEACHER_DELETE_TASK, teacherDeleteTask);\r\n    yield takeEvery(TEACHER_TOGGLE_TASK_UPLOAD, teacherToggleTaskUpload);\r\n    yield takeEvery(TEACHER_QUERY_SUBMIT,teacherQuerySubmit);\r\n    yield takeEvery(TEACHER_QUERY_UNSUBMIT,teacherQueryUnsubmit);\r\n    yield takeEvery(TEACHER_UPDATE_TASK,teacherUpdateTask);\r\n    yield takeEvery(TEACHER_DOWNLOAD_SUBMIT, teacherDownloadSubmit);\r\n    yield takeEvery(STUDENT_QUERY_SUBMIT,studentQuerySubmit);\r\n    yield takeEvery(STUDENT_UPLOAD_HOMEWORK, studentUploadHomework);\r\n    yield takeEvery(STUDENT_DELETE_HOMEWORK, studentDeleteHomework);\r\n    yield takeEvery(QUERY_COURSE_TASK, queryCourseTaskRes);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport courseResource from \"./courseResource\";\r\nimport myCourse from \"./myCourse\";\r\nimport handleCourse from \"./handleCourse\";\r\nimport teacherCourse from \"./teacherCourse\";\r\nimport handleTasks from \"./handleTasks\";\r\n\r\nexport default function* rootCourseSagas() {\r\n    yield all([\r\n        courseResource(),\r\n        myCourse(),\r\n        handleCourse(),\r\n        handleTasks(),\r\n        teacherCourse(),\r\n    ])\r\n}","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    FETCH_ADMINISTRATOR_DATA,\r\n    ADD_NEW_ADMIN,\r\n    ADD_NEW_ADMIN_SUCCESS,\r\n    MODIFY_ADMIN,\r\n    MODIFY_ADMIN_SUCCESS,\r\n    ADD_NEW_TEACHER,\r\n    ADD_NEW_TEACHER_SUCCESS,\r\n    SEARCH_TEACHER,\r\n    SEARCH_TEACHER_SUCCESS,\r\n    FETCH_ADMINISTRATOR_DATA_SUCCESS,\r\n    FETCH_TEACHER_RES,\r\n    FETCH_TEACHER_RES_SUCCESS,\r\n    DELETE_TEACHER,\r\n    DELETE_TEACHER_SUCCESS,\r\n    MODIFY_TEACHER,\r\n    MODIFY_TEACHER_SUCCESS,\r\n    FETCH_STUDENT_DATA,\r\n    FETCH_STUDENT_DATA_SUCCESS,\r\n    ADD_NEW_STUDENT,\r\n    ADD_NEW_STUDENT_SUCCESS,\r\n    DELETE_STUDENT,\r\n    DELETE_STUDENT_SUCCESS,\r\n    MODIFY_STUDENT,\r\n    MODIFY_STUDENT_SUCCESS,\r\n    SEARCH_STUDENT,\r\n    SEARCH_STUDENT_SUCCESS,\r\n    IMPORT_USER,\r\n    IMPORT_USER_success,\r\n    FETCH_REGISTER_DATA,\r\n    FETCH_REGISTER_DATA_SUCCESS,\r\n    AGREE_REGISTER,\r\n    AGREE_REGISTER_SUCCESS,\r\n    DELETE_REGISTER_USER,\r\n    DELETE_REGISTER_USER_SUCCESS,\r\n    RESET_PASSWORD,\r\n    RESET_PASSWORD_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport { openNotification} from \"../../../utils/commonFunction\";\r\n\r\n//添加新的管理员\r\nfunction *addNewAdmin(args) {\r\n    try{\r\n        const {userId, userName, type, academy, sex, adminData} = args.args;\r\n        const data = {userId, userName, type, academy, sex};\r\n        const res = yield call(Service.post, \"admin/addUser\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: ADD_NEW_ADMIN_SUCCESS,\r\n                    payloadA: adminData,\r\n                    newDataA: data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return openNotification('添加管理员失败');\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//添加新的教师\r\nfunction *addNewTeacher(args) {\r\n    try{\r\n        const {userId, userName,adminTeacherData, type, sex, discipline} = args.args;\r\n        const data = {userId, userName, type, sex, discipline};\r\n        const res = yield call(Service.post, \"admin/addUser\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: ADD_NEW_TEACHER_SUCCESS,\r\n                    payload: adminTeacherData,\r\n                    newData: data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n//获取管理员信息\r\nfunction *fetchAdminData(data) {\r\n    try{\r\n        const {page, type} = data.args;\r\n        const res = yield call(Service.get,\r\n            `user/userInfo?page=${page}&type=${type}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_ADMINISTRATOR_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return openNotification('获取管理员信息失败')\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//修改管理员信息\r\nfunction *modifyAdmin(args) {\r\n    try {\r\n        const { userId, userName, academy, sex } = args.args;\r\n        const data = {userId, userName, academy, sex };\r\n        const res = yield call(Service.post, \"user/updateUserInfo\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: MODIFY_ADMIN_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//获取教师信息\r\nfunction *fetchTeacherData(data) {\r\n    try{\r\n        const {page, type} = data.args;\r\n        const res = yield call(Service.get,\r\n            `user/userInfo?page=${page}&type=${type}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_TEACHER_RES_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//删除教师\r\nfunction *deleteTeacher(args) {\r\n    try {\r\n        const { list } = args.args;\r\n        let formData = new FormData();\r\n        formData.append('list', list);\r\n        const res = yield call(Service.post, \"admin/deleteUsers\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_TEACHER_SUCCESS, payload: null\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//修改教师信息\r\nfunction *modifyTeacher(args) {\r\n    try {\r\n        const { userId, userName, academy, phone, sex} = args.args;\r\n        const data = { userId, userName, academy, phone, sex};\r\n        const res = yield call(Service.post, \"user/updateUserInfo\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: MODIFY_TEACHER_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//搜索老师\r\nfunction *searchTeacher(data) {\r\n    try {\r\n        const {page, type, userName } = data.args;\r\n        const res = yield call(Service.get,`user/userInfo?page=${page}&type=${type}&userName=${userName}`)\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: SEARCH_TEACHER_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//获取学生信息\r\nfunction *fetchStudentData(data) {\r\n    try{\r\n        const {page, type} = data.args;\r\n        const res = yield call(Service.get,\r\n            `user/userInfo?page=${page}&type=${type}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_STUDENT_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//添加学生\r\nfunction *addNewStudent(args) {\r\n    try {\r\n        const { type, userId, userName, grade, academy, discipline, cls, phone, sex, adminStudentData} = args.args;\r\n        const data = { type, userId, userName, grade, academy, discipline, cls, phone, sex };\r\n        const res = yield call(Service.post, \"admin/addUser\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                openNotification(res.data.message);\r\n                yield put({\r\n                    type: ADD_NEW_STUDENT_SUCCESS,\r\n                    payloadS: adminStudentData,\r\n                    newDataS: res.data.data,\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//删除学生\r\nfunction *deleteStudent(args) {\r\n    try {\r\n        const { list } = args.args;\r\n        let formData = new FormData();\r\n        formData.append('list', list);\r\n        const res = yield call(Service.post, \"admin/deleteUsers\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_STUDENT_SUCCESS\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//修改学生\r\nfunction *modifyStudent(args) {\r\n    try {\r\n        const { userId, userName, grade, academy, discipline, cls, phone, sex } = args.args;\r\n        const data = { userId, userName, grade, academy, discipline, cls, phone, sex };\r\n        const res = yield call(Service.post, \"user/updateMySelfInfo\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: MODIFY_STUDENT_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return openNotification('修改信息失败');\r\n        }\r\n        }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//搜索学生\r\nfunction *searchStudent(data) {\r\n    try {\r\n        const {page, value, type, flag } = data.args;\r\n        let url;\r\n        if (flag === \"userName\") {\r\n            url = `user/userInfo?page=${page}&userName=${value}&type=${type}`;\r\n        } else if (flag === \"userId\") {\r\n            url = `user/userInfo?page=${page}&userId=${value}&type=${type}`;\r\n        } else {\r\n            url = `user/userInfo?page=${page}&grade=${value}&type=${type}`;\r\n        }\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: SEARCH_STUDENT_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n               break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//导入学生\r\nfunction *importStudent(args) {\r\n    try {\r\n        const {file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        const res = yield call(Service.post, \"admin/importUser\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: IMPORT_USER_success,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//获取注册用户信息\r\nfunction *fetchRegisterUserData(data) {\r\n    try {\r\n        const {page, type, userId} = data.args;\r\n        const res = yield call(Service.get, `register/queryRegister?page=${page}&type=${type}&userId=${userId}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_REGISTER_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//用户授权\r\nfunction *agreeRegister(args) {\r\n    try {\r\n        const {list} = args.args;\r\n        let formData = new FormData();\r\n        formData.append('list', list);\r\n        const res = yield call(Service.post, \"register/registered\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: AGREE_REGISTER_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//删除注册用户\r\nfunction *deleteRegisterUser(args) {\r\n    try {\r\n        const { list } = args.args;\r\n        let formData = new FormData();\r\n        formData.append('userIdList', list);\r\n        const res = yield call(Service.post, \"register/deleteRegister\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_REGISTER_USER_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//重置密码\r\nfunction *resetPassword(args) {\r\n    try {\r\n        const res = yield call(Service.post, 'user/resetPassword', args.args);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: RESET_PASSWORD_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return openNotification('重置密码失败')\r\n            }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport default function *rootAdminSagas() {\r\n    yield takeEvery(ADD_NEW_ADMIN, addNewAdmin);\r\n    yield takeEvery(ADD_NEW_TEACHER, addNewTeacher);\r\n    yield takeEvery(FETCH_ADMINISTRATOR_DATA, fetchAdminData);\r\n    yield takeEvery(FETCH_TEACHER_RES, fetchTeacherData);\r\n    yield takeEvery(DELETE_TEACHER, deleteTeacher);\r\n    yield takeEvery(MODIFY_TEACHER, modifyTeacher);\r\n    yield takeEvery(FETCH_STUDENT_DATA, fetchStudentData);\r\n    yield takeEvery(FETCH_REGISTER_DATA, fetchRegisterUserData);\r\n    yield takeEvery(AGREE_REGISTER, agreeRegister);\r\n    yield takeEvery(MODIFY_ADMIN, modifyAdmin);\r\n    yield takeEvery(SEARCH_TEACHER,searchTeacher);\r\n    yield takeEvery(ADD_NEW_STUDENT, addNewStudent);\r\n    yield takeEvery(DELETE_STUDENT, deleteStudent);\r\n    yield takeEvery(MODIFY_STUDENT, modifyStudent);\r\n    yield takeEvery(SEARCH_STUDENT, searchStudent);\r\n    yield takeEvery(DELETE_REGISTER_USER, deleteRegisterUser);\r\n    yield takeEvery(IMPORT_USER, importStudent);\r\n    yield takeEvery(RESET_PASSWORD, resetPassword);\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    FETCH_ADMIN_RESOURCE_DATA,\r\n    FETCH_ADMIN_RESOURCE_DATA_SUCCESS,\r\n    FETCH_ADMIN_SOFTWARE_DATA,\r\n    FETCH_ADMIN_SOFTWARE_DATA_SUCCESS,\r\n    SEARCH_RESOURCE_DATA,\r\n    SEARCH_RESOURCE_DATA_SUCCESS,\r\n    SEARCH_SOFTWARE_DATA,\r\n    SEARCH_SOFTWARE_DATA_SUCCESS,\r\n    DELETE_RESOURCE_DATA,\r\n    DELETE_RESOURCE_DATA_SUCCESS,\r\n    DELETE_SOFTWARE_DATA,\r\n    DELETE_SOFTWARE_DATA_SUCCESS,\r\n    IMPORT_RESOURCE,\r\n    IMPORT_RESOURCE_SUCCESS,\r\n    IMPORT_SOFTWARE,\r\n    IMPORT_SOFTWARE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\n//获取学习资料\r\nfunction *fetchResourceData(data) {\r\n    try {\r\n        const {page, type } = data.args;\r\n        const res = yield call(Service.get, `resource/queryResource?page=${page}&type=${type}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_ADMIN_RESOURCE_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//删除学习资料\r\nfunction *deleteResource(args) {\r\n    try {\r\n        const {list, type, userId } = args.args;\r\n        let formData = new FormData();\r\n        formData.append('resourceIdList',list);\r\n        const resourceIdList = formData.get('resourceIdList');\r\n        const data = {resourceIdList, type, userId };\r\n        const res = yield call(Service.post, \"resource/delete\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_RESOURCE_DATA_SUCCESS\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.data);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//搜索学习资料\r\nfunction *searchResource(args) {\r\n    try {\r\n            const {page, value, type, flag } = args.args;\r\n            let url;\r\n            if (flag === \"resourceName\"){\r\n                url = `resource/queryResource?page=${page}&resourceName=${value}&type=${type}`;\r\n            } else {\r\n                url = `resource/queryResource?page=${page}&userName=${value}&type=${type}`;\r\n            }\r\n            const res = yield call(Service.get, url);\r\n            switch (res.data.error_code) {\r\n                case 0:\r\n                    yield put({\r\n                        type: SEARCH_RESOURCE_DATA_SUCCESS,\r\n                        payload: res.data.data\r\n                    });\r\n                    break;\r\n                case -1:\r\n                    openNotification(res.data.message);\r\n                    break;\r\n                case 2:\r\n                    openNotification(res.data.message);\r\n                    break;\r\n                default:\r\n                    return 0;\r\n            }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//导入学习资料\r\nfunction *importResourceData(args) {\r\n    try {\r\n        const {type, userId, file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append(\"type\", type);\r\n        formData.append(\"userId\", userId);\r\n        formData.append(\"file\", file);\r\n        const res = yield call(Service.post, \"resource/upload\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: IMPORT_RESOURCE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//搜索软件\r\nfunction *searchSoftware(args) {\r\n    try {\r\n        const {page, value, type, flag } = args.args;\r\n        let url;\r\n        if (flag === \"softwareName\"){\r\n            url = `resource/queryResource?page=${page}&resourceName=${value}&type=${type}`;\r\n        } else {\r\n            url = `resource/queryResource?page=${page}&userName=${value}&type=${type}`;\r\n        }\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: SEARCH_SOFTWARE_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//获取软件\r\nfunction *fetchSoftwareData(data) {\r\n    try {\r\n        const {page, type } = data.args;\r\n        const res = yield call(Service.get, `resource/queryResource?page=${page}&type=${type}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_ADMIN_SOFTWARE_DATA_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//删除软件\r\nfunction *deleteSoftware(args) {\r\n    try {\r\n        const {list, type, userId } = args.args;\r\n        let formData = new FormData();\r\n        formData.append('resourceIdList',list);\r\n        const resourceIdList = formData.get('resourceIdList');\r\n        const data = {resourceIdList, type, userId };\r\n        const res = yield call(Service.post, \"resource/delete\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: DELETE_SOFTWARE_DATA_SUCCESS\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.data);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n//导入软件\r\nfunction *importSoftwareData(args) {\r\n    try {\r\n        const {type, userId, file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append(\"type\", type);\r\n        formData.append(\"userId\", userId);\r\n        formData.append(\"file\", file);\r\n        const res = yield call(Service.post, \"resource/upload\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: IMPORT_SOFTWARE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport default function *rootAdminSagas() {\r\n    yield takeEvery(FETCH_ADMIN_RESOURCE_DATA, fetchResourceData);\r\n    yield takeEvery(FETCH_ADMIN_SOFTWARE_DATA, fetchSoftwareData);\r\n    yield takeEvery(SEARCH_RESOURCE_DATA, searchResource);\r\n    yield takeEvery(SEARCH_SOFTWARE_DATA, searchSoftware);\r\n    yield takeEvery(DELETE_RESOURCE_DATA, deleteResource);\r\n    yield takeEvery(DELETE_SOFTWARE_DATA, deleteSoftware);\r\n    yield takeEvery(IMPORT_RESOURCE, importResourceData);\r\n    yield takeEvery(IMPORT_SOFTWARE, importSoftwareData);\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    ADMIN_ADD_LABCOURSE,\r\n    ADMIN_ADD_LABCOURSE_SUCCESS,\r\n    ADMIN_DELETE_LABCOURSE,\r\n    ADMIN_DELETE_LABCOURSE_SUCCESS,\r\n    ADMIN_DELETE_TEACHERCOURSES,\r\n    ADMIN_DELETE_TEACHERCOURSES_SUCCESS,\r\n    ADMIN_IMPORT_LABCOURSE,\r\n    ADMIN_IMPORT_LABCOURSE_SUCCESS,\r\n    ADMIN_QUERY_LABCOURSE,\r\n    ADMIN_QUERY_LABCOURSE_SUCCESS,\r\n    ADMIN_QUERY_STUDENTCOURSE,\r\n    ADMIN_QUERY_STUDENTCOURSE_SUCCESS,\r\n    DELETE_STUDENTCOURSE_SUCCESS,\r\n    DELETE_STUDENTCOURSE,\r\n\r\n} from \"../../../constants/actionTypes\";\r\nimport { message } from \"antd\";\r\n\r\nfunction* adminQueryLabCourse(data) {\r\n    try{\r\n        const { userId, page, courseName } = data.args;\r\n        const url = courseName ? `course/allCourse?page=${page}&userId=${userId}&courseName=${courseName}`:\r\n            `course/allCourse?page=${page}&userId=${userId}`\r\n        ;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: ADMIN_QUERY_LABCOURSE_SUCCESS,\r\n                    payload: res.data.data,\r\n                })\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\nfunction* adminAddlabCourse(args) {\r\n    try{\r\n        const { courseName, courseNumber, userId } = args.args;\r\n        const data = { courseName, courseNumber, userId };\r\n        const res = yield call(Service.post, \"admin/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"添加成功~\");\r\n                yield put({\r\n                    type: ADMIN_ADD_LABCOURSE_SUCCESS,\r\n                });\r\n                yield call(Service.get, `course/allCourse?page=1&userId=${userId}`);\r\n                break;\r\n            case -1:\r\n                message.error(\"添加失败！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\nfunction* adminDeletelabCourse(args) {\r\n    try{\r\n        const { courseIdList } = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"courseIdList\", courseIdList);\r\n        const data = { courseIdList };\r\n        const res = yield call(Service.post, \"admin/deleteCourse\", formData );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除成功~\");\r\n                yield put({\r\n                    type: ADMIN_DELETE_LABCOURSE_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\nfunction* adminImportlabCourse(args) {\r\n    try{\r\n        const { userId, file } = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"userId\", userId);\r\n        formData.append(\"file\", file[0]);\r\n        const res = yield call(Service.post, \"admin/importCourse\", formData );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(res.data.message);\r\n                yield put({\r\n                    type: ADMIN_IMPORT_LABCOURSE_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"导入失败！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\nfunction* adminQueryStudentCourse(data) {\r\n    try {\r\n        const {page, studentName, studentId} = data.args;\r\n        const url = `admin/queryStudentCourse?page=${page}&studentName=${studentName}&studentId=${studentId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: ADMIN_QUERY_STUDENTCOURSE_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }catch(e){\r\n\r\n    }\r\n\r\n}\r\nfunction* adminDeleteTeacherCourse(args) {\r\n    try{\r\n        const { teacherCourseIdList } = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"teacherCourseIdList\", teacherCourseIdList);\r\n        const res = yield call(Service.post, \"admin/deleteTeacherCourses\", formData );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(res.data.message);\r\n                yield put({\r\n                    type: ADMIN_DELETE_TEACHERCOURSES_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\nfunction* deleteStudentCourse(args) {\r\n    try{\r\n        const { studentCourseIdList } = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"studentCourseIdList\", studentCourseIdList);\r\n        const res = yield call(Service.post, \"teacher/deleteStudentCourses\", formData );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(res.data.message);\r\n                yield put({\r\n                    type: DELETE_STUDENTCOURSE_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\nexport default function* rootLabCourse() {\r\n    yield takeEvery(ADMIN_QUERY_LABCOURSE, adminQueryLabCourse);\r\n    yield takeEvery(ADMIN_ADD_LABCOURSE, adminAddlabCourse);\r\n    yield takeEvery(ADMIN_DELETE_LABCOURSE, adminDeletelabCourse);\r\n    yield takeEvery(ADMIN_IMPORT_LABCOURSE, adminImportlabCourse);\r\n    yield takeEvery(ADMIN_QUERY_STUDENTCOURSE, adminQueryStudentCourse);\r\n    yield takeEvery(ADMIN_DELETE_TEACHERCOURSES, adminDeleteTeacherCourse);\r\n    yield takeEvery(DELETE_STUDENTCOURSE, deleteStudentCourse);\r\n}","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    ADMIN_CLEAR_DATA,\r\n    MODIFY_PARAM,\r\n    MODIFY_PARAM_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {message} from \"antd\";\r\nimport { openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *clearData() {\r\n    const res = yield call(Service.post, `admin/clearData`);\r\n    switch (res.data.error_code) {\r\n        case 0 :\r\n            message.success(\"清除成功~\");\r\n            break;\r\n        case -1:\r\n            message.error(\"清除失败！\");\r\n        default:\r\n            return 0;\r\n    }\r\n\r\n}\r\n\r\nfunction *modifyParam(args) {\r\n    const res = yield call(Service.post, 'system/updateParameters', args.args);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: MODIFY_PARAM_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            openNotification('修改成功');\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function* rootClearDataSaga() {\r\n    yield takeEvery(ADMIN_CLEAR_DATA, clearData);\r\n    yield takeEvery(MODIFY_PARAM, modifyParam);\r\n}\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport { message } from \"antd\";\r\nimport {\r\n    ADMIN_RELEASE_ANNOUNCE,\r\n    ADMIN_RELEASE_ANNOUNCE_SUCCESS,\r\n    ADMIN_EDIT_ANNOUNCE,\r\n    ADMIN_EDIT_ANNOUNCE_SUCCESS,\r\n    ADMIN_DELETE_ANNOUNCE,\r\n    ADMIN_DELETE_ANNOUNCE_SUCCESS,\r\n} from \"../../../constants/actionTypes\";\r\n\r\nfunction *releaseAnnounce(args) {\r\n    try {\r\n        const {userName, title, content, file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append('userName', userName);\r\n        formData.append('title', title);\r\n        formData.append('content', content);\r\n        formData.append('file', file);\r\n        const res = yield call(Service.post, `admin/addAnnounce`, formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"发布成功~\");\r\n                yield put({\r\n                    type: ADMIN_RELEASE_ANNOUNCE_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"发布失败, 该文件已存在！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\nfunction *editAnnounce(args) {\r\n    try {\r\n        const {userName, title, content, file, announceId} = args.args;\r\n        const formData = new FormData();\r\n        formData.append('userName', userName);\r\n        formData.append('title', title);\r\n        formData.append('content', content);\r\n        formData.append('file', file);\r\n        formData.append('announceId', announceId);\r\n        const res = yield call(Service.post, `admin/updateAnnounce`, formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"修改成功~\");\r\n                yield put({\r\n                    type: ADMIN_EDIT_ANNOUNCE_SUCCESS,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"修改失败！\");\r\n                break;\r\n            case 1:\r\n                message.error(\"权限不足！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\nfunction* deleteAnnounce(arg) {\r\n    try {\r\n        const {announceId} = arg.announceId;\r\n        const formData = new FormData;\r\n        formData.append(\"announceId\", announceId );\r\n\r\n        const res = yield call(Service.post, `admin/deleteAnnounce`, formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: ADMIN_DELETE_ANNOUNCE_SUCCESS,\r\n                });\r\n                message.success(res.data.message);\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch(e){\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootAnnounceSaga() {\r\n    yield takeEvery(ADMIN_RELEASE_ANNOUNCE, releaseAnnounce);\r\n    yield takeEvery(ADMIN_DELETE_ANNOUNCE, deleteAnnounce);\r\n    yield takeEvery(ADMIN_EDIT_ANNOUNCE, editAnnounce);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport addMessage from \"./userManage\";\r\nimport resourceManage from \"./resourceManage\";\r\nimport rootLabCourse from \"./labCourse\";\r\nimport rootClearDataSaga from \"./dataMana\";\r\nimport rootAnnounceSaga from \"./labAnnounce\";\r\n\r\nexport default function *rootUserSagas() {\r\n    yield all([\r\n        addMessage(),\r\n        resourceManage(),\r\n        rootLabCourse(),\r\n        rootClearDataSaga(),\r\n        rootAnnounceSaga()\r\n    ])\r\n}\r\n","import userMana from \"./userSagas\";\r\nimport resource from \"./resourceSagas\";\r\nimport announce from \"./announceSagas\";\r\nimport course from \"./courseSagas\";\r\nimport admin from './adminSagas';\r\n\r\nexport default  [userMana, resource, announce, course, admin]\r\n","import { createStore, applyMiddleware} from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport sagas from \"./sagas\";\r\n//创建redux中间件，将sagas与redux store 链接起来\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst dev = process.env.NODE_ENV !== \"production\";\r\nconst store = createStore(\r\n    reducers,\r\n    //将sagaMiddleware中间件传入到applyMiddleware函数中\r\n    dev ?\r\n        composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n        :\r\n        applyMiddleware(sagaMiddleware)\r\n);\r\n//动态执行saga，run函数只能在store创建好后调用\r\nsagas.map(item => sagaMiddleware.run(item));\r\n\r\nexport default store;\r\n","import  \"./polyfill\";\nimport  \"core-js/es\";\nimport  \"mutation-observer\";\nimport  \"react-app-polyfill/ie9\";\nimport  \"react-app-polyfill/stable\"\n\nimport React from 'react';\nimport \"antd/dist/antd.min.css\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigProvider } from 'antd';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport zhCN from 'antd/es/locale/zh_CN';\n\nconst Root = () => (\n    <HashRouter basename=\"/\">\n        <ConfigProvider locale={zhCN}>\n            <Provider store={store}>\n                <div className={\"rootApp\"}>\n                    <App />\n                </div>\n            </Provider>\n        </ConfigProvider>\n    </HashRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}