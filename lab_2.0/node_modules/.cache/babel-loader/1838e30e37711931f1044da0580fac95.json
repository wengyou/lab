{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(clearData),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(modifyParam),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootClearDataSaga);\n\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport Service from \"../../../lib/Service\";\nimport { ADMIN_CLEAR_DATA, MODIFY_PARAM, MODIFY_PARAM_SUCCESS } from \"../../../constants/actionTypes\";\nimport { openNotification } from \"../../../utils/commonFunction\";\n\nfunction clearData() {\n  var res;\n  return _regeneratorRuntime.wrap(function clearData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(Service.post, \"admin/clearData\");\n\n        case 2:\n          res = _context.sent;\n          _context.t0 = res.data.error_code;\n          _context.next = _context.t0 === 0 ? 6 : _context.t0 === -1 ? 8 : 9;\n          break;\n\n        case 6:\n          _message.success(\"清除成功~\");\n\n          return _context.abrupt(\"break\", 10);\n\n        case 8:\n          _message.error(\"清除失败！\");\n\n        case 9:\n          return _context.abrupt(\"return\", 0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction modifyParam(args) {\n  var res;\n  return _regeneratorRuntime.wrap(function modifyParam$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(Service.post, 'system/updateParameters', args.args);\n\n        case 2:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === 0 ? 6 : _context2.t0 === -1 ? 10 : _context2.t0 === 2 ? 12 : 14;\n          break;\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: MODIFY_PARAM_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 8:\n          openNotification('修改成功');\n          return _context2.abrupt(\"break\", 15);\n\n        case 10:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 15);\n\n        case 12:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 15);\n\n        case 14:\n          return _context2.abrupt(\"return\", 0);\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootClearDataSaga() {\n  return _regeneratorRuntime.wrap(function rootClearDataSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(ADMIN_CLEAR_DATA, clearData);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(MODIFY_PARAM, modifyParam);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/adminSagas/dataMana.js"],"names":["clearData","modifyParam","rootClearDataSaga","takeEvery","put","call","Service","ADMIN_CLEAR_DATA","MODIFY_PARAM","MODIFY_PARAM_SUCCESS","openNotification","post","res","data","error_code","success","error","args","type","payload","message"],"mappings":";;;;oDAUUA,S;qDAcAC,W;qDAqBeC,iB;;AA7CzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACIC,gBADJ,EAEIC,YAFJ,EAGIC,oBAHJ,QAIO,gCAJP;AAMA,SAASC,gBAAT,QAAgC,+BAAhC;;AAEA,SAAUV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgB,iBAAMK,IAAI,CAACC,OAAO,CAACK,IAAT,oBAAV;;AADhB;AACUC,UAAAA,GADV;AAAA,wBAEYA,GAAG,CAACC,IAAJ,CAASC,UAFrB;AAAA,0CAGa,CAHb,uBAMa,CAAC,CANd;AAAA;;AAAA;AAIY,mBAAQC,OAAR,CAAgB,OAAhB;;AAJZ;;AAAA;AAOY,mBAAQC,KAAR,CAAc,OAAd;;AAPZ;AAAA,2CASmB,CATnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUf,WAAV,CAAsBgB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgB,iBAAMZ,IAAI,CAACC,OAAO,CAACK,IAAT,EAAe,yBAAf,EAA0CM,IAAI,CAACA,IAA/C,CAAV;;AADhB;AACUL,UAAAA,GADV;AAAA,yBAEYA,GAAG,CAACC,IAAJ,CAASC,UAFrB;AAAA,4CAGa,CAHb,wBAUa,CAAC,CAVd,yBAaa,CAbb;AAAA;;AAAA;AAAA;AAIY,iBAAMV,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAET,oBADA;AAENU,YAAAA,OAAO,EAAEP,GAAG,CAACC,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAJZ;AAQYH,UAAAA,gBAAgB,CAAC,MAAD,CAAhB;AARZ;;AAAA;AAWYA,UAAAA,gBAAgB,CAACE,GAAG,CAACC,IAAJ,CAASO,OAAV,CAAhB;AAXZ;;AAAA;AAcYV,UAAAA,gBAAgB,CAACE,GAAG,CAACC,IAAJ,CAASO,OAAV,CAAhB;AAdZ;;AAAA;AAAA,4CAiBmB,CAjBnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,eAAe,SAAUlB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,SAAS,CAACI,gBAAD,EAAmBP,SAAnB,CAAf;;AADW;AAAA;AAEX,iBAAMG,SAAS,CAACK,YAAD,EAAeP,WAAf,CAAf;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    ADMIN_CLEAR_DATA,\r\n    MODIFY_PARAM,\r\n    MODIFY_PARAM_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {message} from \"antd\";\r\nimport { openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *clearData() {\r\n    const res = yield call(Service.post, `admin/clearData`);\r\n    switch (res.data.error_code) {\r\n        case 0 :\r\n            message.success(\"清除成功~\");\r\n            break;\r\n        case -1:\r\n            message.error(\"清除失败！\");\r\n        default:\r\n            return 0;\r\n    }\r\n\r\n}\r\n\r\nfunction *modifyParam(args) {\r\n    const res = yield call(Service.post, 'system/updateParameters', args.args);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: MODIFY_PARAM_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            openNotification('修改成功');\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function* rootClearDataSaga() {\r\n    yield takeEvery(ADMIN_CLEAR_DATA, clearData);\r\n    yield takeEvery(MODIFY_PARAM, modifyParam);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}