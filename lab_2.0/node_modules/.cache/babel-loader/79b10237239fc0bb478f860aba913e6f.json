{"ast":null,"code":"import \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _toConsumableArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\src\\\\components\\\\UpLoad.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport \"../static/style/learningDatas.scss\";\nimport * as resource from \"../redux/actionCreators/resource\";\n\nvar UpLoad = function UpLoad(props) {\n  var handleUpload = props.handleUpload,\n      userId = props.userId,\n      userName = props.userName,\n      time = props.time,\n      uploadFlag = props.uploadFlag,\n      history = props.history;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileList = _useState2[0],\n      setFileList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploading = _useState4[0],\n      setUploading = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  useEffect(function () {\n    setUploading(false);\n  }, [uploadFlag]);\n  useEffect(function () {\n    history.location.pathname === \"/user/resource/myresource\" && setType('material');\n    history.location.pathname === \"/user/download/mysoftware\" && setType('software');\n  }, [history.location.pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    className: \"uploadWrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, {\n    beforeUpload: function beforeUpload(file) {\n      fileList.push(file);\n      setFileList(_toConsumableArray(fileList));\n      return false;\n    },\n    onRemove: function onRemove(file) {\n      var index = fileList.indexOf(file);\n      var newFileList = fileList.slice();\n      fileList.splice(index, 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    type: \"upload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), type === \"material\" ? \"选择资料\" : \"选择软件\")), /*#__PURE__*/React.createElement(_Button, {\n    key: time,\n    type: \"primary\",\n    loading: uploading,\n    style: {\n      margin: 16\n    },\n    onClick: function onClick() {\n      fileList.forEach(function (file) {\n        handleUpload({\n          type: type,\n          userId: userId,\n          file: file,\n          userName: userName,\n          page: 1\n        });\n      });\n      setFileList([]);\n      setUploading(true);\n    },\n    disabled: fileList.length === 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    type: \"upload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), uploading ? '资料上传' : '开始上传')), /*#__PURE__*/React.createElement(\"style\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"\\n                        .uploadWrap > span {\\n                            display: flex;\\n                            align-items: center;\\n                        }\\n                    \"));\n};\n\nexport default withRouter(connect(function (state) {\n  return {\n    type: state.getIn([\"resource\", \"resource\", \"type\"]),\n    userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\n    userName: state.getIn([\"userMana\", \"common\", \"name\"]),\n    time: state.getIn([\"resource\", \"resource\", \"time\"]),\n    uploadFlag: state.getIn([\"resource\", \"resource\", \"uploadFlag\"])\n  };\n}, function (dispatch) {\n  return {\n    handleUpload: function handleUpload(args) {\n      dispatch(resource.fetchUploadStudyRes(args));\n    }\n  };\n})(UpLoad));","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/components/UpLoad.js"],"names":["React","useState","useEffect","connect","withRouter","resource","UpLoad","props","handleUpload","userId","userName","time","uploadFlag","history","fileList","setFileList","uploading","setUploading","type","setType","location","pathname","display","file","push","index","indexOf","newFileList","slice","splice","margin","forEach","page","length","state","getIn","dispatch","args","fetchUploadStudyRes"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from \"react\";\r\nimport { Upload,Button, Icon } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../static/style/learningDatas.scss\";\r\nimport * as resource from \"../redux/actionCreators/resource\";\r\n\r\nconst UpLoad = props => {\r\n    const {handleUpload, userId, userName, time, uploadFlag, history } = props;\r\n    const [ fileList, setFileList,] = useState([]);\r\n    const [ uploading, setUploading ] = useState(false);\r\n    const [type, setType] = useState('')\r\n    useEffect(() => {\r\n        setUploading(false);\r\n    }, [uploadFlag]);\r\n    useEffect(() => {\r\n        history.location.pathname === \"/user/resource/myresource\" && setType('material')\r\n        history.location.pathname === \"/user/download/mysoftware\" && setType('software')\r\n    }, [history.location.pathname])\r\n    return(\r\n        <div key={ time }>\r\n            <div style={{display: 'flex'}} className='uploadWrap'>\r\n                <Upload\r\n                    beforeUpload={\r\n                        file => {\r\n                            fileList.push(file);\r\n                            setFileList([...fileList]);\r\n                            return false\r\n                        }\r\n                    }\r\n                    onRemove={\r\n                        file => {\r\n                            const index = fileList.indexOf(file);\r\n                            const newFileList = fileList.slice();\r\n                            fileList.splice(index, 1);\r\n                        }\r\n                    }\r\n                >\r\n                    <Button >\r\n                        <Icon type=\"upload\" />\r\n                        {type === \"material\" ? \"选择资料\": \"选择软件\"}\r\n                    </Button>\r\n                </Upload>\r\n                <Button\r\n                    key={time}\r\n                    type=\"primary\"\r\n                    loading={uploading}\r\n                    style={{ margin: 16 }}\r\n                    onClick={\r\n                        () => {\r\n                            fileList.forEach((file) => {\r\n                                handleUpload({\r\n                                    type: type,\r\n                                    userId: userId,\r\n                                    file: file,\r\n                                    userName: userName,\r\n                                    page: 1\r\n                                });\r\n                            });\r\n                            setFileList([]);\r\n                            setUploading(true);\r\n                        }\r\n                    }\r\n                    disabled={fileList.length === 0}\r\n                >\r\n                    <Icon type=\"upload\" />\r\n                    {uploading ? '资料上传' : '开始上传'}\r\n                </Button>\r\n            </div>\r\n\r\n            {/* <Button\r\n                key={time}\r\n                type=\"primary\"\r\n                loading={uploading}\r\n                style={{ marginTop: 16 }}\r\n                onClick={\r\n                    () => {\r\n                        fileList.forEach((file) => {\r\n                            handleUpload({\r\n                                type: type,\r\n                                userId: userId,\r\n                                file: file,\r\n                                userName: userName,\r\n                                page: 1\r\n                            });\r\n                        });\r\n                        setFileList([]);\r\n                        setUploading(true);\r\n                    }\r\n                }\r\n                disabled={fileList.length === 0}\r\n            >\r\n                <Icon type=\"upload\" />\r\n                {uploading ? '资料上传' : '开始上传'}\r\n            </Button> */}\r\n            <style>\r\n                {\r\n                    `\r\n                        .uploadWrap > span {\r\n                            display: flex;\r\n                            align-items: center;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(connect(\r\n    state => ({\r\n        type: state.getIn([\"resource\", \"resource\", \"type\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        userName: state.getIn([\"userMana\", \"common\", \"name\"]),\r\n        time: state.getIn([\"resource\", \"resource\", \"time\"]),\r\n        uploadFlag: state.getIn([\"resource\", \"resource\", \"uploadFlag\"])\r\n    }),\r\n    dispatch => ({\r\n        handleUpload(args) {\r\n            dispatch(resource.fetchUploadStudyRes(args))\r\n        }\r\n    })\r\n)(UpLoad));\r\n"]},"metadata":{},"sourceType":"module"}