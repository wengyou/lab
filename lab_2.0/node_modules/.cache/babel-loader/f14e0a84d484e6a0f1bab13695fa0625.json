{"ast":null,"code":"import _toConsumableArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleQueryHomework),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleRegister),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleTeacher),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handlePreserve),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleQueryRegister),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleRegistered),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(secretGuardExistence),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(sendForgetFlag),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(checkQuestion),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(addQuestion),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchStudentSagas);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport { LOGIN, QUERY_HOMEWORK, QUERY_HOMEWORK_OK, REGISTER, REGISTER_SUCCESS, TEACHERRES, HANDLE_TEACHERRES_SUCCESS, LOGIN_SUCCESS, PRESERVE, PRESERVE_SUCCESS, FETCH_QUERY_REGISTER, FETCH_QUERY_REGISTER_SUCCESS, REGISTERED, REGISTERED_SUCCESS, SECRET_GUARD_EXISTENCE, SECRET_GUARD_EXISTENCE_SUCCESS, RESET_PASSWARD, CHECK_QUESTION, CHECK_QUESTION_SUCCESS, ADD_QUESTION, ADD_QUESTION_SUCCESS, SEND_FORGET_FLAG, SEND_FORGET_FLAG_SUCCESS } from \"../../../constants/actionTypes\";\nimport Service from \"../../../lib/Service\";\nimport { openNotification } from \"../../../utils/commonFunction\";\n\nfunction handleQueryHomework(args) {\n  var userId, taskId, data, res;\n  return _regeneratorRuntime.wrap(function handleQueryHomework$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          userId = args.userId, taskId = args.taskId;\n          data = {\n            userId: userId,\n            taskId: taskId\n          };\n          _context.next = 5;\n          return call(Service.post, \"student/queryWork\", data);\n\n        case 5:\n          res = _context.sent;\n\n          if (!(res.data.error_code === 0)) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 9;\n          return put({\n            type: QUERY_HOMEWORK_OK,\n            payload: res.data.data\n          });\n\n        case 9:\n          _context.next = 11;\n          break;\n\n        case 11:\n          _context.next = 15;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n} //登录请求\n\n\nfunction handleLogin(args) {\n  var _args$args, userId, password, data, res, name, id;\n\n  return _regeneratorRuntime.wrap(function handleLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _args$args = args.args, userId = _args$args.userId, password = _args$args.password;\n          data = {\n            userId: userId,\n            password: password\n          };\n          _context2.next = 5;\n          return call(Service.post, \"login\", data);\n\n        case 5:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === -1 ? 9 : _context2.t0 === 0 ? 11 : _context2.t0 === 2 ? 28 : _context2.t0 === 1 ? 30 : _context2.t0 === 300 ? 32 : 37;\n          break;\n\n        case 9:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 38);\n\n        case 11:\n          name = res.data.data.userName;\n          id = \"游客\";\n          _context2.t1 = res.data.data.type;\n          _context2.next = _context2.t1 === \"student\" ? 16 : _context2.t1 === \"teacher\" ? 18 : _context2.t1 === \"admin\" ? 20 : 22;\n          break;\n\n        case 16:\n          id = \"学生\";\n          return _context2.abrupt(\"break\", 23);\n\n        case 18:\n          id = \"教师\";\n          return _context2.abrupt(\"break\", 23);\n\n        case 20:\n          id = \"超级管理员\";\n          return _context2.abrupt(\"break\", 23);\n\n        case 22:\n          return _context2.abrupt(\"return\", id);\n\n        case 23:\n          localStorage.setItem(\"access\", res.data.data.token);\n          _context2.next = 26;\n          return put({\n            type: LOGIN_SUCCESS,\n            payload: {\n              id: id,\n              name: res.data.data.userName,\n              userId: res.data.data.userId,\n              academy: res.data.data.academy,\n              class: res.data.data.cls,\n              discipline: res.data.data.discipline,\n              grade: res.data.data.grade,\n              sex: res.data.data.sex,\n              type: res.data.data.type,\n              phone: res.data.data.phone,\n              password: res.data.data.password\n            }\n          });\n\n        case 26:\n          openNotification(res.data.message, \"已登陆\");\n          return _context2.abrupt(\"break\", 38);\n\n        case 28:\n          openNotification(res.data.message, \"登录失败\");\n          return _context2.abrupt(\"break\", 38);\n\n        case 30:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 38);\n\n        case 32:\n          localStorage.setItem(\"access\", res.data.data.token);\n          _context2.next = 35;\n          return put({\n            type: RESET_PASSWARD,\n            payload: res.data.data\n          });\n\n        case 35:\n          openNotification('您是新用户，请添加密保问题');\n          return _context2.abrupt(\"break\", 38);\n\n        case 37:\n          return _context2.abrupt(\"return\", 0);\n\n        case 38:\n          _context2.next = 43;\n          break;\n\n        case 40:\n          _context2.prev = 40;\n          _context2.t2 = _context2[\"catch\"](0);\n          console.log(_context2.t2);\n\n        case 43:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 40]]);\n} //注册请求\n\n\nfunction handleRegister(args) {\n  var _args$args2, academy, cls, discipline, grade, password, phone, sex, teacherId, userId, userName, data, res;\n\n  return _regeneratorRuntime.wrap(function handleRegister$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _args$args2 = args.args, academy = _args$args2.academy, cls = _args$args2.cls, discipline = _args$args2.discipline, grade = _args$args2.grade, password = _args$args2.password, phone = _args$args2.phone, sex = _args$args2.sex, teacherId = _args$args2.teacherId, userId = _args$args2.userId, userName = _args$args2.userName;\n          data = {\n            academy: academy,\n            cls: cls,\n            discipline: discipline,\n            grade: grade,\n            password: password,\n            phone: phone,\n            sex: sex,\n            teacherId: teacherId,\n            userId: userId,\n            userName: userName\n          };\n          _context3.next = 5;\n          return call(Service.post, \"register\", data);\n\n        case 5:\n          res = _context3.sent;\n          _context3.t0 = res.data.error_code;\n          _context3.next = _context3.t0 === 0 ? 9 : _context3.t0 === -1 ? 13 : _context3.t0 === 1 ? 15 : _context3.t0 === 2 ? 17 : 19;\n          break;\n\n        case 9:\n          _context3.next = 11;\n          return put({\n            type: REGISTER_SUCCESS\n          });\n\n        case 11:\n          openNotification(res.data.message);\n          return _context3.abrupt(\"break\", 20);\n\n        case 13:\n          openNotification(res.data.message);\n          return _context3.abrupt(\"break\", 20);\n\n        case 15:\n          openNotification(res.data.message);\n          return _context3.abrupt(\"break\", 20);\n\n        case 17:\n          openNotification(res.data.message);\n          return _context3.abrupt(\"break\", 20);\n\n        case 19:\n          return _context3.abrupt(\"return\", 0);\n\n        case 20:\n          _context3.next = 25;\n          break;\n\n        case 22:\n          _context3.prev = 22;\n          _context3.t1 = _context3[\"catch\"](0);\n          console.log(_context3.t1);\n\n        case 25:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 22]]);\n} //请求所有老师姓名\n\n\nfunction handleTeacher() {\n  var teacherRes, itemsArr, teacherName;\n  return _regeneratorRuntime.wrap(function handleTeacher$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(Service.get, \"queryAllTeacher\");\n\n        case 3:\n          teacherRes = _context4.sent;\n          itemsArr = teacherRes.data.data.items;\n          teacherName = itemsArr.map(function (item, index) {\n            return [item.userName, item.userId];\n          });\n          _context4.t0 = teacherRes.data.error_code;\n          _context4.next = _context4.t0 === 0 ? 9 : _context4.t0 === -1 ? 12 : _context4.t0 === 1 ? 14 : _context4.t0 === 2 ? 16 : 18;\n          break;\n\n        case 9:\n          _context4.next = 11;\n          return put({\n            type: HANDLE_TEACHERRES_SUCCESS,\n            payload: _toConsumableArray(teacherName)\n          });\n\n        case 11:\n          return _context4.abrupt(\"break\", 19);\n\n        case 12:\n          openNotification(teacherRes.data.message);\n          return _context4.abrupt(\"break\", 19);\n\n        case 14:\n          openNotification(teacherRes.data.message);\n          return _context4.abrupt(\"break\", 19);\n\n        case 16:\n          openNotification(teacherRes.data.message);\n          return _context4.abrupt(\"break\", 19);\n\n        case 18:\n          return _context4.abrupt(\"return\", 0);\n\n        case 19:\n          _context4.next = 24;\n          break;\n\n        case 21:\n          _context4.prev = 21;\n          _context4.t1 = _context4[\"catch\"](0);\n          console.log(_context4.t1);\n\n        case 24:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 21]]);\n} //修改自己信息\n\n\nfunction handlePreserve(args) {\n  var _args$args3, userId, userName, grade, academy, discipline, cls, phone, sex, password, data, res;\n\n  return _regeneratorRuntime.wrap(function handlePreserve$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _args$args3 = args.args, userId = _args$args3.userId, userName = _args$args3.userName, grade = _args$args3.grade, academy = _args$args3.academy, discipline = _args$args3.discipline, cls = _args$args3.cls, phone = _args$args3.phone, sex = _args$args3.sex, password = _args$args3.password;\n          data = {\n            userId: userId,\n            userName: userName,\n            grade: grade,\n            academy: academy,\n            discipline: discipline,\n            cls: cls,\n            phone: phone,\n            sex: sex,\n            password: password\n          };\n          _context5.next = 5;\n          return call(Service.post, \"user/updateMySelfInfo\", data);\n\n        case 5:\n          res = _context5.sent;\n          _context5.t0 = res.data.error_code;\n          _context5.next = _context5.t0 === 0 ? 9 : _context5.t0 === -1 ? 13 : _context5.t0 === 1 ? 15 : _context5.t0 === 2 ? 17 : 19;\n          break;\n\n        case 9:\n          _context5.next = 11;\n          return put({\n            type: PRESERVE_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 11:\n          openNotification(res.data.message);\n          return _context5.abrupt(\"break\", 20);\n\n        case 13:\n          openNotification(res.data.message);\n          return _context5.abrupt(\"break\", 20);\n\n        case 15:\n          openNotification(res.data.message);\n          return _context5.abrupt(\"break\", 20);\n\n        case 17:\n          openNotification(res.data.message);\n          return _context5.abrupt(\"break\", 20);\n\n        case 19:\n          openNotification(\"修改密码失败\");\n\n        case 20:\n          _context5.next = 24;\n          break;\n\n        case 22:\n          _context5.prev = 22;\n          _context5.t1 = _context5[\"catch\"](0);\n\n        case 24:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 22]]);\n} //老师查询待批准的学生\n\n\nfunction handleQueryRegister(data) {\n  var _data$args, userId, type, page, url, res;\n\n  return _regeneratorRuntime.wrap(function handleQueryRegister$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _data$args = data.args, userId = _data$args.userId, type = _data$args.type, page = _data$args.page;\n          url = \"register/queryRegister?userId=\".concat(userId, \"&type=\").concat(type, \"&page=\").concat(page);\n          _context6.next = 4;\n          return call(Service.get, url);\n\n        case 4:\n          res = _context6.sent;\n          _context6.t0 = res.data.error_code;\n          _context6.next = _context6.t0 === 0 ? 8 : _context6.t0 === -1 ? 11 : _context6.t0 === 1 ? 13 : _context6.t0 === 2 ? 15 : 17;\n          break;\n\n        case 8:\n          _context6.next = 10;\n          return put({\n            type: FETCH_QUERY_REGISTER_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 10:\n          return _context6.abrupt(\"break\", 18);\n\n        case 11:\n          openNotification(res.data.message);\n          return _context6.abrupt(\"break\", 18);\n\n        case 13:\n          openNotification(res.data.message);\n          return _context6.abrupt(\"break\", 18);\n\n        case 15:\n          openNotification(res.data.message);\n          return _context6.abrupt(\"break\", 18);\n\n        case 17:\n          return _context6.abrupt(\"return\", 0);\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //老师批准注册用户\n\n\nfunction handleRegistered(args) {\n  var userId, formData, list, data, res;\n  return _regeneratorRuntime.wrap(function handleRegistered$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          userId = args.args.userId;\n          formData = new FormData();\n          formData.append(\"list\", userId);\n          list = formData.get(\"list\");\n          data = {\n            list: list\n          };\n          _context7.next = 7;\n          return call(Service.post, \"register/registered\", data);\n\n        case 7:\n          res = _context7.sent;\n          _context7.t0 = res.data.error_code;\n          _context7.next = _context7.t0 === 0 ? 11 : _context7.t0 === -1 ? 15 : _context7.t0 === 2 ? 17 : 19;\n          break;\n\n        case 11:\n          _context7.next = 13;\n          return put({\n            type: REGISTERED_SUCCESS\n          });\n\n        case 13:\n          openNotification(res.data.message);\n          return _context7.abrupt(\"break\", 20);\n\n        case 15:\n          openNotification(res.data.message);\n          return _context7.abrupt(\"break\", 20);\n\n        case 17:\n          openNotification(res.data.message);\n          return _context7.abrupt(\"break\", 20);\n\n        case 19:\n          return _context7.abrupt(\"return\", 0);\n\n        case 20:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n} //查询是否有密保问题\n\n\nfunction secretGuardExistence(args) {\n  var res, data;\n  return _regeneratorRuntime.wrap(function secretGuardExistence$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return call(Service.get, \"user/secretGuardExistence?userId=\".concat(args.args));\n\n        case 2:\n          res = _context8.sent;\n          data = {\n            \"userId\": res.data.userId,\n            \"password\": res.data.pa\n          };\n\n          if (!(res.data.error_code === 0)) {\n            _context8.next = 9;\n            break;\n          }\n\n          _context8.next = 7;\n          return put({\n            type: SECRET_GUARD_EXISTENCE_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 7:\n          _context8.next = 10;\n          break;\n\n        case 9:\n          openNotification(res.data.message);\n\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} //传送忘记密码标志\n\n\nfunction sendForgetFlag() {\n  return _regeneratorRuntime.wrap(function sendForgetFlag$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return put({\n            type: SEND_FORGET_FLAG_SUCCESS\n          });\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n} //验证密保\n\n\nfunction checkQuestion(args) {\n  var res;\n  return _regeneratorRuntime.wrap(function checkQuestion$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return call(Service.get, \"user/checkSecretGuard?userId=\".concat(args.args.userId, \"&question=\").concat(args.args.question, \"&answer=\").concat(args.args.answer, \"&password=\").concat(args.args.password));\n\n        case 2:\n          res = _context10.sent;\n\n          if (!(res.data.error_code === 0)) {\n            _context10.next = 9;\n            break;\n          }\n\n          openNotification('修改密码成功');\n          _context10.next = 7;\n          return put({\n            type: CHECK_QUESTION_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 7:\n          _context10.next = 10;\n          break;\n\n        case 9:\n          openNotification('密保问题验证错误');\n\n        case 10:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n} //添加密保\n\n\nfunction addQuestion(args) {\n  var res;\n  return _regeneratorRuntime.wrap(function addQuestion$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return call(Service.post, 'user/addSecretGuard', args.args);\n\n        case 2:\n          res = _context11.sent;\n\n          if (!(res.data.error_code === 0)) {\n            _context11.next = 9;\n            break;\n          }\n\n          openNotification('添加密保问题成功');\n          _context11.next = 7;\n          return put({\n            type: ADD_QUESTION_SUCCESS\n          });\n\n        case 7:\n          _context11.next = 10;\n          break;\n\n        case 9:\n          openNotification(res.data.message);\n\n        case 10:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nexport default function watchStudentSagas() {\n  return _regeneratorRuntime.wrap(function watchStudentSagas$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(QUERY_HOMEWORK, handleQueryHomework);\n\n        case 2:\n          _context12.next = 4;\n          return takeEvery(LOGIN, handleLogin);\n\n        case 4:\n          _context12.next = 6;\n          return takeEvery(REGISTER, handleRegister);\n\n        case 6:\n          _context12.next = 8;\n          return takeEvery(TEACHERRES, handleTeacher);\n\n        case 8:\n          _context12.next = 10;\n          return takeEvery(PRESERVE, handlePreserve);\n\n        case 10:\n          _context12.next = 12;\n          return takeEvery(FETCH_QUERY_REGISTER, handleQueryRegister);\n\n        case 12:\n          _context12.next = 14;\n          return takeEvery(REGISTERED, handleRegistered);\n\n        case 14:\n          _context12.next = 16;\n          return takeEvery(SECRET_GUARD_EXISTENCE, secretGuardExistence);\n\n        case 16:\n          _context12.next = 18;\n          return takeEvery(CHECK_QUESTION, checkQuestion);\n\n        case 18:\n          _context12.next = 20;\n          return takeEvery(ADD_QUESTION, addQuestion);\n\n        case 20:\n          _context12.next = 22;\n          return takeEvery(SEND_FORGET_FLAG, sendForgetFlag);\n\n        case 22:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/userSagas/allUser.js"],"names":["handleQueryHomework","handleLogin","handleRegister","handleTeacher","handlePreserve","handleQueryRegister","handleRegistered","secretGuardExistence","sendForgetFlag","checkQuestion","addQuestion","watchStudentSagas","takeEvery","call","put","LOGIN","QUERY_HOMEWORK","QUERY_HOMEWORK_OK","REGISTER","REGISTER_SUCCESS","TEACHERRES","HANDLE_TEACHERRES_SUCCESS","LOGIN_SUCCESS","PRESERVE","PRESERVE_SUCCESS","FETCH_QUERY_REGISTER","FETCH_QUERY_REGISTER_SUCCESS","REGISTERED","REGISTERED_SUCCESS","SECRET_GUARD_EXISTENCE","SECRET_GUARD_EXISTENCE_SUCCESS","RESET_PASSWARD","CHECK_QUESTION","CHECK_QUESTION_SUCCESS","ADD_QUESTION","ADD_QUESTION_SUCCESS","SEND_FORGET_FLAG","SEND_FORGET_FLAG_SUCCESS","Service","openNotification","args","userId","taskId","data","post","res","error_code","type","payload","password","message","name","userName","id","localStorage","setItem","token","academy","class","cls","discipline","grade","sex","phone","console","log","teacherId","get","teacherRes","itemsArr","items","teacherName","map","item","index","page","url","formData","FormData","append","list","pa","question","answer"],"mappings":"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","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n    LOGIN,\r\n    QUERY_HOMEWORK,\r\n    QUERY_HOMEWORK_OK,\r\n    REGISTER,\r\n    REGISTER_SUCCESS,\r\n    TEACHERRES,\r\n    HANDLE_TEACHERRES_SUCCESS,\r\n    LOGIN_SUCCESS,\r\n    PRESERVE,\r\n    PRESERVE_SUCCESS,\r\n    FETCH_QUERY_REGISTER,\r\n    FETCH_QUERY_REGISTER_SUCCESS,\r\n    REGISTERED,\r\n    REGISTERED_SUCCESS,\r\n    SECRET_GUARD_EXISTENCE,\r\n    SECRET_GUARD_EXISTENCE_SUCCESS,\r\n    RESET_PASSWARD,\r\n    CHECK_QUESTION,\r\n    CHECK_QUESTION_SUCCESS,\r\n    ADD_QUESTION,\r\n    ADD_QUESTION_SUCCESS,\r\n    SEND_FORGET_FLAG,\r\n    SEND_FORGET_FLAG_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\nimport { openNotification } from \"../../../utils/commonFunction\";\r\n\r\nfunction *handleQueryHomework(args) {\r\n    try {\r\n        const { userId, taskId } = args;\r\n        const data = { userId, taskId };\r\n        const res = yield call(Service.post, \"student/queryWork\", data);\r\n        if (res.data.error_code === 0) {\r\n            yield put({type: QUERY_HOMEWORK_OK, payload: res.data.data})\r\n        } else {\r\n\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//登录请求\r\nfunction *handleLogin(args) {\r\n    try {\r\n        const { userId, password} = args.args;\r\n        const data = { userId, password };\r\n        const res = yield call(Service.post, \"login\", data);\r\n        switch (res.data.error_code) {\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 0:\r\n                let name = res.data.data.userName;\r\n                let id = \"游客\";\r\n                switch (res.data.data.type) {\r\n                    case \"student\":\r\n                        id = \"学生\";\r\n                        break;\r\n                    case \"teacher\":\r\n                        id = \"教师\";\r\n                        break;\r\n                    case \"admin\":\r\n                        id = \"超级管理员\";\r\n                        break;\r\n                    default:\r\n                        return id;\r\n                }\r\n                localStorage.setItem(\"access\", res.data.data.token);\r\n                yield put({\r\n                    type: LOGIN_SUCCESS,\r\n                    payload: {\r\n                        id,\r\n                        name: res.data.data.userName,\r\n                        userId: res.data.data.userId,\r\n                        academy: res.data.data.academy,\r\n                        class: res.data.data.cls,\r\n                        discipline: res.data.data.discipline,\r\n                        grade: res.data.data.grade,\r\n                        sex: res.data.data.sex,\r\n                        type: res.data.data.type,\r\n                        phone: res.data.data.phone,\r\n                        password: res.data.data.password,\r\n                    }\r\n                });\r\n                openNotification(res.data.message, \"已登陆\");\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message, \"登录失败\");\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 300:\r\n                localStorage.setItem(\"access\", res.data.data.token);\r\n                yield put({\r\n                    type: RESET_PASSWARD,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification('您是新用户，请添加密保问题');\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//注册请求\r\nfunction *handleRegister(args) {\r\n    try {\r\n        const { academy, cls, discipline, grade, password, phone, sex, teacherId, userId, userName } = args.args;\r\n        const data = {academy, cls, discipline, grade, password, phone, sex, teacherId, userId, userName};\r\n        const res = yield call(Service.post, \"register\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: REGISTER_SUCCESS,\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//请求所有老师姓名\r\nfunction *handleTeacher() {\r\n    try {\r\n        const teacherRes = yield call(Service.get, \"queryAllTeacher\");\r\n        let itemsArr = teacherRes.data.data.items;\r\n        let teacherName = itemsArr.map((item,index) => {\r\n            return  [item.userName, item.userId];\r\n        });\r\n        switch (teacherRes.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: HANDLE_TEACHERRES_SUCCESS,\r\n                    payload: [...teacherName]\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(teacherRes.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(teacherRes.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(teacherRes.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//修改自己信息\r\nfunction *handlePreserve(args) {\r\n    try {\r\n        const {userId, userName, grade, academy, discipline, cls, phone, sex, password} = args.args;\r\n        const data = {userId, userName, grade, academy, discipline, cls, phone, sex, password};\r\n        const res = yield call(Service.post, \"user/updateMySelfInfo\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: PRESERVE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                openNotification(res.data.message);\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                openNotification(\"修改密码失败\");\r\n        }\r\n    } catch(e) {\r\n\r\n    }\r\n}\r\n\r\n//老师查询待批准的学生\r\nfunction *handleQueryRegister(data) {\r\n    const { userId, type, page } = data.args;\r\n    const url = `register/queryRegister?userId=${userId}&type=${type}&page=${page}`;\r\n    const res = yield call(Service.get, url);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: FETCH_QUERY_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\n//老师批准注册用户\r\nfunction *handleRegistered(args) {\r\n    const {userId} = args.args;\r\n    let formData = new FormData();\r\n    formData.append(\"list\", userId);\r\n    const list = formData.get(\"list\");\r\n    const data = {list};\r\n    const res = yield call(Service.post, \"register/registered\" ,data);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: REGISTERED_SUCCESS,\r\n            });\r\n            openNotification(res.data.message);\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n//查询是否有密保问题\r\nfunction *secretGuardExistence(args) {\r\n    const res = yield call(Service.get, `user/secretGuardExistence?userId=${args.args}`);\r\n    const data = {\r\n        \"userId\": res.data.userId,\r\n        \"password\": res.data.pa\r\n    }\r\n    if(res.data.error_code === 0) {\r\n        yield put({\r\n            type: SECRET_GUARD_EXISTENCE_SUCCESS,\r\n            payload: res.data.data\r\n        })\r\n    } else {\r\n        openNotification(res.data.message)\r\n    }\r\n}\r\n//传送忘记密码标志\r\nfunction *sendForgetFlag() {\r\n    yield put({\r\n        type: SEND_FORGET_FLAG_SUCCESS\r\n    })\r\n}\r\n//验证密保\r\nfunction *checkQuestion(args) {\r\n    const res = yield call(Service.get, `user/checkSecretGuard?userId=${args.args.userId}&question=${args.args.question}&answer=${args.args.answer}&password=${args.args.password}`,);\r\n    if(res.data.error_code === 0) {\r\n        openNotification('修改密码成功')\r\n        yield put({\r\n            type: CHECK_QUESTION_SUCCESS,\r\n            payload: res.data.data\r\n        })\r\n    } else {\r\n        openNotification('密保问题验证错误')\r\n    }\r\n}\r\n\r\n//添加密保\r\nfunction *addQuestion(args) {\r\n    const res = yield call(Service.post, 'user/addSecretGuard', args.args);\r\n    if(res.data.error_code === 0) {\r\n        openNotification('添加密保问题成功')\r\n        yield put({\r\n            type: ADD_QUESTION_SUCCESS,\r\n        })\r\n    } else {\r\n        openNotification(res.data.message)\r\n    }\r\n}\r\n\r\nexport default function *watchStudentSagas() {\r\n    yield takeEvery(QUERY_HOMEWORK, handleQueryHomework);\r\n    yield takeEvery(LOGIN, handleLogin);\r\n    yield takeEvery(REGISTER, handleRegister);\r\n    yield takeEvery(TEACHERRES,handleTeacher);\r\n    yield takeEvery(PRESERVE, handlePreserve);\r\n    yield takeEvery(FETCH_QUERY_REGISTER, handleQueryRegister);\r\n    yield takeEvery(REGISTERED, handleRegistered);\r\n    yield takeEvery(SECRET_GUARD_EXISTENCE, secretGuardExistence);\r\n    yield takeEvery(CHECK_QUESTION, checkQuestion);\r\n    yield takeEvery(ADD_QUESTION, addQuestion);\r\n    yield takeEvery(SEND_FORGET_FLAG, sendForgetFlag);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}