{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleKeepAlive),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(counter),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleParam),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(querySecret),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootUserSagas);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport Service from \"../../../lib/Service\";\nimport { KEEP_ALIVE, LOGIN_SUCCESS, COUNTER, COUNTER_SUCCESS, FETCH_PARAM, FETCH_PARAM_SUCCESS, QUERY_SECRET, QUERY_SECRET_SUCCESS } from \"../../../constants/actionTypes\";\nimport { openNotification } from \"../../../utils/commonFunction\";\n\nfunction handleKeepAlive() {\n  var res, id;\n  return _regeneratorRuntime.wrap(function handleKeepAlive$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(Service.get, 'keep_alive');\n\n        case 3:\n          res = _context.sent;\n\n          if (!(res.data.error_code === 0)) {\n            _context.next = 18;\n            break;\n          }\n\n          id = \"游客\";\n          _context.t0 = res.data.data.type;\n          _context.next = _context.t0 === \"student\" ? 9 : _context.t0 === \"teacher\" ? 11 : _context.t0 === \"admin\" ? 13 : 15;\n          break;\n\n        case 9:\n          id = \"学生\";\n          return _context.abrupt(\"break\", 16);\n\n        case 11:\n          id = \"教师\";\n          return _context.abrupt(\"break\", 16);\n\n        case 13:\n          id = \"超级管理员\";\n          return _context.abrupt(\"break\", 16);\n\n        case 15:\n          return _context.abrupt(\"return\", id);\n\n        case 16:\n          _context.next = 18;\n          return put({\n            type: LOGIN_SUCCESS,\n            payload: {\n              id: id,\n              name: res.data.data.userName,\n              userId: res.data.data.userId,\n              academy: res.data.data.academy,\n              class: res.data.data.cls,\n              discipline: res.data.data.discipline,\n              grade: res.data.data.grade,\n              sex: res.data.data.sex,\n              type: res.data.data.type,\n              phone: res.data.data.phone,\n              password: res.data.data.password\n            }\n          });\n\n        case 18:\n          _context.next = 23;\n          break;\n\n        case 20:\n          _context.prev = 20;\n          _context.t1 = _context[\"catch\"](0);\n          console.log(_context.t1);\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 20]]);\n} //访问量\n\n\nfunction counter() {\n  var res;\n  return _regeneratorRuntime.wrap(function counter$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(Service.get, \"counter\");\n\n        case 2:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === 0 ? 6 : _context2.t0 === -1 ? 9 : _context2.t0 === 2 ? 11 : 13;\n          break;\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: COUNTER_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 8:\n          return _context2.abrupt(\"break\", 14);\n\n        case 9:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 14);\n\n        case 11:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 14);\n\n        case 13:\n          return _context2.abrupt(\"return\", 0);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //获取系统参数\n\n\nfunction handleParam() {\n  var res;\n  return _regeneratorRuntime.wrap(function handleParam$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return call(Service.get, \"system/queryParameters\");\n\n        case 2:\n          res = _context3.sent;\n          _context3.t0 = res.data.error_code;\n          _context3.next = _context3.t0 === 0 ? 6 : _context3.t0 === -1 ? 9 : _context3.t0 === 2 ? 11 : 13;\n          break;\n\n        case 6:\n          _context3.next = 8;\n          return put({\n            type: FETCH_PARAM_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 8:\n          return _context3.abrupt(\"break\", 14);\n\n        case 9:\n          openNotification(res.data.message);\n          return _context3.abrupt(\"break\", 14);\n\n        case 11:\n          openNotification(res.data.message);\n          return _context3.abrupt(\"break\", 14);\n\n        case 13:\n          return _context3.abrupt(\"return\", 0);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n} // 是否存在密保问题\n\n\nfunction querySecret(args) {\n  var res;\n  return _regeneratorRuntime.wrap(function querySecret$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return call(Service.get, \"user/secretGuardExistence?userId=\".concat(args.userId));\n\n        case 2:\n          res = _context4.sent;\n          _context4.t0 = res.data.error_code;\n          _context4.next = _context4.t0 === 0 ? 6 : _context4.t0 === -1 ? 9 : _context4.t0 === 2 ? 11 : 13;\n          break;\n\n        case 6:\n          _context4.next = 8;\n          return put({\n            type: QUERY_SECRET_SUCCESS,\n            payload: res.data\n          });\n\n        case 8:\n          return _context4.abrupt(\"break\", 14);\n\n        case 9:\n          openNotification(res.data.message);\n          return _context4.abrupt(\"break\", 14);\n\n        case 11:\n          openNotification(res.data.message);\n          return _context4.abrupt(\"break\", 14);\n\n        case 13:\n          return _context4.abrupt(\"return\", 0);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function rootUserSagas() {\n  return _regeneratorRuntime.wrap(function rootUserSagas$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(KEEP_ALIVE, handleKeepAlive);\n\n        case 2:\n          _context5.next = 4;\n          return takeEvery(COUNTER, counter);\n\n        case 4:\n          _context5.next = 6;\n          return takeEvery(FETCH_PARAM, handleParam);\n\n        case 6:\n          _context5.next = 8;\n          return takeEvery(QUERY_SECRET, querySecret);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/userSagas/user.js"],"names":["handleKeepAlive","counter","handleParam","querySecret","rootUserSagas","takeEvery","call","put","Service","KEEP_ALIVE","LOGIN_SUCCESS","COUNTER","COUNTER_SUCCESS","FETCH_PARAM","FETCH_PARAM_SUCCESS","QUERY_SECRET","QUERY_SECRET_SUCCESS","openNotification","get","res","data","error_code","id","type","payload","name","userName","userId","academy","class","cls","discipline","grade","sex","phone","password","console","log","message","args"],"mappings":"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","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    KEEP_ALIVE,\r\n    LOGIN_SUCCESS,\r\n    COUNTER,\r\n    COUNTER_SUCCESS,\r\n    FETCH_PARAM,\r\n    FETCH_PARAM_SUCCESS,\r\n    QUERY_SECRET,\r\n    QUERY_SECRET_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *handleKeepAlive() {\r\n    try {\r\n        const res = yield call(Service.get, 'keep_alive');\r\n        if (res.data.error_code === 0) {\r\n            let id = \"游客\";\r\n            switch (res.data.data.type) {\r\n                case \"student\":\r\n                    id = \"学生\";\r\n                    break;\r\n                case \"teacher\":\r\n                    id = \"教师\";\r\n                    break;\r\n                case \"admin\":\r\n                    id = \"超级管理员\";\r\n                    break;\r\n                default:\r\n                    return id;\r\n            }\r\n            yield put({\r\n                type: LOGIN_SUCCESS,\r\n                payload: {\r\n                    id,\r\n                    name: res.data.data.userName,\r\n                    userId: res.data.data.userId,\r\n                    academy: res.data.data.academy,\r\n                    class: res.data.data.cls,\r\n                    discipline: res.data.data.discipline,\r\n                    grade: res.data.data.grade,\r\n                    sex: res.data.data.sex,\r\n                    type: res.data.data.type,\r\n                    phone: res.data.data.phone,\r\n                    password: res.data.data.password,\r\n                }\r\n            })\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//访问量\r\nfunction *counter() {\r\n    const res = yield call(Service.get, \"counter\");\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: COUNTER_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n//获取系统参数\r\nfunction *handleParam() {\r\n    const res = yield call(Service.get, `system/queryParameters`);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: FETCH_PARAM_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n// 是否存在密保问题\r\nfunction *querySecret(args) {\r\n    const res = yield call(Service.get, `user/secretGuardExistence?userId=${args.userId}`);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: QUERY_SECRET_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function *rootUserSagas() {\r\n    yield takeEvery(KEEP_ALIVE, handleKeepAlive);\r\n    yield takeEvery(COUNTER,counter);\r\n    yield takeEvery(FETCH_PARAM,handleParam);\r\n    yield takeEvery(QUERY_SECRET,querySecret);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}