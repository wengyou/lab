{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(queryCourseRes),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleSearchCourse),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootCourseSaga);\n\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { QUERY_COURSE, QUERY_COURSE_RES_SUCCESS, FETCH_SEARCH_COURSE_SUCCESS, FETCH_SEARCH_COURSE } from \"../../../constants/actionTypes\";\nimport { openNotification } from \"../../../utils/commonFunction\";\nimport Service from \"../../../lib/Service\"; //获取所有课程，用于学生添加课程那个\n\nfunction queryCourseRes(data) {\n  var _data$args, page, userId, url, res;\n\n  return _regeneratorRuntime.wrap(function queryCourseRes$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _data$args = data.args, page = _data$args.page, userId = _data$args.userId;\n          url = \"course/queryCourse?page=\".concat(page, \"&userId=\").concat(userId);\n          _context.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          res = _context.sent;\n          _context.t0 = res.data.error_code;\n          _context.next = _context.t0 === 0 ? 9 : 12;\n          break;\n\n        case 9:\n          _context.next = 11;\n          return put({\n            type: QUERY_COURSE_RES_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 11:\n          return _context.abrupt(\"break\", 13);\n\n        case 12:\n          return _context.abrupt(\"return\", 0);\n\n        case 13:\n          _context.next = 17;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t1 = _context[\"catch\"](0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 15]]);\n}\n\nfunction handleSearchCourse(data) {\n  var _data$args2, page, teacherName, course, userId, url, res;\n\n  return _regeneratorRuntime.wrap(function handleSearchCourse$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _data$args2 = data.args, page = _data$args2.page, teacherName = _data$args2.teacherName, course = _data$args2.course, userId = _data$args2.userId;\n          url = \"course/queryCourse?page=\".concat(page, \"&teacherName=\").concat(teacherName, \"&course=\").concat(course, \"&userId=\").concat(userId);\n          _context2.next = 4;\n          return call(Service.get, url);\n\n        case 4:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === 0 ? 8 : _context2.t0 === -1 ? 11 : _context2.t0 === 2 ? 13 : 15;\n          break;\n\n        case 8:\n          _context2.next = 10;\n          return put({\n            type: FETCH_SEARCH_COURSE_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 10:\n          return _context2.abrupt(\"break\", 16);\n\n        case 11:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 16);\n\n        case 13:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 16);\n\n        case 15:\n          return _context2.abrupt(\"return\", 0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootCourseSaga() {\n  return _regeneratorRuntime.wrap(function rootCourseSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(QUERY_COURSE, queryCourseRes);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(FETCH_SEARCH_COURSE, handleSearchCourse);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/courseSagas/courseResource.js"],"names":["queryCourseRes","handleSearchCourse","rootCourseSaga","takeEvery","put","call","QUERY_COURSE","QUERY_COURSE_RES_SUCCESS","FETCH_SEARCH_COURSE_SUCCESS","FETCH_SEARCH_COURSE","openNotification","Service","data","args","page","userId","url","get","res","error_code","type","payload","teacherName","course","message"],"mappings":";;oDAWUA,c;qDAsBAC,kB;qDAsBeC,c;;AAvDzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AAEA,SACIC,YADJ,EAEIC,wBAFJ,EAGIC,2BAHJ,EAIIC,mBAJJ,QAKO,gCALP;AAMA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,SAAUX,cAAV,CAAyBY,IAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE+BA,IAAI,CAACC,IAFpC,EAEeC,IAFf,cAEeA,IAFf,EAEqBC,MAFrB,cAEqBA,MAFrB;AAGYC,UAAAA,GAHZ,qCAG6CF,IAH7C,qBAG4DC,MAH5D;AAAA;AAIoB,iBAAMV,IAAI,CAACM,OAAO,CAACM,GAAT,EAAcD,GAAd,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,wBAKgBA,GAAG,CAACN,IAAJ,CAASO,UALzB;AAAA,0CAMiB,CANjB;AAAA;;AAAA;AAAA;AAOgB,iBAAMf,GAAG,CAAC;AACNgB,YAAAA,IAAI,EAACb,wBADC;AAENc,YAAAA,OAAO,EAAEH,GAAG,CAACN,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAPhB;AAAA;;AAAA;AAAA,2CAauB,CAbvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,SAAUX,kBAAV,CAA6BW,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACiDA,IAAI,CAACC,IADtD,EACYC,IADZ,eACYA,IADZ,EACkBQ,WADlB,eACkBA,WADlB,EAC+BC,MAD/B,eAC+BA,MAD/B,EACuCR,MADvC,eACuCA,MADvC;AAEUC,UAAAA,GAFV,qCAE2CF,IAF3C,0BAE+DQ,WAF/D,qBAEqFC,MAFrF,qBAEsGR,MAFtG;AAAA;AAGgB,iBAAMV,IAAI,CAACM,OAAO,CAACM,GAAT,EAAcD,GAAd,CAAV;;AAHhB;AAGUE,UAAAA,GAHV;AAAA,yBAIYA,GAAG,CAACN,IAAJ,CAASO,UAJrB;AAAA,4CAKa,CALb,wBAWa,CAAC,CAXd,yBAca,CAdb;AAAA;;AAAA;AAAA;AAMY,iBAAMf,GAAG,CAAC;AACNgB,YAAAA,IAAI,EAAEZ,2BADA;AAENa,YAAAA,OAAO,EAAEH,GAAG,CAACN,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AANZ;AAAA;;AAAA;AAYYF,UAAAA,gBAAgB,CAACQ,GAAG,CAACN,IAAJ,CAASY,OAAV,CAAhB;AAZZ;;AAAA;AAeYd,UAAAA,gBAAgB,CAACQ,GAAG,CAACN,IAAJ,CAASY,OAAV,CAAhB;AAfZ;;AAAA;AAAA,4CAkBmB,CAlBnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,eAAe,SAAUtB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,SAAS,CAACG,YAAD,EAAeN,cAAf,CAAf;;AADW;AAAA;AAEX,iBAAMG,SAAS,CAACM,mBAAD,EAAsBR,kBAAtB,CAAf;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    QUERY_COURSE,\r\n    QUERY_COURSE_RES_SUCCESS,\r\n    FETCH_SEARCH_COURSE_SUCCESS,\r\n    FETCH_SEARCH_COURSE\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\"\r\nimport Service from \"../../../lib/Service\";\r\n//获取所有课程，用于学生添加课程那个\r\nfunction* queryCourseRes(data) {\r\n    try {\r\n        const {page, userId} = data.args;\r\n        let url = `course/queryCourse?page=${page}&userId=${userId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type:QUERY_COURSE_RES_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n        }\r\n\r\n}\r\n\r\nfunction *handleSearchCourse(data) {\r\n    const { page, teacherName, course, userId} = data.args;\r\n    const url = `course/queryCourse?page=${page}&teacherName=${teacherName}&course=${course}&userId=${userId}`;\r\n    const res = yield call(Service.get, url);\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: FETCH_SEARCH_COURSE_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function* rootCourseSaga() {\r\n    yield takeEvery(QUERY_COURSE, queryCourseRes);\r\n    yield takeEvery(FETCH_SEARCH_COURSE, handleSearchCourse);\r\n}"]},"metadata":{},"sourceType":"module"}