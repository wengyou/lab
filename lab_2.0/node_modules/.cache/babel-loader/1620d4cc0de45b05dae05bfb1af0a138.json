{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.redo = exports.undo = exports.handleKeyCommand = exports.clear = exports.setMediaPosition = exports.removeMedia = exports.setMediaData = exports.insertMedias = exports.insertHorizontalLine = exports.insertAtomicBlock = exports.insertHTML = exports.insertText = exports.toggleSelectionLetterSpacing = exports.toggleSelectionFontFamily = exports.toggleSelectionLineHeight = exports.toggleSelectionFontSize = exports.toggleSelectionBackgroundColor = exports.toggleSelectionColor = exports.decreaseSelectionIndent = exports.increaseSelectionIndent = exports.toggleSelectionIndent = exports.toggleSelectionAlignment = exports.removeSelectionInlineStyles = exports.toggleSelectionInlineStyle = exports.selectionHasInlineStyle = exports.getSelectionInlineStyle = exports.toggleSelectionLink = exports.toggleSelectionEntity = exports.getSelectionEntityData = exports.getSelectionEntityType = exports.toggleSelectionBlockType = exports.getSelectionText = exports.getSelectionBlockType = exports.getSelectionBlockData = exports.setSelectionBlockData = exports.getSelectedBlocks = exports.updateEachCharacterOfSelection = exports.getSelectionBlock = exports.removeBlock = exports.selectNextBlock = exports.selectBlock = exports.selectionContainsStrictBlock = exports.selectionContainsBlockType = exports.isSelectionCollapsed = exports.createEditorState = exports.createEmptyEditorState = exports.isEditorState = exports.registerStrictBlockType = undefined;\n\nvar _draftJs = require('draft-js');\n\nvar _draftjsUtils = require('draftjs-utils');\n\nvar _braftConvert = require('braft-convert');\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar strictBlockTypes = ['atomic'];\n\nvar registerStrictBlockType = exports.registerStrictBlockType = function registerStrictBlockType(blockType) {\n  strictBlockTypes.indexOf(blockType) === -1 && strictBlockTypes.push(blockType);\n};\n\nvar isEditorState = exports.isEditorState = function isEditorState(editorState) {\n  return editorState instanceof _draftJs.EditorState;\n};\n\nvar createEmptyEditorState = exports.createEmptyEditorState = function createEmptyEditorState(editorDecorators) {\n  return _draftJs.EditorState.createEmpty(editorDecorators);\n};\n\nvar createEditorState = exports.createEditorState = function createEditorState(contentState, editorDecorators) {\n  return _draftJs.EditorState.createWithContent(contentState, editorDecorators);\n};\n\nvar isSelectionCollapsed = exports.isSelectionCollapsed = function isSelectionCollapsed(editorState) {\n  return editorState.getSelection().isCollapsed();\n};\n\nvar selectionContainsBlockType = exports.selectionContainsBlockType = function selectionContainsBlockType(editorState, blockType) {\n  return getSelectedBlocks(editorState).find(function (block) {\n    return block.getType() === blockType;\n  });\n};\n\nvar selectionContainsStrictBlock = exports.selectionContainsStrictBlock = function selectionContainsStrictBlock(editorState) {\n  return getSelectedBlocks(editorState).find(function (block) {\n    return ~strictBlockTypes.indexOf(block.getType());\n  });\n};\n\nvar selectBlock = exports.selectBlock = function selectBlock(editorState, block) {\n  var blockKey = block.getKey();\n  return _draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n    anchorKey: blockKey,\n    anchorOffset: 0,\n    focusKey: blockKey,\n    focusOffset: block.getLength()\n  }));\n};\n\nvar selectNextBlock = exports.selectNextBlock = function selectNextBlock(editorState, block) {\n  var nextBlock = editorState.getCurrentContent().getBlockAfter(block.getKey());\n  return nextBlock ? selectBlock(editorState, nextBlock) : editorState;\n};\n\nvar removeBlock = exports.removeBlock = function removeBlock(editorState, block) {\n  var lastSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var nextContentState = void 0,\n      nextEditorState = void 0;\n  var blockKey = block.getKey();\n  nextContentState = _draftJs.Modifier.removeRange(editorState.getCurrentContent(), new _draftJs.SelectionState({\n    anchorKey: blockKey,\n    anchorOffset: 0,\n    focusKey: blockKey,\n    focusOffset: block.getLength()\n  }), 'backward');\n  nextContentState = _draftJs.Modifier.setBlockType(nextContentState, nextContentState.getSelectionAfter(), 'unstyled');\n  nextEditorState = _draftJs.EditorState.push(editorState, nextContentState, 'remove-range');\n  return _draftJs.EditorState.forceSelection(nextEditorState, lastSelection || nextContentState.getSelectionAfter());\n};\n\nvar getSelectionBlock = exports.getSelectionBlock = function getSelectionBlock(editorState) {\n  return editorState.getCurrentContent().getBlockForKey(editorState.getSelection().getAnchorKey());\n};\n\nvar updateEachCharacterOfSelection = exports.updateEachCharacterOfSelection = function updateEachCharacterOfSelection(editorState, callback) {\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n  var contentBlocks = contentState.getBlockMap();\n  var selectedBlocks = getSelectedBlocks(editorState);\n\n  if (selectedBlocks.length === 0) {\n    return editorState;\n  }\n\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n  var nextContentBlocks = contentBlocks.map(function (block) {\n    if (selectedBlocks.indexOf(block) === -1) {\n      return block;\n    }\n\n    var blockKey = block.getKey();\n    var charactersList = block.getCharacterList();\n    var nextCharactersList = null;\n\n    if (blockKey === startKey && blockKey === endKey) {\n      nextCharactersList = charactersList.map(function (character, index) {\n        if (index >= startOffset && index < endOffset) {\n          return callback(character);\n        }\n\n        return character;\n      });\n    } else if (blockKey === startKey) {\n      nextCharactersList = charactersList.map(function (character, index) {\n        if (index >= startOffset) {\n          return callback(character);\n        }\n\n        return character;\n      });\n    } else if (blockKey === endKey) {\n      nextCharactersList = charactersList.map(function (character, index) {\n        if (index < endOffset) {\n          return callback(character);\n        }\n\n        return character;\n      });\n    } else {\n      nextCharactersList = charactersList.map(function (character) {\n        return callback(character);\n      });\n    }\n\n    return block.merge({\n      'characterList': nextCharactersList\n    });\n  });\n  return _draftJs.EditorState.push(editorState, contentState.merge({\n    blockMap: nextContentBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  }), 'update-selection-character-list');\n};\n\nvar getSelectedBlocks = exports.getSelectedBlocks = function getSelectedBlocks(editorState) {\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n  var startKey = selectionState.getStartKey();\n  var endKey = selectionState.getEndKey();\n  var isSameBlock = startKey === endKey;\n  var startingBlock = contentState.getBlockForKey(startKey);\n  var selectedBlocks = [startingBlock];\n\n  if (!isSameBlock) {\n    var blockKey = startKey;\n\n    while (blockKey !== endKey) {\n      var nextBlock = contentState.getBlockAfter(blockKey);\n      selectedBlocks.push(nextBlock);\n      blockKey = nextBlock.getKey();\n    }\n  }\n\n  return selectedBlocks;\n};\n\nvar setSelectionBlockData = exports.setSelectionBlockData = function setSelectionBlockData(editorState, blockData, override) {\n  var newBlockData = override ? blockData : Object.assign({}, getSelectionBlockData(editorState).toJS(), blockData);\n  Object.keys(newBlockData).forEach(function (key) {\n    if (newBlockData.hasOwnProperty(key) && newBlockData[key] === undefined) {\n      delete newBlockData[key];\n    }\n  });\n  return (0, _draftjsUtils.setBlockData)(editorState, newBlockData);\n};\n\nvar getSelectionBlockData = exports.getSelectionBlockData = function getSelectionBlockData(editorState, name) {\n  var blockData = getSelectionBlock(editorState).getData();\n  return name ? blockData.get(name) : blockData;\n};\n\nvar getSelectionBlockType = exports.getSelectionBlockType = function getSelectionBlockType(editorState) {\n  return getSelectionBlock(editorState).getType();\n};\n\nvar getSelectionText = exports.getSelectionText = function getSelectionText(editorState) {\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n\n  if (selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return '';\n  }\n\n  var anchorKey = selectionState.getAnchorKey();\n  var currentContentBlock = contentState.getBlockForKey(anchorKey);\n  var start = selectionState.getStartOffset();\n  var end = selectionState.getEndOffset();\n  return currentContentBlock.getText().slice(start, end);\n};\n\nvar toggleSelectionBlockType = exports.toggleSelectionBlockType = function toggleSelectionBlockType(editorState, blockType) {\n  if (selectionContainsStrictBlock(editorState)) {\n    return editorState;\n  }\n\n  return _draftJs.RichUtils.toggleBlockType(editorState, blockType);\n};\n\nvar getSelectionEntityType = exports.getSelectionEntityType = function getSelectionEntityType(editorState) {\n  var entityKey = (0, _draftjsUtils.getSelectionEntity)(editorState);\n\n  if (entityKey) {\n    var entity = editorState.getCurrentContent().getEntity(entityKey);\n    return entity ? entity.get('type') : null;\n  }\n\n  return null;\n};\n\nvar getSelectionEntityData = exports.getSelectionEntityData = function getSelectionEntityData(editorState, type) {\n  var entityKey = (0, _draftjsUtils.getSelectionEntity)(editorState);\n\n  if (entityKey) {\n    var entity = editorState.getCurrentContent().getEntity(entityKey);\n\n    if (entity && entity.get('type') === type) {\n      return entity.getData();\n    } else {\n      return {};\n    }\n  } else {\n    return {};\n  }\n};\n\nvar toggleSelectionEntity = exports.toggleSelectionEntity = function toggleSelectionEntity(editorState, entity) {\n  var contentState = editorState.getCurrentContent();\n  var selectionState = editorState.getSelection();\n\n  if (selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return editorState;\n  }\n\n  if (!entity || !entity.type || getSelectionEntityType(editorState) === entity.type) {\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.applyEntity(contentState, selectionState, null), 'apply-entity');\n  }\n\n  try {\n    var nextContentState = contentState.createEntity(entity.type, entity.mutability, entity.data);\n    var entityKey = nextContentState.getLastCreatedEntityKey();\n\n    var nextEditorState = _draftJs.EditorState.set(editorState, {\n      currentContent: nextContentState\n    });\n\n    return _draftJs.EditorState.push(nextEditorState, _draftJs.Modifier.applyEntity(nextContentState, selectionState, entityKey), 'apply-entity');\n  } catch (error) {\n    console.warn(error);\n    return editorState;\n  }\n};\n\nvar toggleSelectionLink = exports.toggleSelectionLink = function toggleSelectionLink(editorState, href, target) {\n  var contentState = editorState.getCurrentContent();\n  var selectionState = editorState.getSelection();\n  var entityData = {\n    href: href,\n    target: target\n  };\n\n  if (selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return editorState;\n  }\n\n  if (href === false) {\n    return _draftJs.RichUtils.toggleLink(editorState, selectionState, null);\n  }\n\n  if (href === null) {\n    delete entityData.href;\n  }\n\n  try {\n    var nextContentState = contentState.createEntity('LINK', 'MUTABLE', entityData);\n    var entityKey = nextContentState.getLastCreatedEntityKey();\n\n    var nextEditorState = _draftJs.EditorState.set(editorState, {\n      currentContent: nextContentState\n    });\n\n    nextEditorState = _draftJs.RichUtils.toggleLink(nextEditorState, selectionState, entityKey);\n    nextEditorState = _draftJs.EditorState.forceSelection(nextEditorState, selectionState.merge({\n      anchorOffset: selectionState.getEndOffset(),\n      focusOffset: selectionState.getEndOffset()\n    }));\n    nextEditorState = _draftJs.EditorState.push(nextEditorState, _draftJs.Modifier.insertText(nextEditorState.getCurrentContent(), nextEditorState.getSelection(), ''), 'insert-text');\n    return nextEditorState;\n  } catch (error) {\n    console.warn(error);\n    return editorState;\n  }\n};\n\nvar getSelectionInlineStyle = exports.getSelectionInlineStyle = function getSelectionInlineStyle(editorState) {\n  return editorState.getCurrentInlineStyle();\n};\n\nvar selectionHasInlineStyle = exports.selectionHasInlineStyle = function selectionHasInlineStyle(editorState, style) {\n  return getSelectionInlineStyle(editorState).has(style.toUpperCase());\n};\n\nvar toggleSelectionInlineStyle = exports.toggleSelectionInlineStyle = function toggleSelectionInlineStyle(editorState, style) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var nextEditorState = editorState;\n  style = prefix + style.toUpperCase();\n\n  if (prefix) {\n    nextEditorState = updateEachCharacterOfSelection(nextEditorState, function (characterMetadata) {\n      return characterMetadata.toJS().style.reduce(function (characterMetadata, characterStyle) {\n        if (characterStyle.indexOf(prefix) === 0 && style !== characterStyle) {\n          return _draftJs.CharacterMetadata.removeStyle(characterMetadata, characterStyle);\n        } else {\n          return characterMetadata;\n        }\n      }, characterMetadata);\n    });\n  }\n\n  return _draftJs.RichUtils.toggleInlineStyle(nextEditorState, style);\n};\n\nvar removeSelectionInlineStyles = exports.removeSelectionInlineStyles = function removeSelectionInlineStyles(editorState) {\n  return updateEachCharacterOfSelection(editorState, function (characterMetadata) {\n    return characterMetadata.merge({\n      style: _immutable2.default.OrderedSet([])\n    });\n  });\n};\n\nvar toggleSelectionAlignment = exports.toggleSelectionAlignment = function toggleSelectionAlignment(editorState, alignment) {\n  return setSelectionBlockData(editorState, {\n    textAlign: getSelectionBlockData(editorState, 'textAlign') !== alignment ? alignment : undefined\n  });\n};\n\nvar toggleSelectionIndent = exports.toggleSelectionIndent = function toggleSelectionIndent(editorState, textIndent) {\n  var maxIndent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n  return textIndent < 0 || textIndent > maxIndent || isNaN(textIndent) ? editorState : setSelectionBlockData(editorState, {\n    textIndent: textIndent || undefined\n  });\n};\n\nvar increaseSelectionIndent = exports.increaseSelectionIndent = function increaseSelectionIndent(editorState) {\n  var maxIndent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  var currentIndent = getSelectionBlockData(editorState, 'textIndent') || 0;\n  return toggleSelectionIndent(editorState, currentIndent + 1, maxIndent);\n};\n\nvar decreaseSelectionIndent = exports.decreaseSelectionIndent = function decreaseSelectionIndent(editorState) {\n  var currentIndent = getSelectionBlockData(editorState, 'textIndent') || 0;\n  return toggleSelectionIndent(editorState, currentIndent - 1);\n};\n\nvar toggleSelectionColor = exports.toggleSelectionColor = function toggleSelectionColor(editorState, color) {\n  return toggleSelectionInlineStyle(editorState, color.replace('#', ''), 'COLOR-');\n};\n\nvar toggleSelectionBackgroundColor = exports.toggleSelectionBackgroundColor = function toggleSelectionBackgroundColor(editorState, color) {\n  return toggleSelectionInlineStyle(editorState, color.replace('#', ''), 'BGCOLOR-');\n};\n\nvar toggleSelectionFontSize = exports.toggleSelectionFontSize = function toggleSelectionFontSize(editorState, fontSize) {\n  return toggleSelectionInlineStyle(editorState, fontSize, 'FONTSIZE-');\n};\n\nvar toggleSelectionLineHeight = exports.toggleSelectionLineHeight = function toggleSelectionLineHeight(editorState, lineHeight) {\n  return toggleSelectionInlineStyle(editorState, lineHeight, 'LINEHEIGHT-');\n};\n\nvar toggleSelectionFontFamily = exports.toggleSelectionFontFamily = function toggleSelectionFontFamily(editorState, fontFamily) {\n  return toggleSelectionInlineStyle(editorState, fontFamily, 'FONTFAMILY-');\n};\n\nvar toggleSelectionLetterSpacing = exports.toggleSelectionLetterSpacing = function toggleSelectionLetterSpacing(editorState, letterSpacing) {\n  return toggleSelectionInlineStyle(editorState, letterSpacing, 'LETTERSPACING-');\n};\n\nvar insertText = exports.insertText = function insertText(editorState, text, inlineStyle, entity) {\n  var selectionState = editorState.getSelection();\n  var currentSelectedBlockType = getSelectionBlockType(editorState);\n\n  if (currentSelectedBlockType === 'atomic') {\n    return editorState;\n  }\n\n  var entityKey = void 0;\n  var contentState = editorState.getCurrentContent();\n\n  if (entity && entity.type) {\n    contentState = contentState.createEntity(entity.type, entity.mutability || 'MUTABLE', entity.data || entityData);\n    entityKey = contentState.getLastCreatedEntityKey();\n  }\n\n  if (!selectionState.isCollapsed()) {\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.replaceText(contentState, selectionState, text, inlineStyle, entityKey), 'replace-text');\n  } else {\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.insertText(contentState, selectionState, text, inlineStyle, entityKey), 'insert-text');\n  }\n};\n\nvar insertHTML = exports.insertHTML = function insertHTML(editorState, htmlString, source) {\n  if (!htmlString) {\n    return editorState;\n  }\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n  var options = editorState.convertOptions || {};\n\n  try {\n    var _convertFromRaw = (0, _draftJs.convertFromRaw)((0, _braftConvert.convertHTMLToRaw)(htmlString, options, source)),\n        blockMap = _convertFromRaw.blockMap;\n\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.replaceWithFragment(contentState, selectionState, blockMap), 'insert-fragment');\n  } catch (error) {\n    console.warn(error);\n    return editorState;\n  }\n};\n\nvar insertAtomicBlock = exports.insertAtomicBlock = function insertAtomicBlock(editorState, type) {\n  var immutable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (selectionContainsStrictBlock(editorState)) {\n    return insertAtomicBlock(selectNextBlock(editorState, getSelectionBlock(editorState)), type, immutable, data);\n  }\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n\n  if (!selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return editorState;\n  }\n\n  var contentStateWithEntity = contentState.createEntity(type, immutable ? 'IMMUTABLE' : 'MUTABLE', data);\n  var entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n  var newEditorState = _draftJs.AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, ' ');\n\n  return newEditorState;\n};\n\nvar insertHorizontalLine = exports.insertHorizontalLine = function insertHorizontalLine(editorState) {\n  return insertAtomicBlock(editorState, 'HR');\n};\n\nvar insertMedias = exports.insertMedias = function insertMedias(editorState) {\n  var medias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!medias.length) {\n    return editorState;\n  }\n\n  return medias.reduce(function (editorState, media) {\n    var url = media.url,\n        link = media.link,\n        link_target = media.link_target,\n        name = media.name,\n        type = media.type,\n        width = media.width,\n        height = media.height,\n        meta = media.meta;\n    return insertAtomicBlock(editorState, type, true, {\n      url: url,\n      link: link,\n      link_target: link_target,\n      name: name,\n      type: type,\n      width: width,\n      height: height,\n      meta: meta\n    });\n  }, editorState);\n};\n\nvar setMediaData = exports.setMediaData = function setMediaData(editorState, entityKey, data) {\n  return _draftJs.EditorState.push(editorState, editorState.getCurrentContent().mergeEntityData(entityKey, data), 'change-block-data');\n};\n\nvar removeMedia = exports.removeMedia = function removeMedia(editorState, mediaBlock) {\n  return removeBlock(editorState, mediaBlock);\n};\n\nvar setMediaPosition = exports.setMediaPosition = function setMediaPosition(editorState, mediaBlock, position) {\n  var newPosition = {};\n  var float = position.float,\n      alignment = position.alignment;\n\n  if (typeof float !== 'undefined') {\n    newPosition.float = mediaBlock.getData().get('float') === float ? null : float;\n  }\n\n  if (typeof alignment !== 'undefined') {\n    newPosition.alignment = mediaBlock.getData().get('alignment') === alignment ? null : alignment;\n  }\n\n  return setSelectionBlockData(selectBlock(editorState, mediaBlock), newPosition);\n};\n\nvar clear = exports.clear = function clear(editorState) {\n  var contentState = editorState.getCurrentContent();\n  var firstBlock = contentState.getFirstBlock();\n  var lastBlock = contentState.getLastBlock();\n  var allSelected = new _draftJs.SelectionState({\n    anchorKey: firstBlock.getKey(),\n    anchorOffset: 0,\n    focusKey: lastBlock.getKey(),\n    focusOffset: lastBlock.getLength(),\n    hasFocus: true\n  });\n  return _draftJs.RichUtils.toggleBlockType(_draftJs.EditorState.push(editorState, _draftJs.Modifier.removeRange(contentState, allSelected, 'backward'), 'remove-range'), 'unstyled');\n};\n\nvar handleKeyCommand = exports.handleKeyCommand = function handleKeyCommand(editorState, command) {\n  return _draftJs.RichUtils.handleKeyCommand(editorState, command);\n};\n\nvar undo = exports.undo = function undo(editorState) {\n  return _draftJs.EditorState.undo(editorState);\n};\n\nvar redo = exports.redo = function redo(editorState) {\n  return _draftJs.EditorState.redo(editorState);\n};","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/node_modules/braft-utils/dist/content.js"],"names":["Object","defineProperty","exports","value","redo","undo","handleKeyCommand","clear","setMediaPosition","removeMedia","setMediaData","insertMedias","insertHorizontalLine","insertAtomicBlock","insertHTML","insertText","toggleSelectionLetterSpacing","toggleSelectionFontFamily","toggleSelectionLineHeight","toggleSelectionFontSize","toggleSelectionBackgroundColor","toggleSelectionColor","decreaseSelectionIndent","increaseSelectionIndent","toggleSelectionIndent","toggleSelectionAlignment","removeSelectionInlineStyles","toggleSelectionInlineStyle","selectionHasInlineStyle","getSelectionInlineStyle","toggleSelectionLink","toggleSelectionEntity","getSelectionEntityData","getSelectionEntityType","toggleSelectionBlockType","getSelectionText","getSelectionBlockType","getSelectionBlockData","setSelectionBlockData","getSelectedBlocks","updateEachCharacterOfSelection","getSelectionBlock","removeBlock","selectNextBlock","selectBlock","selectionContainsStrictBlock","selectionContainsBlockType","isSelectionCollapsed","createEditorState","createEmptyEditorState","isEditorState","registerStrictBlockType","undefined","_draftJs","require","_draftjsUtils","_braftConvert","_immutable","_immutable2","_interopRequireDefault","obj","__esModule","default","strictBlockTypes","blockType","indexOf","push","editorState","EditorState","editorDecorators","createEmpty","contentState","createWithContent","getSelection","isCollapsed","find","block","getType","blockKey","getKey","forceSelection","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","getLength","nextBlock","getCurrentContent","getBlockAfter","lastSelection","arguments","length","nextContentState","nextEditorState","Modifier","removeRange","setBlockType","getSelectionAfter","getBlockForKey","getAnchorKey","callback","selectionState","contentBlocks","getBlockMap","selectedBlocks","startKey","getStartKey","startOffset","getStartOffset","endKey","getEndKey","endOffset","getEndOffset","nextContentBlocks","map","charactersList","getCharacterList","nextCharactersList","character","index","merge","blockMap","selectionBefore","selectionAfter","isSameBlock","startingBlock","blockData","override","newBlockData","assign","toJS","keys","forEach","key","hasOwnProperty","setBlockData","name","getData","get","currentContentBlock","start","end","getText","slice","RichUtils","toggleBlockType","entityKey","getSelectionEntity","entity","getEntity","type","applyEntity","createEntity","mutability","data","getLastCreatedEntityKey","set","currentContent","error","console","warn","href","target","entityData","toggleLink","getCurrentInlineStyle","style","has","toUpperCase","prefix","characterMetadata","reduce","characterStyle","CharacterMetadata","removeStyle","toggleInlineStyle","OrderedSet","alignment","textAlign","textIndent","maxIndent","isNaN","currentIndent","color","replace","fontSize","lineHeight","fontFamily","letterSpacing","text","inlineStyle","currentSelectedBlockType","replaceText","htmlString","source","options","convertOptions","_convertFromRaw","convertFromRaw","convertHTMLToRaw","replaceWithFragment","immutable","contentStateWithEntity","newEditorState","AtomicBlockUtils","medias","media","url","link","link_target","width","height","meta","mergeEntityData","mediaBlock","position","newPosition","float","firstBlock","getFirstBlock","lastBlock","getLastBlock","allSelected","hasFocus","command"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,gBAAR,GAA2BJ,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,gBAAR,GAA2BN,OAAO,CAACO,WAAR,GAAsBP,OAAO,CAACQ,YAAR,GAAuBR,OAAO,CAACS,YAAR,GAAuBT,OAAO,CAACU,oBAAR,GAA+BV,OAAO,CAACW,iBAAR,GAA4BX,OAAO,CAACY,UAAR,GAAqBZ,OAAO,CAACa,UAAR,GAAqBb,OAAO,CAACc,4BAAR,GAAuCd,OAAO,CAACe,yBAAR,GAAoCf,OAAO,CAACgB,yBAAR,GAAoChB,OAAO,CAACiB,uBAAR,GAAkCjB,OAAO,CAACkB,8BAAR,GAAyClB,OAAO,CAACmB,oBAAR,GAA+BnB,OAAO,CAACoB,uBAAR,GAAkCpB,OAAO,CAACqB,uBAAR,GAAkCrB,OAAO,CAACsB,qBAAR,GAAgCtB,OAAO,CAACuB,wBAAR,GAAmCvB,OAAO,CAACwB,2BAAR,GAAsCxB,OAAO,CAACyB,0BAAR,GAAqCzB,OAAO,CAAC0B,uBAAR,GAAkC1B,OAAO,CAAC2B,uBAAR,GAAkC3B,OAAO,CAAC4B,mBAAR,GAA8B5B,OAAO,CAAC6B,qBAAR,GAAgC7B,OAAO,CAAC8B,sBAAR,GAAiC9B,OAAO,CAAC+B,sBAAR,GAAiC/B,OAAO,CAACgC,wBAAR,GAAmChC,OAAO,CAACiC,gBAAR,GAA2BjC,OAAO,CAACkC,qBAAR,GAAgClC,OAAO,CAACmC,qBAAR,GAAgCnC,OAAO,CAACoC,qBAAR,GAAgCpC,OAAO,CAACqC,iBAAR,GAA4BrC,OAAO,CAACsC,8BAAR,GAAyCtC,OAAO,CAACuC,iBAAR,GAA4BvC,OAAO,CAACwC,WAAR,GAAsBxC,OAAO,CAACyC,eAAR,GAA0BzC,OAAO,CAAC0C,WAAR,GAAsB1C,OAAO,CAAC2C,4BAAR,GAAuC3C,OAAO,CAAC4C,0BAAR,GAAqC5C,OAAO,CAAC6C,oBAAR,GAA+B7C,OAAO,CAAC8C,iBAAR,GAA4B9C,OAAO,CAAC+C,sBAAR,GAAiC/C,OAAO,CAACgD,aAAR,GAAwBhD,OAAO,CAACiD,uBAAR,GAAkCC,SAAn6C;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAD,CAA3B;;AAEA,IAAIG,UAAU,GAAGH,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAII,WAAW,GAAGC,sBAAsB,CAACF,UAAD,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,gBAAgB,GAAG,CAAC,QAAD,CAAvB;;AAEA,IAAIZ,uBAAuB,GAAGjD,OAAO,CAACiD,uBAAR,GAAkC,SAASA,uBAAT,CAAiCa,SAAjC,EAA4C;AAC1GD,EAAAA,gBAAgB,CAACE,OAAjB,CAAyBD,SAAzB,MAAwC,CAAC,CAAzC,IAA8CD,gBAAgB,CAACG,IAAjB,CAAsBF,SAAtB,CAA9C;AACD,CAFD;;AAIA,IAAId,aAAa,GAAGhD,OAAO,CAACgD,aAAR,GAAwB,SAASA,aAAT,CAAuBiB,WAAvB,EAAoC;AAC9E,SAAOA,WAAW,YAAYd,QAAQ,CAACe,WAAvC;AACD,CAFD;;AAIA,IAAInB,sBAAsB,GAAG/C,OAAO,CAAC+C,sBAAR,GAAiC,SAASA,sBAAT,CAAgCoB,gBAAhC,EAAkD;AAC9G,SAAOhB,QAAQ,CAACe,WAAT,CAAqBE,WAArB,CAAiCD,gBAAjC,CAAP;AACD,CAFD;;AAIA,IAAIrB,iBAAiB,GAAG9C,OAAO,CAAC8C,iBAAR,GAA4B,SAASA,iBAAT,CAA2BuB,YAA3B,EAAyCF,gBAAzC,EAA2D;AAC7G,SAAOhB,QAAQ,CAACe,WAAT,CAAqBI,iBAArB,CAAuCD,YAAvC,EAAqDF,gBAArD,CAAP;AACD,CAFD;;AAIA,IAAItB,oBAAoB,GAAG7C,OAAO,CAAC6C,oBAAR,GAA+B,SAASA,oBAAT,CAA8BoB,WAA9B,EAA2C;AACnG,SAAOA,WAAW,CAACM,YAAZ,GAA2BC,WAA3B,EAAP;AACD,CAFD;;AAIA,IAAI5B,0BAA0B,GAAG5C,OAAO,CAAC4C,0BAAR,GAAqC,SAASA,0BAAT,CAAoCqB,WAApC,EAAiDH,SAAjD,EAA4D;AAChI,SAAOzB,iBAAiB,CAAC4B,WAAD,CAAjB,CAA+BQ,IAA/B,CAAoC,UAAUC,KAAV,EAAiB;AAC1D,WAAOA,KAAK,CAACC,OAAN,OAAoBb,SAA3B;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAInB,4BAA4B,GAAG3C,OAAO,CAAC2C,4BAAR,GAAuC,SAASA,4BAAT,CAAsCsB,WAAtC,EAAmD;AAC3H,SAAO5B,iBAAiB,CAAC4B,WAAD,CAAjB,CAA+BQ,IAA/B,CAAoC,UAAUC,KAAV,EAAiB;AAC1D,WAAO,CAACb,gBAAgB,CAACE,OAAjB,CAAyBW,KAAK,CAACC,OAAN,EAAzB,CAAR;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAIjC,WAAW,GAAG1C,OAAO,CAAC0C,WAAR,GAAsB,SAASA,WAAT,CAAqBuB,WAArB,EAAkCS,KAAlC,EAAyC;AAE/E,MAAIE,QAAQ,GAAGF,KAAK,CAACG,MAAN,EAAf;AAEA,SAAO1B,QAAQ,CAACe,WAAT,CAAqBY,cAArB,CAAoCb,WAApC,EAAiD,IAAId,QAAQ,CAAC4B,cAAb,CAA4B;AAClFC,IAAAA,SAAS,EAAEJ,QADuE;AAElFK,IAAAA,YAAY,EAAE,CAFoE;AAGlFC,IAAAA,QAAQ,EAAEN,QAHwE;AAIlFO,IAAAA,WAAW,EAAET,KAAK,CAACU,SAAN;AAJqE,GAA5B,CAAjD,CAAP;AAMD,CAVD;;AAYA,IAAI3C,eAAe,GAAGzC,OAAO,CAACyC,eAAR,GAA0B,SAASA,eAAT,CAAyBwB,WAAzB,EAAsCS,KAAtC,EAA6C;AAC3F,MAAIW,SAAS,GAAGpB,WAAW,CAACqB,iBAAZ,GAAgCC,aAAhC,CAA8Cb,KAAK,CAACG,MAAN,EAA9C,CAAhB;AACA,SAAOQ,SAAS,GAAG3C,WAAW,CAACuB,WAAD,EAAcoB,SAAd,CAAd,GAAyCpB,WAAzD;AACD,CAHD;;AAKA,IAAIzB,WAAW,GAAGxC,OAAO,CAACwC,WAAR,GAAsB,SAASA,WAAT,CAAqByB,WAArB,EAAkCS,KAAlC,EAAyC;AAC/E,MAAIc,aAAa,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAxF;AAGA,MAAIE,gBAAgB,GAAG,KAAK,CAA5B;AAAA,MACIC,eAAe,GAAG,KAAK,CAD3B;AAEA,MAAIhB,QAAQ,GAAGF,KAAK,CAACG,MAAN,EAAf;AAEAc,EAAAA,gBAAgB,GAAGxC,QAAQ,CAAC0C,QAAT,CAAkBC,WAAlB,CAA8B7B,WAAW,CAACqB,iBAAZ,EAA9B,EAA+D,IAAInC,QAAQ,CAAC4B,cAAb,CAA4B;AAC5GC,IAAAA,SAAS,EAAEJ,QADiG;AAE5GK,IAAAA,YAAY,EAAE,CAF8F;AAG5GC,IAAAA,QAAQ,EAAEN,QAHkG;AAI5GO,IAAAA,WAAW,EAAET,KAAK,CAACU,SAAN;AAJ+F,GAA5B,CAA/D,EAKf,UALe,CAAnB;AAOAO,EAAAA,gBAAgB,GAAGxC,QAAQ,CAAC0C,QAAT,CAAkBE,YAAlB,CAA+BJ,gBAA/B,EAAiDA,gBAAgB,CAACK,iBAAjB,EAAjD,EAAuF,UAAvF,CAAnB;AACAJ,EAAAA,eAAe,GAAGzC,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuC0B,gBAAvC,EAAyD,cAAzD,CAAlB;AACA,SAAOxC,QAAQ,CAACe,WAAT,CAAqBY,cAArB,CAAoCc,eAApC,EAAqDJ,aAAa,IAAIG,gBAAgB,CAACK,iBAAjB,EAAtE,CAAP;AACD,CAlBD;;AAoBA,IAAIzD,iBAAiB,GAAGvC,OAAO,CAACuC,iBAAR,GAA4B,SAASA,iBAAT,CAA2B0B,WAA3B,EAAwC;AAC1F,SAAOA,WAAW,CAACqB,iBAAZ,GAAgCW,cAAhC,CAA+ChC,WAAW,CAACM,YAAZ,GAA2B2B,YAA3B,EAA/C,CAAP;AACD,CAFD;;AAIA,IAAI5D,8BAA8B,GAAGtC,OAAO,CAACsC,8BAAR,GAAyC,SAASA,8BAAT,CAAwC2B,WAAxC,EAAqDkC,QAArD,EAA+D;AAE3I,MAAIC,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AACA,MAAIF,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;AACA,MAAIe,aAAa,GAAGhC,YAAY,CAACiC,WAAb,EAApB;AACA,MAAIC,cAAc,GAAGlE,iBAAiB,CAAC4B,WAAD,CAAtC;;AAEA,MAAIsC,cAAc,CAACb,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAOzB,WAAP;AACD;;AAED,MAAIuC,QAAQ,GAAGJ,cAAc,CAACK,WAAf,EAAf;AACA,MAAIC,WAAW,GAAGN,cAAc,CAACO,cAAf,EAAlB;AACA,MAAIC,MAAM,GAAGR,cAAc,CAACS,SAAf,EAAb;AACA,MAAIC,SAAS,GAAGV,cAAc,CAACW,YAAf,EAAhB;AAEA,MAAIC,iBAAiB,GAAGX,aAAa,CAACY,GAAd,CAAkB,UAAUvC,KAAV,EAAiB;AAEzD,QAAI6B,cAAc,CAACxC,OAAf,CAAuBW,KAAvB,MAAkC,CAAC,CAAvC,EAA0C;AACxC,aAAOA,KAAP;AACD;;AAED,QAAIE,QAAQ,GAAGF,KAAK,CAACG,MAAN,EAAf;AACA,QAAIqC,cAAc,GAAGxC,KAAK,CAACyC,gBAAN,EAArB;AACA,QAAIC,kBAAkB,GAAG,IAAzB;;AAEA,QAAIxC,QAAQ,KAAK4B,QAAb,IAAyB5B,QAAQ,KAAKgC,MAA1C,EAAkD;AAChDQ,MAAAA,kBAAkB,GAAGF,cAAc,CAACD,GAAf,CAAmB,UAAUI,SAAV,EAAqBC,KAArB,EAA4B;AAClE,YAAIA,KAAK,IAAIZ,WAAT,IAAwBY,KAAK,GAAGR,SAApC,EAA+C;AAC7C,iBAAOX,QAAQ,CAACkB,SAAD,CAAf;AACD;;AACD,eAAOA,SAAP;AACD,OALoB,CAArB;AAMD,KAPD,MAOO,IAAIzC,QAAQ,KAAK4B,QAAjB,EAA2B;AAChCY,MAAAA,kBAAkB,GAAGF,cAAc,CAACD,GAAf,CAAmB,UAAUI,SAAV,EAAqBC,KAArB,EAA4B;AAClE,YAAIA,KAAK,IAAIZ,WAAb,EAA0B;AACxB,iBAAOP,QAAQ,CAACkB,SAAD,CAAf;AACD;;AACD,eAAOA,SAAP;AACD,OALoB,CAArB;AAMD,KAPM,MAOA,IAAIzC,QAAQ,KAAKgC,MAAjB,EAAyB;AAC9BQ,MAAAA,kBAAkB,GAAGF,cAAc,CAACD,GAAf,CAAmB,UAAUI,SAAV,EAAqBC,KAArB,EAA4B;AAClE,YAAIA,KAAK,GAAGR,SAAZ,EAAuB;AACrB,iBAAOX,QAAQ,CAACkB,SAAD,CAAf;AACD;;AACD,eAAOA,SAAP;AACD,OALoB,CAArB;AAMD,KAPM,MAOA;AACLD,MAAAA,kBAAkB,GAAGF,cAAc,CAACD,GAAf,CAAmB,UAAUI,SAAV,EAAqB;AAC3D,eAAOlB,QAAQ,CAACkB,SAAD,CAAf;AACD,OAFoB,CAArB;AAGD;;AAED,WAAO3C,KAAK,CAAC6C,KAAN,CAAY;AACjB,uBAAiBH;AADA,KAAZ,CAAP;AAGD,GAxCuB,CAAxB;AA0CA,SAAOjE,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCI,YAAY,CAACkD,KAAb,CAAmB;AAC/DC,IAAAA,QAAQ,EAAER,iBADqD;AAE/DS,IAAAA,eAAe,EAAErB,cAF8C;AAG/DsB,IAAAA,cAAc,EAAEtB;AAH+C,GAAnB,CAAvC,EAIH,iCAJG,CAAP;AAKD,CA/DD;;AAiEA,IAAI/D,iBAAiB,GAAGrC,OAAO,CAACqC,iBAAR,GAA4B,SAASA,iBAAT,CAA2B4B,WAA3B,EAAwC;AAE1F,MAAImC,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AACA,MAAIF,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;AAEA,MAAIkB,QAAQ,GAAGJ,cAAc,CAACK,WAAf,EAAf;AACA,MAAIG,MAAM,GAAGR,cAAc,CAACS,SAAf,EAAb;AACA,MAAIc,WAAW,GAAGnB,QAAQ,KAAKI,MAA/B;AACA,MAAIgB,aAAa,GAAGvD,YAAY,CAAC4B,cAAb,CAA4BO,QAA5B,CAApB;AACA,MAAID,cAAc,GAAG,CAACqB,aAAD,CAArB;;AAEA,MAAI,CAACD,WAAL,EAAkB;AAChB,QAAI/C,QAAQ,GAAG4B,QAAf;;AAEA,WAAO5B,QAAQ,KAAKgC,MAApB,EAA4B;AAC1B,UAAIvB,SAAS,GAAGhB,YAAY,CAACkB,aAAb,CAA2BX,QAA3B,CAAhB;AACA2B,MAAAA,cAAc,CAACvC,IAAf,CAAoBqB,SAApB;AACAT,MAAAA,QAAQ,GAAGS,SAAS,CAACR,MAAV,EAAX;AACD;AACF;;AAED,SAAO0B,cAAP;AACD,CAtBD;;AAwBA,IAAInE,qBAAqB,GAAGpC,OAAO,CAACoC,qBAAR,GAAgC,SAASA,qBAAT,CAA+B6B,WAA/B,EAA4C4D,SAA5C,EAAuDC,QAAvD,EAAiE;AAE3H,MAAIC,YAAY,GAAGD,QAAQ,GAAGD,SAAH,GAAe/H,MAAM,CAACkI,MAAP,CAAc,EAAd,EAAkB7F,qBAAqB,CAAC8B,WAAD,CAArB,CAAmCgE,IAAnC,EAAlB,EAA6DJ,SAA7D,CAA1C;AAEA/H,EAAAA,MAAM,CAACoI,IAAP,CAAYH,YAAZ,EAA0BI,OAA1B,CAAkC,UAAUC,GAAV,EAAe;AAC/C,QAAIL,YAAY,CAACM,cAAb,CAA4BD,GAA5B,KAAoCL,YAAY,CAACK,GAAD,CAAZ,KAAsBlF,SAA9D,EAAyE;AACvE,aAAO6E,YAAY,CAACK,GAAD,CAAnB;AACD;AACF,GAJD;AAMA,SAAO,CAAC,GAAG/E,aAAa,CAACiF,YAAlB,EAAgCrE,WAAhC,EAA6C8D,YAA7C,CAAP;AACD,CAXD;;AAaA,IAAI5F,qBAAqB,GAAGnC,OAAO,CAACmC,qBAAR,GAAgC,SAASA,qBAAT,CAA+B8B,WAA/B,EAA4CsE,IAA5C,EAAkD;AAC5G,MAAIV,SAAS,GAAGtF,iBAAiB,CAAC0B,WAAD,CAAjB,CAA+BuE,OAA/B,EAAhB;AACA,SAAOD,IAAI,GAAGV,SAAS,CAACY,GAAV,CAAcF,IAAd,CAAH,GAAyBV,SAApC;AACD,CAHD;;AAKA,IAAI3F,qBAAqB,GAAGlC,OAAO,CAACkC,qBAAR,GAAgC,SAASA,qBAAT,CAA+B+B,WAA/B,EAA4C;AACtG,SAAO1B,iBAAiB,CAAC0B,WAAD,CAAjB,CAA+BU,OAA/B,EAAP;AACD,CAFD;;AAIA,IAAI1C,gBAAgB,GAAGjC,OAAO,CAACiC,gBAAR,GAA2B,SAASA,gBAAT,CAA0BgC,WAA1B,EAAuC;AAEvF,MAAImC,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AACA,MAAIF,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;;AAEA,MAAIc,cAAc,CAAC5B,WAAf,MAAgCtC,qBAAqB,CAAC+B,WAAD,CAArB,KAAuC,QAA3E,EAAqF;AACnF,WAAO,EAAP;AACD;;AAED,MAAIe,SAAS,GAAGoB,cAAc,CAACF,YAAf,EAAhB;AACA,MAAIwC,mBAAmB,GAAGrE,YAAY,CAAC4B,cAAb,CAA4BjB,SAA5B,CAA1B;AACA,MAAI2D,KAAK,GAAGvC,cAAc,CAACO,cAAf,EAAZ;AACA,MAAIiC,GAAG,GAAGxC,cAAc,CAACW,YAAf,EAAV;AAEA,SAAO2B,mBAAmB,CAACG,OAApB,GAA8BC,KAA9B,CAAoCH,KAApC,EAA2CC,GAA3C,CAAP;AACD,CAfD;;AAiBA,IAAI5G,wBAAwB,GAAGhC,OAAO,CAACgC,wBAAR,GAAmC,SAASA,wBAAT,CAAkCiC,WAAlC,EAA+CH,SAA/C,EAA0D;AAE1H,MAAInB,4BAA4B,CAACsB,WAAD,CAAhC,EAA+C;AAC7C,WAAOA,WAAP;AACD;;AAED,SAAOd,QAAQ,CAAC4F,SAAT,CAAmBC,eAAnB,CAAmC/E,WAAnC,EAAgDH,SAAhD,CAAP;AACD,CAPD;;AASA,IAAI/B,sBAAsB,GAAG/B,OAAO,CAAC+B,sBAAR,GAAiC,SAASA,sBAAT,CAAgCkC,WAAhC,EAA6C;AAEzG,MAAIgF,SAAS,GAAG,CAAC,GAAG5F,aAAa,CAAC6F,kBAAlB,EAAsCjF,WAAtC,CAAhB;;AAEA,MAAIgF,SAAJ,EAAe;AACb,QAAIE,MAAM,GAAGlF,WAAW,CAACqB,iBAAZ,GAAgC8D,SAAhC,CAA0CH,SAA1C,CAAb;AACA,WAAOE,MAAM,GAAGA,MAAM,CAACV,GAAP,CAAW,MAAX,CAAH,GAAwB,IAArC;AACD;;AAED,SAAO,IAAP;AACD,CAVD;;AAYA,IAAI3G,sBAAsB,GAAG9B,OAAO,CAAC8B,sBAAR,GAAiC,SAASA,sBAAT,CAAgCmC,WAAhC,EAA6CoF,IAA7C,EAAmD;AAE/G,MAAIJ,SAAS,GAAG,CAAC,GAAG5F,aAAa,CAAC6F,kBAAlB,EAAsCjF,WAAtC,CAAhB;;AAEA,MAAIgF,SAAJ,EAAe;AACb,QAAIE,MAAM,GAAGlF,WAAW,CAACqB,iBAAZ,GAAgC8D,SAAhC,CAA0CH,SAA1C,CAAb;;AACA,QAAIE,MAAM,IAAIA,MAAM,CAACV,GAAP,CAAW,MAAX,MAAuBY,IAArC,EAA2C;AACzC,aAAOF,MAAM,CAACX,OAAP,EAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF,GAPD,MAOO;AACL,WAAO,EAAP;AACD;AACF,CAdD;;AAgBA,IAAI3G,qBAAqB,GAAG7B,OAAO,CAAC6B,qBAAR,GAAgC,SAASA,qBAAT,CAA+BoC,WAA/B,EAA4CkF,MAA5C,EAAoD;AAE9G,MAAI9E,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;AACA,MAAIc,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;;AAEA,MAAI6B,cAAc,CAAC5B,WAAf,MAAgCtC,qBAAqB,CAAC+B,WAAD,CAArB,KAAuC,QAA3E,EAAqF;AACnF,WAAOA,WAAP;AACD;;AAED,MAAI,CAACkF,MAAD,IAAW,CAACA,MAAM,CAACE,IAAnB,IAA2BtH,sBAAsB,CAACkC,WAAD,CAAtB,KAAwCkF,MAAM,CAACE,IAA9E,EAAoF;AAClF,WAAOlG,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCd,QAAQ,CAAC0C,QAAT,CAAkByD,WAAlB,CAA8BjF,YAA9B,EAA4C+B,cAA5C,EAA4D,IAA5D,CAAvC,EAA0G,cAA1G,CAAP;AACD;;AAED,MAAI;AAEF,QAAIT,gBAAgB,GAAGtB,YAAY,CAACkF,YAAb,CAA0BJ,MAAM,CAACE,IAAjC,EAAuCF,MAAM,CAACK,UAA9C,EAA0DL,MAAM,CAACM,IAAjE,CAAvB;AACA,QAAIR,SAAS,GAAGtD,gBAAgB,CAAC+D,uBAAjB,EAAhB;;AAEA,QAAI9D,eAAe,GAAGzC,QAAQ,CAACe,WAAT,CAAqByF,GAArB,CAAyB1F,WAAzB,EAAsC;AAC1D2F,MAAAA,cAAc,EAAEjE;AAD0C,KAAtC,CAAtB;;AAIA,WAAOxC,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0B4B,eAA1B,EAA2CzC,QAAQ,CAAC0C,QAAT,CAAkByD,WAAlB,CAA8B3D,gBAA9B,EAAgDS,cAAhD,EAAgE6C,SAAhE,CAA3C,EAAuH,cAAvH,CAAP;AACD,GAVD,CAUE,OAAOY,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,WAAO5F,WAAP;AACD;AACF,CA3BD;;AA6BA,IAAIrC,mBAAmB,GAAG5B,OAAO,CAAC4B,mBAAR,GAA8B,SAASA,mBAAT,CAA6BqC,WAA7B,EAA0C+F,IAA1C,EAAgDC,MAAhD,EAAwD;AAE9G,MAAI5F,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;AACA,MAAIc,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AAEA,MAAI2F,UAAU,GAAG;AAAEF,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,MAAM,EAAEA;AAAtB,GAAjB;;AAEA,MAAI7D,cAAc,CAAC5B,WAAf,MAAgCtC,qBAAqB,CAAC+B,WAAD,CAArB,KAAuC,QAA3E,EAAqF;AACnF,WAAOA,WAAP;AACD;;AAED,MAAI+F,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAO7G,QAAQ,CAAC4F,SAAT,CAAmBoB,UAAnB,CAA8BlG,WAA9B,EAA2CmC,cAA3C,EAA2D,IAA3D,CAAP;AACD;;AAED,MAAI4D,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAOE,UAAU,CAACF,IAAlB;AACD;;AAED,MAAI;AAEF,QAAIrE,gBAAgB,GAAGtB,YAAY,CAACkF,YAAb,CAA0B,MAA1B,EAAkC,SAAlC,EAA6CW,UAA7C,CAAvB;AACA,QAAIjB,SAAS,GAAGtD,gBAAgB,CAAC+D,uBAAjB,EAAhB;;AAEA,QAAI9D,eAAe,GAAGzC,QAAQ,CAACe,WAAT,CAAqByF,GAArB,CAAyB1F,WAAzB,EAAsC;AAC1D2F,MAAAA,cAAc,EAAEjE;AAD0C,KAAtC,CAAtB;;AAIAC,IAAAA,eAAe,GAAGzC,QAAQ,CAAC4F,SAAT,CAAmBoB,UAAnB,CAA8BvE,eAA9B,EAA+CQ,cAA/C,EAA+D6C,SAA/D,CAAlB;AACArD,IAAAA,eAAe,GAAGzC,QAAQ,CAACe,WAAT,CAAqBY,cAArB,CAAoCc,eAApC,EAAqDQ,cAAc,CAACmB,KAAf,CAAqB;AAC1FtC,MAAAA,YAAY,EAAEmB,cAAc,CAACW,YAAf,EAD4E;AAE1F5B,MAAAA,WAAW,EAAEiB,cAAc,CAACW,YAAf;AAF6E,KAArB,CAArD,CAAlB;AAKAnB,IAAAA,eAAe,GAAGzC,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0B4B,eAA1B,EAA2CzC,QAAQ,CAAC0C,QAAT,CAAkBhF,UAAlB,CAA6B+E,eAAe,CAACN,iBAAhB,EAA7B,EAAkEM,eAAe,CAACrB,YAAhB,EAAlE,EAAkG,EAAlG,CAA3C,EAAkJ,aAAlJ,CAAlB;AAEA,WAAOqB,eAAP;AACD,GAlBD,CAkBE,OAAOiE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,WAAO5F,WAAP;AACD;AACF,CAzCD;;AA2CA,IAAItC,uBAAuB,GAAG3B,OAAO,CAAC2B,uBAAR,GAAkC,SAASA,uBAAT,CAAiCsC,WAAjC,EAA8C;AAC5G,SAAOA,WAAW,CAACmG,qBAAZ,EAAP;AACD,CAFD;;AAIA,IAAI1I,uBAAuB,GAAG1B,OAAO,CAAC0B,uBAAR,GAAkC,SAASA,uBAAT,CAAiCuC,WAAjC,EAA8CoG,KAA9C,EAAqD;AACnH,SAAO1I,uBAAuB,CAACsC,WAAD,CAAvB,CAAqCqG,GAArC,CAAyCD,KAAK,CAACE,WAAN,EAAzC,CAAP;AACD,CAFD;;AAIA,IAAI9I,0BAA0B,GAAGzB,OAAO,CAACyB,0BAAR,GAAqC,SAASA,0BAAT,CAAoCwC,WAApC,EAAiDoG,KAAjD,EAAwD;AAC5H,MAAIG,MAAM,GAAG/E,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;AAGA,MAAIG,eAAe,GAAG3B,WAAtB;AACAoG,EAAAA,KAAK,GAAGG,MAAM,GAAGH,KAAK,CAACE,WAAN,EAAjB;;AAEA,MAAIC,MAAJ,EAAY;AAEV5E,IAAAA,eAAe,GAAGtD,8BAA8B,CAACsD,eAAD,EAAkB,UAAU6E,iBAAV,EAA6B;AAE7F,aAAOA,iBAAiB,CAACxC,IAAlB,GAAyBoC,KAAzB,CAA+BK,MAA/B,CAAsC,UAAUD,iBAAV,EAA6BE,cAA7B,EAA6C;AACxF,YAAIA,cAAc,CAAC5G,OAAf,CAAuByG,MAAvB,MAAmC,CAAnC,IAAwCH,KAAK,KAAKM,cAAtD,EAAsE;AACpE,iBAAOxH,QAAQ,CAACyH,iBAAT,CAA2BC,WAA3B,CAAuCJ,iBAAvC,EAA0DE,cAA1D,CAAP;AACD,SAFD,MAEO;AACL,iBAAOF,iBAAP;AACD;AACF,OANM,EAMJA,iBANI,CAAP;AAOD,KAT+C,CAAhD;AAUD;;AAED,SAAOtH,QAAQ,CAAC4F,SAAT,CAAmB+B,iBAAnB,CAAqClF,eAArC,EAAsDyE,KAAtD,CAAP;AACD,CAtBD;;AAwBA,IAAI7I,2BAA2B,GAAGxB,OAAO,CAACwB,2BAAR,GAAsC,SAASA,2BAAT,CAAqCyC,WAArC,EAAkD;AAExH,SAAO3B,8BAA8B,CAAC2B,WAAD,EAAc,UAAUwG,iBAAV,EAA6B;AAC9E,WAAOA,iBAAiB,CAAClD,KAAlB,CAAwB;AAC7B8C,MAAAA,KAAK,EAAE7G,WAAW,CAACI,OAAZ,CAAoBmH,UAApB,CAA+B,EAA/B;AADsB,KAAxB,CAAP;AAGD,GAJoC,CAArC;AAKD,CAPD;;AASA,IAAIxJ,wBAAwB,GAAGvB,OAAO,CAACuB,wBAAR,GAAmC,SAASA,wBAAT,CAAkC0C,WAAlC,EAA+C+G,SAA/C,EAA0D;AAC1H,SAAO5I,qBAAqB,CAAC6B,WAAD,EAAc;AACxCgH,IAAAA,SAAS,EAAE9I,qBAAqB,CAAC8B,WAAD,EAAc,WAAd,CAArB,KAAoD+G,SAApD,GAAgEA,SAAhE,GAA4E9H;AAD/C,GAAd,CAA5B;AAGD,CAJD;;AAMA,IAAI5B,qBAAqB,GAAGtB,OAAO,CAACsB,qBAAR,GAAgC,SAASA,qBAAT,CAA+B2C,WAA/B,EAA4CiH,UAA5C,EAAwD;AAClH,MAAIC,SAAS,GAAG1F,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAApF;AAEA,SAAOyF,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAGC,SAA/B,IAA4CC,KAAK,CAACF,UAAD,CAAjD,GAAgEjH,WAAhE,GAA8E7B,qBAAqB,CAAC6B,WAAD,EAAc;AACtHiH,IAAAA,UAAU,EAAEA,UAAU,IAAIhI;AAD4F,GAAd,CAA1G;AAGD,CAND;;AAQA,IAAI7B,uBAAuB,GAAGrB,OAAO,CAACqB,uBAAR,GAAkC,SAASA,uBAAT,CAAiC4C,WAAjC,EAA8C;AAC5G,MAAIkH,SAAS,GAAG1F,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAApF;AAEA,MAAI4F,aAAa,GAAGlJ,qBAAqB,CAAC8B,WAAD,EAAc,YAAd,CAArB,IAAoD,CAAxE;AACA,SAAO3C,qBAAqB,CAAC2C,WAAD,EAAcoH,aAAa,GAAG,CAA9B,EAAiCF,SAAjC,CAA5B;AACD,CALD;;AAOA,IAAI/J,uBAAuB,GAAGpB,OAAO,CAACoB,uBAAR,GAAkC,SAASA,uBAAT,CAAiC6C,WAAjC,EAA8C;AAC5G,MAAIoH,aAAa,GAAGlJ,qBAAqB,CAAC8B,WAAD,EAAc,YAAd,CAArB,IAAoD,CAAxE;AACA,SAAO3C,qBAAqB,CAAC2C,WAAD,EAAcoH,aAAa,GAAG,CAA9B,CAA5B;AACD,CAHD;;AAKA,IAAIlK,oBAAoB,GAAGnB,OAAO,CAACmB,oBAAR,GAA+B,SAASA,oBAAT,CAA8B8C,WAA9B,EAA2CqH,KAA3C,EAAkD;AAC1G,SAAO7J,0BAA0B,CAACwC,WAAD,EAAcqH,KAAK,CAACC,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAd,EAAsC,QAAtC,CAAjC;AACD,CAFD;;AAIA,IAAIrK,8BAA8B,GAAGlB,OAAO,CAACkB,8BAAR,GAAyC,SAASA,8BAAT,CAAwC+C,WAAxC,EAAqDqH,KAArD,EAA4D;AACxI,SAAO7J,0BAA0B,CAACwC,WAAD,EAAcqH,KAAK,CAACC,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAd,EAAsC,UAAtC,CAAjC;AACD,CAFD;;AAIA,IAAItK,uBAAuB,GAAGjB,OAAO,CAACiB,uBAAR,GAAkC,SAASA,uBAAT,CAAiCgD,WAAjC,EAA8CuH,QAA9C,EAAwD;AACtH,SAAO/J,0BAA0B,CAACwC,WAAD,EAAcuH,QAAd,EAAwB,WAAxB,CAAjC;AACD,CAFD;;AAIA,IAAIxK,yBAAyB,GAAGhB,OAAO,CAACgB,yBAAR,GAAoC,SAASA,yBAAT,CAAmCiD,WAAnC,EAAgDwH,UAAhD,EAA4D;AAC9H,SAAOhK,0BAA0B,CAACwC,WAAD,EAAcwH,UAAd,EAA0B,aAA1B,CAAjC;AACD,CAFD;;AAIA,IAAI1K,yBAAyB,GAAGf,OAAO,CAACe,yBAAR,GAAoC,SAASA,yBAAT,CAAmCkD,WAAnC,EAAgDyH,UAAhD,EAA4D;AAC9H,SAAOjK,0BAA0B,CAACwC,WAAD,EAAcyH,UAAd,EAA0B,aAA1B,CAAjC;AACD,CAFD;;AAIA,IAAI5K,4BAA4B,GAAGd,OAAO,CAACc,4BAAR,GAAuC,SAASA,4BAAT,CAAsCmD,WAAtC,EAAmD0H,aAAnD,EAAkE;AAC1I,SAAOlK,0BAA0B,CAACwC,WAAD,EAAc0H,aAAd,EAA6B,gBAA7B,CAAjC;AACD,CAFD;;AAIA,IAAI9K,UAAU,GAAGb,OAAO,CAACa,UAAR,GAAqB,SAASA,UAAT,CAAoBoD,WAApB,EAAiC2H,IAAjC,EAAuCC,WAAvC,EAAoD1C,MAApD,EAA4D;AAEhG,MAAI/C,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AACA,MAAIuH,wBAAwB,GAAG5J,qBAAqB,CAAC+B,WAAD,CAApD;;AAEA,MAAI6H,wBAAwB,KAAK,QAAjC,EAA2C;AACzC,WAAO7H,WAAP;AACD;;AAED,MAAIgF,SAAS,GAAG,KAAK,CAArB;AACA,MAAI5E,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;;AAEA,MAAI6D,MAAM,IAAIA,MAAM,CAACE,IAArB,EAA2B;AACzBhF,IAAAA,YAAY,GAAGA,YAAY,CAACkF,YAAb,CAA0BJ,MAAM,CAACE,IAAjC,EAAuCF,MAAM,CAACK,UAAP,IAAqB,SAA5D,EAAuEL,MAAM,CAACM,IAAP,IAAeS,UAAtF,CAAf;AACAjB,IAAAA,SAAS,GAAG5E,YAAY,CAACqF,uBAAb,EAAZ;AACD;;AAED,MAAI,CAACtD,cAAc,CAAC5B,WAAf,EAAL,EAAmC;AACjC,WAAOrB,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCd,QAAQ,CAAC0C,QAAT,CAAkBkG,WAAlB,CAA8B1H,YAA9B,EAA4C+B,cAA5C,EAA4DwF,IAA5D,EAAkEC,WAAlE,EAA+E5C,SAA/E,CAAvC,EAAkI,cAAlI,CAAP;AACD,GAFD,MAEO;AACL,WAAO9F,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCd,QAAQ,CAAC0C,QAAT,CAAkBhF,UAAlB,CAA6BwD,YAA7B,EAA2C+B,cAA3C,EAA2DwF,IAA3D,EAAiEC,WAAjE,EAA8E5C,SAA9E,CAAvC,EAAiI,aAAjI,CAAP;AACD;AACF,CAtBD;;AAwBA,IAAIrI,UAAU,GAAGZ,OAAO,CAACY,UAAR,GAAqB,SAASA,UAAT,CAAoBqD,WAApB,EAAiC+H,UAAjC,EAA6CC,MAA7C,EAAqD;AAEzF,MAAI,CAACD,UAAL,EAAiB;AACf,WAAO/H,WAAP;AACD;;AAED,MAAImC,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AACA,MAAIF,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;AACA,MAAI4G,OAAO,GAAGjI,WAAW,CAACkI,cAAZ,IAA8B,EAA5C;;AAEA,MAAI;AACF,QAAIC,eAAe,GAAG,CAAC,GAAGjJ,QAAQ,CAACkJ,cAAb,EAA6B,CAAC,GAAG/I,aAAa,CAACgJ,gBAAlB,EAAoCN,UAApC,EAAgDE,OAAhD,EAAyDD,MAAzD,CAA7B,CAAtB;AAAA,QACIzE,QAAQ,GAAG4E,eAAe,CAAC5E,QAD/B;;AAGA,WAAOrE,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCd,QAAQ,CAAC0C,QAAT,CAAkB0G,mBAAlB,CAAsClI,YAAtC,EAAoD+B,cAApD,EAAoEoB,QAApE,CAAvC,EAAsH,iBAAtH,CAAP;AACD,GALD,CAKE,OAAOqC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,WAAO5F,WAAP;AACD;AACF,CAnBD;;AAqBA,IAAItD,iBAAiB,GAAGX,OAAO,CAACW,iBAAR,GAA4B,SAASA,iBAAT,CAA2BsD,WAA3B,EAAwCoF,IAAxC,EAA8C;AAChG,MAAImD,SAAS,GAAG/G,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAApF;AACA,MAAIgE,IAAI,GAAGhE,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;;AAGA,MAAI9C,4BAA4B,CAACsB,WAAD,CAAhC,EAA+C;AAC7C,WAAOtD,iBAAiB,CAAC8B,eAAe,CAACwB,WAAD,EAAc1B,iBAAiB,CAAC0B,WAAD,CAA/B,CAAhB,EAA+DoF,IAA/D,EAAqEmD,SAArE,EAAgF/C,IAAhF,CAAxB;AACD;;AAED,MAAIrD,cAAc,GAAGnC,WAAW,CAACM,YAAZ,EAArB;AACA,MAAIF,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;;AAEA,MAAI,CAACc,cAAc,CAAC5B,WAAf,EAAD,IAAiCtC,qBAAqB,CAAC+B,WAAD,CAArB,KAAuC,QAA5E,EAAsF;AACpF,WAAOA,WAAP;AACD;;AAED,MAAIwI,sBAAsB,GAAGpI,YAAY,CAACkF,YAAb,CAA0BF,IAA1B,EAAgCmD,SAAS,GAAG,WAAH,GAAiB,SAA1D,EAAqE/C,IAArE,CAA7B;AACA,MAAIR,SAAS,GAAGwD,sBAAsB,CAAC/C,uBAAvB,EAAhB;;AACA,MAAIgD,cAAc,GAAGvJ,QAAQ,CAACwJ,gBAAT,CAA0BhM,iBAA1B,CAA4CsD,WAA5C,EAAyDgF,SAAzD,EAAoE,GAApE,CAArB;;AAEA,SAAOyD,cAAP;AACD,CArBD;;AAuBA,IAAIhM,oBAAoB,GAAGV,OAAO,CAACU,oBAAR,GAA+B,SAASA,oBAAT,CAA8BuD,WAA9B,EAA2C;AACnG,SAAOtD,iBAAiB,CAACsD,WAAD,EAAc,IAAd,CAAxB;AACD,CAFD;;AAIA,IAAIxD,YAAY,GAAGT,OAAO,CAACS,YAAR,GAAuB,SAASA,YAAT,CAAsBwD,WAAtB,EAAmC;AAC3E,MAAI2I,MAAM,GAAGnH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBvC,SAAzC,GAAqDuC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;;AAGA,MAAI,CAACmH,MAAM,CAAClH,MAAZ,EAAoB;AAClB,WAAOzB,WAAP;AACD;;AAED,SAAO2I,MAAM,CAAClC,MAAP,CAAc,UAAUzG,WAAV,EAAuB4I,KAAvB,EAA8B;AACjD,QAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;AAAA,QACIC,IAAI,GAAGF,KAAK,CAACE,IADjB;AAAA,QAEIC,WAAW,GAAGH,KAAK,CAACG,WAFxB;AAAA,QAGIzE,IAAI,GAAGsE,KAAK,CAACtE,IAHjB;AAAA,QAIIc,IAAI,GAAGwD,KAAK,CAACxD,IAJjB;AAAA,QAKI4D,KAAK,GAAGJ,KAAK,CAACI,KALlB;AAAA,QAMIC,MAAM,GAAGL,KAAK,CAACK,MANnB;AAAA,QAOIC,IAAI,GAAGN,KAAK,CAACM,IAPjB;AASA,WAAOxM,iBAAiB,CAACsD,WAAD,EAAcoF,IAAd,EAAoB,IAApB,EAA0B;AAAEyD,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,IAAI,EAAEA,IAAlB;AAAwBC,MAAAA,WAAW,EAAEA,WAArC;AAAkDzE,MAAAA,IAAI,EAAEA,IAAxD;AAA8Dc,MAAAA,IAAI,EAAEA,IAApE;AAA0E4D,MAAAA,KAAK,EAAEA,KAAjF;AAAwFC,MAAAA,MAAM,EAAEA,MAAhG;AAAwGC,MAAAA,IAAI,EAAEA;AAA9G,KAA1B,CAAxB;AACD,GAXM,EAWJlJ,WAXI,CAAP;AAYD,CApBD;;AAsBA,IAAIzD,YAAY,GAAGR,OAAO,CAACQ,YAAR,GAAuB,SAASA,YAAT,CAAsByD,WAAtB,EAAmCgF,SAAnC,EAA8CQ,IAA9C,EAAoD;AAC5F,SAAOtG,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCA,WAAW,CAACqB,iBAAZ,GAAgC8H,eAAhC,CAAgDnE,SAAhD,EAA2DQ,IAA3D,CAAvC,EAAyG,mBAAzG,CAAP;AACD,CAFD;;AAIA,IAAIlJ,WAAW,GAAGP,OAAO,CAACO,WAAR,GAAsB,SAASA,WAAT,CAAqB0D,WAArB,EAAkCoJ,UAAlC,EAA8C;AACpF,SAAO7K,WAAW,CAACyB,WAAD,EAAcoJ,UAAd,CAAlB;AACD,CAFD;;AAIA,IAAI/M,gBAAgB,GAAGN,OAAO,CAACM,gBAAR,GAA2B,SAASA,gBAAT,CAA0B2D,WAA1B,EAAuCoJ,UAAvC,EAAmDC,QAAnD,EAA6D;AAE7G,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,KAAK,GAAGF,QAAQ,CAACE,KAArB;AAAA,MACIxC,SAAS,GAAGsC,QAAQ,CAACtC,SADzB;;AAIA,MAAI,OAAOwC,KAAP,KAAiB,WAArB,EAAkC;AAChCD,IAAAA,WAAW,CAACC,KAAZ,GAAoBH,UAAU,CAAC7E,OAAX,GAAqBC,GAArB,CAAyB,OAAzB,MAAsC+E,KAAtC,GAA8C,IAA9C,GAAqDA,KAAzE;AACD;;AAED,MAAI,OAAOxC,SAAP,KAAqB,WAAzB,EAAsC;AACpCuC,IAAAA,WAAW,CAACvC,SAAZ,GAAwBqC,UAAU,CAAC7E,OAAX,GAAqBC,GAArB,CAAyB,WAAzB,MAA0CuC,SAA1C,GAAsD,IAAtD,GAA6DA,SAArF;AACD;;AAED,SAAO5I,qBAAqB,CAACM,WAAW,CAACuB,WAAD,EAAcoJ,UAAd,CAAZ,EAAuCE,WAAvC,CAA5B;AACD,CAhBD;;AAkBA,IAAIlN,KAAK,GAAGL,OAAO,CAACK,KAAR,GAAgB,SAASA,KAAT,CAAe4D,WAAf,EAA4B;AAEtD,MAAII,YAAY,GAAGJ,WAAW,CAACqB,iBAAZ,EAAnB;AAEA,MAAImI,UAAU,GAAGpJ,YAAY,CAACqJ,aAAb,EAAjB;AACA,MAAIC,SAAS,GAAGtJ,YAAY,CAACuJ,YAAb,EAAhB;AAEA,MAAIC,WAAW,GAAG,IAAI1K,QAAQ,CAAC4B,cAAb,CAA4B;AAC5CC,IAAAA,SAAS,EAAEyI,UAAU,CAAC5I,MAAX,EADiC;AAE5CI,IAAAA,YAAY,EAAE,CAF8B;AAG5CC,IAAAA,QAAQ,EAAEyI,SAAS,CAAC9I,MAAV,EAHkC;AAI5CM,IAAAA,WAAW,EAAEwI,SAAS,CAACvI,SAAV,EAJ+B;AAK5C0I,IAAAA,QAAQ,EAAE;AALkC,GAA5B,CAAlB;AAQA,SAAO3K,QAAQ,CAAC4F,SAAT,CAAmBC,eAAnB,CAAmC7F,QAAQ,CAACe,WAAT,CAAqBF,IAArB,CAA0BC,WAA1B,EAAuCd,QAAQ,CAAC0C,QAAT,CAAkBC,WAAlB,CAA8BzB,YAA9B,EAA4CwJ,WAA5C,EAAyD,UAAzD,CAAvC,EAA6G,cAA7G,CAAnC,EAAiK,UAAjK,CAAP;AACD,CAhBD;;AAkBA,IAAIzN,gBAAgB,GAAGJ,OAAO,CAACI,gBAAR,GAA2B,SAASA,gBAAT,CAA0B6D,WAA1B,EAAuC8J,OAAvC,EAAgD;AAChG,SAAO5K,QAAQ,CAAC4F,SAAT,CAAmB3I,gBAAnB,CAAoC6D,WAApC,EAAiD8J,OAAjD,CAAP;AACD,CAFD;;AAIA,IAAI5N,IAAI,GAAGH,OAAO,CAACG,IAAR,GAAe,SAASA,IAAT,CAAc8D,WAAd,EAA2B;AACnD,SAAOd,QAAQ,CAACe,WAAT,CAAqB/D,IAArB,CAA0B8D,WAA1B,CAAP;AACD,CAFD;;AAIA,IAAI/D,IAAI,GAAGF,OAAO,CAACE,IAAR,GAAe,SAASA,IAAT,CAAc+D,WAAd,EAA2B;AACnD,SAAOd,QAAQ,CAACe,WAAT,CAAqBhE,IAArB,CAA0B+D,WAA1B,CAAP;AACD,CAFD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.redo = exports.undo = exports.handleKeyCommand = exports.clear = exports.setMediaPosition = exports.removeMedia = exports.setMediaData = exports.insertMedias = exports.insertHorizontalLine = exports.insertAtomicBlock = exports.insertHTML = exports.insertText = exports.toggleSelectionLetterSpacing = exports.toggleSelectionFontFamily = exports.toggleSelectionLineHeight = exports.toggleSelectionFontSize = exports.toggleSelectionBackgroundColor = exports.toggleSelectionColor = exports.decreaseSelectionIndent = exports.increaseSelectionIndent = exports.toggleSelectionIndent = exports.toggleSelectionAlignment = exports.removeSelectionInlineStyles = exports.toggleSelectionInlineStyle = exports.selectionHasInlineStyle = exports.getSelectionInlineStyle = exports.toggleSelectionLink = exports.toggleSelectionEntity = exports.getSelectionEntityData = exports.getSelectionEntityType = exports.toggleSelectionBlockType = exports.getSelectionText = exports.getSelectionBlockType = exports.getSelectionBlockData = exports.setSelectionBlockData = exports.getSelectedBlocks = exports.updateEachCharacterOfSelection = exports.getSelectionBlock = exports.removeBlock = exports.selectNextBlock = exports.selectBlock = exports.selectionContainsStrictBlock = exports.selectionContainsBlockType = exports.isSelectionCollapsed = exports.createEditorState = exports.createEmptyEditorState = exports.isEditorState = exports.registerStrictBlockType = undefined;\n\nvar _draftJs = require('draft-js');\n\nvar _draftjsUtils = require('draftjs-utils');\n\nvar _braftConvert = require('braft-convert');\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar strictBlockTypes = ['atomic'];\n\nvar registerStrictBlockType = exports.registerStrictBlockType = function registerStrictBlockType(blockType) {\n  strictBlockTypes.indexOf(blockType) === -1 && strictBlockTypes.push(blockType);\n};\n\nvar isEditorState = exports.isEditorState = function isEditorState(editorState) {\n  return editorState instanceof _draftJs.EditorState;\n};\n\nvar createEmptyEditorState = exports.createEmptyEditorState = function createEmptyEditorState(editorDecorators) {\n  return _draftJs.EditorState.createEmpty(editorDecorators);\n};\n\nvar createEditorState = exports.createEditorState = function createEditorState(contentState, editorDecorators) {\n  return _draftJs.EditorState.createWithContent(contentState, editorDecorators);\n};\n\nvar isSelectionCollapsed = exports.isSelectionCollapsed = function isSelectionCollapsed(editorState) {\n  return editorState.getSelection().isCollapsed();\n};\n\nvar selectionContainsBlockType = exports.selectionContainsBlockType = function selectionContainsBlockType(editorState, blockType) {\n  return getSelectedBlocks(editorState).find(function (block) {\n    return block.getType() === blockType;\n  });\n};\n\nvar selectionContainsStrictBlock = exports.selectionContainsStrictBlock = function selectionContainsStrictBlock(editorState) {\n  return getSelectedBlocks(editorState).find(function (block) {\n    return ~strictBlockTypes.indexOf(block.getType());\n  });\n};\n\nvar selectBlock = exports.selectBlock = function selectBlock(editorState, block) {\n\n  var blockKey = block.getKey();\n\n  return _draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n    anchorKey: blockKey,\n    anchorOffset: 0,\n    focusKey: blockKey,\n    focusOffset: block.getLength()\n  }));\n};\n\nvar selectNextBlock = exports.selectNextBlock = function selectNextBlock(editorState, block) {\n  var nextBlock = editorState.getCurrentContent().getBlockAfter(block.getKey());\n  return nextBlock ? selectBlock(editorState, nextBlock) : editorState;\n};\n\nvar removeBlock = exports.removeBlock = function removeBlock(editorState, block) {\n  var lastSelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\n  var nextContentState = void 0,\n      nextEditorState = void 0;\n  var blockKey = block.getKey();\n\n  nextContentState = _draftJs.Modifier.removeRange(editorState.getCurrentContent(), new _draftJs.SelectionState({\n    anchorKey: blockKey,\n    anchorOffset: 0,\n    focusKey: blockKey,\n    focusOffset: block.getLength()\n  }), 'backward');\n\n  nextContentState = _draftJs.Modifier.setBlockType(nextContentState, nextContentState.getSelectionAfter(), 'unstyled');\n  nextEditorState = _draftJs.EditorState.push(editorState, nextContentState, 'remove-range');\n  return _draftJs.EditorState.forceSelection(nextEditorState, lastSelection || nextContentState.getSelectionAfter());\n};\n\nvar getSelectionBlock = exports.getSelectionBlock = function getSelectionBlock(editorState) {\n  return editorState.getCurrentContent().getBlockForKey(editorState.getSelection().getAnchorKey());\n};\n\nvar updateEachCharacterOfSelection = exports.updateEachCharacterOfSelection = function updateEachCharacterOfSelection(editorState, callback) {\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n  var contentBlocks = contentState.getBlockMap();\n  var selectedBlocks = getSelectedBlocks(editorState);\n\n  if (selectedBlocks.length === 0) {\n    return editorState;\n  }\n\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n\n  var nextContentBlocks = contentBlocks.map(function (block) {\n\n    if (selectedBlocks.indexOf(block) === -1) {\n      return block;\n    }\n\n    var blockKey = block.getKey();\n    var charactersList = block.getCharacterList();\n    var nextCharactersList = null;\n\n    if (blockKey === startKey && blockKey === endKey) {\n      nextCharactersList = charactersList.map(function (character, index) {\n        if (index >= startOffset && index < endOffset) {\n          return callback(character);\n        }\n        return character;\n      });\n    } else if (blockKey === startKey) {\n      nextCharactersList = charactersList.map(function (character, index) {\n        if (index >= startOffset) {\n          return callback(character);\n        }\n        return character;\n      });\n    } else if (blockKey === endKey) {\n      nextCharactersList = charactersList.map(function (character, index) {\n        if (index < endOffset) {\n          return callback(character);\n        }\n        return character;\n      });\n    } else {\n      nextCharactersList = charactersList.map(function (character) {\n        return callback(character);\n      });\n    }\n\n    return block.merge({\n      'characterList': nextCharactersList\n    });\n  });\n\n  return _draftJs.EditorState.push(editorState, contentState.merge({\n    blockMap: nextContentBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  }), 'update-selection-character-list');\n};\n\nvar getSelectedBlocks = exports.getSelectedBlocks = function getSelectedBlocks(editorState) {\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n\n  var startKey = selectionState.getStartKey();\n  var endKey = selectionState.getEndKey();\n  var isSameBlock = startKey === endKey;\n  var startingBlock = contentState.getBlockForKey(startKey);\n  var selectedBlocks = [startingBlock];\n\n  if (!isSameBlock) {\n    var blockKey = startKey;\n\n    while (blockKey !== endKey) {\n      var nextBlock = contentState.getBlockAfter(blockKey);\n      selectedBlocks.push(nextBlock);\n      blockKey = nextBlock.getKey();\n    }\n  }\n\n  return selectedBlocks;\n};\n\nvar setSelectionBlockData = exports.setSelectionBlockData = function setSelectionBlockData(editorState, blockData, override) {\n\n  var newBlockData = override ? blockData : Object.assign({}, getSelectionBlockData(editorState).toJS(), blockData);\n\n  Object.keys(newBlockData).forEach(function (key) {\n    if (newBlockData.hasOwnProperty(key) && newBlockData[key] === undefined) {\n      delete newBlockData[key];\n    }\n  });\n\n  return (0, _draftjsUtils.setBlockData)(editorState, newBlockData);\n};\n\nvar getSelectionBlockData = exports.getSelectionBlockData = function getSelectionBlockData(editorState, name) {\n  var blockData = getSelectionBlock(editorState).getData();\n  return name ? blockData.get(name) : blockData;\n};\n\nvar getSelectionBlockType = exports.getSelectionBlockType = function getSelectionBlockType(editorState) {\n  return getSelectionBlock(editorState).getType();\n};\n\nvar getSelectionText = exports.getSelectionText = function getSelectionText(editorState) {\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n\n  if (selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return '';\n  }\n\n  var anchorKey = selectionState.getAnchorKey();\n  var currentContentBlock = contentState.getBlockForKey(anchorKey);\n  var start = selectionState.getStartOffset();\n  var end = selectionState.getEndOffset();\n\n  return currentContentBlock.getText().slice(start, end);\n};\n\nvar toggleSelectionBlockType = exports.toggleSelectionBlockType = function toggleSelectionBlockType(editorState, blockType) {\n\n  if (selectionContainsStrictBlock(editorState)) {\n    return editorState;\n  }\n\n  return _draftJs.RichUtils.toggleBlockType(editorState, blockType);\n};\n\nvar getSelectionEntityType = exports.getSelectionEntityType = function getSelectionEntityType(editorState) {\n\n  var entityKey = (0, _draftjsUtils.getSelectionEntity)(editorState);\n\n  if (entityKey) {\n    var entity = editorState.getCurrentContent().getEntity(entityKey);\n    return entity ? entity.get('type') : null;\n  }\n\n  return null;\n};\n\nvar getSelectionEntityData = exports.getSelectionEntityData = function getSelectionEntityData(editorState, type) {\n\n  var entityKey = (0, _draftjsUtils.getSelectionEntity)(editorState);\n\n  if (entityKey) {\n    var entity = editorState.getCurrentContent().getEntity(entityKey);\n    if (entity && entity.get('type') === type) {\n      return entity.getData();\n    } else {\n      return {};\n    }\n  } else {\n    return {};\n  }\n};\n\nvar toggleSelectionEntity = exports.toggleSelectionEntity = function toggleSelectionEntity(editorState, entity) {\n\n  var contentState = editorState.getCurrentContent();\n  var selectionState = editorState.getSelection();\n\n  if (selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return editorState;\n  }\n\n  if (!entity || !entity.type || getSelectionEntityType(editorState) === entity.type) {\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.applyEntity(contentState, selectionState, null), 'apply-entity');\n  }\n\n  try {\n\n    var nextContentState = contentState.createEntity(entity.type, entity.mutability, entity.data);\n    var entityKey = nextContentState.getLastCreatedEntityKey();\n\n    var nextEditorState = _draftJs.EditorState.set(editorState, {\n      currentContent: nextContentState\n    });\n\n    return _draftJs.EditorState.push(nextEditorState, _draftJs.Modifier.applyEntity(nextContentState, selectionState, entityKey), 'apply-entity');\n  } catch (error) {\n    console.warn(error);\n    return editorState;\n  }\n};\n\nvar toggleSelectionLink = exports.toggleSelectionLink = function toggleSelectionLink(editorState, href, target) {\n\n  var contentState = editorState.getCurrentContent();\n  var selectionState = editorState.getSelection();\n\n  var entityData = { href: href, target: target };\n\n  if (selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return editorState;\n  }\n\n  if (href === false) {\n    return _draftJs.RichUtils.toggleLink(editorState, selectionState, null);\n  }\n\n  if (href === null) {\n    delete entityData.href;\n  }\n\n  try {\n\n    var nextContentState = contentState.createEntity('LINK', 'MUTABLE', entityData);\n    var entityKey = nextContentState.getLastCreatedEntityKey();\n\n    var nextEditorState = _draftJs.EditorState.set(editorState, {\n      currentContent: nextContentState\n    });\n\n    nextEditorState = _draftJs.RichUtils.toggleLink(nextEditorState, selectionState, entityKey);\n    nextEditorState = _draftJs.EditorState.forceSelection(nextEditorState, selectionState.merge({\n      anchorOffset: selectionState.getEndOffset(),\n      focusOffset: selectionState.getEndOffset()\n    }));\n\n    nextEditorState = _draftJs.EditorState.push(nextEditorState, _draftJs.Modifier.insertText(nextEditorState.getCurrentContent(), nextEditorState.getSelection(), ''), 'insert-text');\n\n    return nextEditorState;\n  } catch (error) {\n    console.warn(error);\n    return editorState;\n  }\n};\n\nvar getSelectionInlineStyle = exports.getSelectionInlineStyle = function getSelectionInlineStyle(editorState) {\n  return editorState.getCurrentInlineStyle();\n};\n\nvar selectionHasInlineStyle = exports.selectionHasInlineStyle = function selectionHasInlineStyle(editorState, style) {\n  return getSelectionInlineStyle(editorState).has(style.toUpperCase());\n};\n\nvar toggleSelectionInlineStyle = exports.toggleSelectionInlineStyle = function toggleSelectionInlineStyle(editorState, style) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n\n  var nextEditorState = editorState;\n  style = prefix + style.toUpperCase();\n\n  if (prefix) {\n\n    nextEditorState = updateEachCharacterOfSelection(nextEditorState, function (characterMetadata) {\n\n      return characterMetadata.toJS().style.reduce(function (characterMetadata, characterStyle) {\n        if (characterStyle.indexOf(prefix) === 0 && style !== characterStyle) {\n          return _draftJs.CharacterMetadata.removeStyle(characterMetadata, characterStyle);\n        } else {\n          return characterMetadata;\n        }\n      }, characterMetadata);\n    });\n  }\n\n  return _draftJs.RichUtils.toggleInlineStyle(nextEditorState, style);\n};\n\nvar removeSelectionInlineStyles = exports.removeSelectionInlineStyles = function removeSelectionInlineStyles(editorState) {\n\n  return updateEachCharacterOfSelection(editorState, function (characterMetadata) {\n    return characterMetadata.merge({\n      style: _immutable2.default.OrderedSet([])\n    });\n  });\n};\n\nvar toggleSelectionAlignment = exports.toggleSelectionAlignment = function toggleSelectionAlignment(editorState, alignment) {\n  return setSelectionBlockData(editorState, {\n    textAlign: getSelectionBlockData(editorState, 'textAlign') !== alignment ? alignment : undefined\n  });\n};\n\nvar toggleSelectionIndent = exports.toggleSelectionIndent = function toggleSelectionIndent(editorState, textIndent) {\n  var maxIndent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n\n  return textIndent < 0 || textIndent > maxIndent || isNaN(textIndent) ? editorState : setSelectionBlockData(editorState, {\n    textIndent: textIndent || undefined\n  });\n};\n\nvar increaseSelectionIndent = exports.increaseSelectionIndent = function increaseSelectionIndent(editorState) {\n  var maxIndent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n\n  var currentIndent = getSelectionBlockData(editorState, 'textIndent') || 0;\n  return toggleSelectionIndent(editorState, currentIndent + 1, maxIndent);\n};\n\nvar decreaseSelectionIndent = exports.decreaseSelectionIndent = function decreaseSelectionIndent(editorState) {\n  var currentIndent = getSelectionBlockData(editorState, 'textIndent') || 0;\n  return toggleSelectionIndent(editorState, currentIndent - 1);\n};\n\nvar toggleSelectionColor = exports.toggleSelectionColor = function toggleSelectionColor(editorState, color) {\n  return toggleSelectionInlineStyle(editorState, color.replace('#', ''), 'COLOR-');\n};\n\nvar toggleSelectionBackgroundColor = exports.toggleSelectionBackgroundColor = function toggleSelectionBackgroundColor(editorState, color) {\n  return toggleSelectionInlineStyle(editorState, color.replace('#', ''), 'BGCOLOR-');\n};\n\nvar toggleSelectionFontSize = exports.toggleSelectionFontSize = function toggleSelectionFontSize(editorState, fontSize) {\n  return toggleSelectionInlineStyle(editorState, fontSize, 'FONTSIZE-');\n};\n\nvar toggleSelectionLineHeight = exports.toggleSelectionLineHeight = function toggleSelectionLineHeight(editorState, lineHeight) {\n  return toggleSelectionInlineStyle(editorState, lineHeight, 'LINEHEIGHT-');\n};\n\nvar toggleSelectionFontFamily = exports.toggleSelectionFontFamily = function toggleSelectionFontFamily(editorState, fontFamily) {\n  return toggleSelectionInlineStyle(editorState, fontFamily, 'FONTFAMILY-');\n};\n\nvar toggleSelectionLetterSpacing = exports.toggleSelectionLetterSpacing = function toggleSelectionLetterSpacing(editorState, letterSpacing) {\n  return toggleSelectionInlineStyle(editorState, letterSpacing, 'LETTERSPACING-');\n};\n\nvar insertText = exports.insertText = function insertText(editorState, text, inlineStyle, entity) {\n\n  var selectionState = editorState.getSelection();\n  var currentSelectedBlockType = getSelectionBlockType(editorState);\n\n  if (currentSelectedBlockType === 'atomic') {\n    return editorState;\n  }\n\n  var entityKey = void 0;\n  var contentState = editorState.getCurrentContent();\n\n  if (entity && entity.type) {\n    contentState = contentState.createEntity(entity.type, entity.mutability || 'MUTABLE', entity.data || entityData);\n    entityKey = contentState.getLastCreatedEntityKey();\n  }\n\n  if (!selectionState.isCollapsed()) {\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.replaceText(contentState, selectionState, text, inlineStyle, entityKey), 'replace-text');\n  } else {\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.insertText(contentState, selectionState, text, inlineStyle, entityKey), 'insert-text');\n  }\n};\n\nvar insertHTML = exports.insertHTML = function insertHTML(editorState, htmlString, source) {\n\n  if (!htmlString) {\n    return editorState;\n  }\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n  var options = editorState.convertOptions || {};\n\n  try {\n    var _convertFromRaw = (0, _draftJs.convertFromRaw)((0, _braftConvert.convertHTMLToRaw)(htmlString, options, source)),\n        blockMap = _convertFromRaw.blockMap;\n\n    return _draftJs.EditorState.push(editorState, _draftJs.Modifier.replaceWithFragment(contentState, selectionState, blockMap), 'insert-fragment');\n  } catch (error) {\n    console.warn(error);\n    return editorState;\n  }\n};\n\nvar insertAtomicBlock = exports.insertAtomicBlock = function insertAtomicBlock(editorState, type) {\n  var immutable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n\n  if (selectionContainsStrictBlock(editorState)) {\n    return insertAtomicBlock(selectNextBlock(editorState, getSelectionBlock(editorState)), type, immutable, data);\n  }\n\n  var selectionState = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n\n  if (!selectionState.isCollapsed() || getSelectionBlockType(editorState) === 'atomic') {\n    return editorState;\n  }\n\n  var contentStateWithEntity = contentState.createEntity(type, immutable ? 'IMMUTABLE' : 'MUTABLE', data);\n  var entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n  var newEditorState = _draftJs.AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, ' ');\n\n  return newEditorState;\n};\n\nvar insertHorizontalLine = exports.insertHorizontalLine = function insertHorizontalLine(editorState) {\n  return insertAtomicBlock(editorState, 'HR');\n};\n\nvar insertMedias = exports.insertMedias = function insertMedias(editorState) {\n  var medias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n\n  if (!medias.length) {\n    return editorState;\n  }\n\n  return medias.reduce(function (editorState, media) {\n    var url = media.url,\n        link = media.link,\n        link_target = media.link_target,\n        name = media.name,\n        type = media.type,\n        width = media.width,\n        height = media.height,\n        meta = media.meta;\n\n    return insertAtomicBlock(editorState, type, true, { url: url, link: link, link_target: link_target, name: name, type: type, width: width, height: height, meta: meta });\n  }, editorState);\n};\n\nvar setMediaData = exports.setMediaData = function setMediaData(editorState, entityKey, data) {\n  return _draftJs.EditorState.push(editorState, editorState.getCurrentContent().mergeEntityData(entityKey, data), 'change-block-data');\n};\n\nvar removeMedia = exports.removeMedia = function removeMedia(editorState, mediaBlock) {\n  return removeBlock(editorState, mediaBlock);\n};\n\nvar setMediaPosition = exports.setMediaPosition = function setMediaPosition(editorState, mediaBlock, position) {\n\n  var newPosition = {};\n  var float = position.float,\n      alignment = position.alignment;\n\n\n  if (typeof float !== 'undefined') {\n    newPosition.float = mediaBlock.getData().get('float') === float ? null : float;\n  }\n\n  if (typeof alignment !== 'undefined') {\n    newPosition.alignment = mediaBlock.getData().get('alignment') === alignment ? null : alignment;\n  }\n\n  return setSelectionBlockData(selectBlock(editorState, mediaBlock), newPosition);\n};\n\nvar clear = exports.clear = function clear(editorState) {\n\n  var contentState = editorState.getCurrentContent();\n\n  var firstBlock = contentState.getFirstBlock();\n  var lastBlock = contentState.getLastBlock();\n\n  var allSelected = new _draftJs.SelectionState({\n    anchorKey: firstBlock.getKey(),\n    anchorOffset: 0,\n    focusKey: lastBlock.getKey(),\n    focusOffset: lastBlock.getLength(),\n    hasFocus: true\n  });\n\n  return _draftJs.RichUtils.toggleBlockType(_draftJs.EditorState.push(editorState, _draftJs.Modifier.removeRange(contentState, allSelected, 'backward'), 'remove-range'), 'unstyled');\n};\n\nvar handleKeyCommand = exports.handleKeyCommand = function handleKeyCommand(editorState, command) {\n  return _draftJs.RichUtils.handleKeyCommand(editorState, command);\n};\n\nvar undo = exports.undo = function undo(editorState) {\n  return _draftJs.EditorState.undo(editorState);\n};\n\nvar redo = exports.redo = function redo(editorState) {\n  return _draftJs.EditorState.redo(editorState);\n};"]},"metadata":{},"sourceType":"script"}