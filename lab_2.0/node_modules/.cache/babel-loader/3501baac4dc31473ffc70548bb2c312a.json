{"ast":null,"code":"import { fromJS } from \"immutable\";\nimport * as constants from \"../../../constants/actionTypes\";\nvar defaultState = fromJS({\n  studyResource: [],\n  softwareResource: [],\n  searchFlag: false,\n  allSoftwareTotal: \"\",\n  allLearningTotal: \"\",\n  mySoftwareTotal: \"\",\n  myLearningTotal: \"\",\n  searchTotal: \"\",\n  type: \"\",\n  resourceName: \"\",\n  //上传人名字\n  userName: \"\",\n  teacherData: [],\n  teacherSoftware: [],\n  registerTotal: \"\",\n  registerStudent: [],\n  teacherName: [],\n  studentTotal: \"\",\n  studentMessage: [],\n  studentId: \"\",\n  studentName: \"\",\n  page: 1,\n  time: Date.now(),\n  uploadFlag: true,\n  softwareTemp: \"\",\n  resourceTemp: \"\",\n  learningDataTemp: \"\",\n  softwareDataTemp: \"\"\n});\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //获取学习资源\n    case constants.FETCH_STUDY_RES_SUCCESS:\n      //merge：浅合并，新数据与旧数据对比，旧数据中不存在的属性直接添加，旧数据中已存在的属性用新数据中的覆盖\n      return state.merge({\n        searchFlag: false,\n        allLearningTotal: action.payload.total,\n        studyResource: action.payload.items,\n        type: action.payload.type,\n        resourceName: action.payload.resourceName,\n        userName: action.payload.userName,\n        page: action.payload.page\n      });\n    //学习资源下载次数\n\n    case constants.DOWNLOAD_RESOURCE_SUCCESS:\n      return state.set(\"learningDataTemp\", new Date());\n\n    case constants.DOWNLOAD_SOFTWARE_SUCCESS:\n      return state.set(\"softwareDataTemp\", new Date());\n    //获取软件资源\n\n    case constants.FETCH_SOFTWARE_RES_SUCCESS:\n      return state.merge({\n        storageSoftwareRes: JSON.parse(action.softwareResource),\n        storageSoftwareTotal: JSON.parse(action.softwareTotal),\n        allSoftwareTotal: action.payload.total,\n        softwareResource: action.payload.items,\n        type: action.payload.type,\n        resourceName: action.payload.resourceName,\n        userName: action.payload.userName,\n        page: action.payload.page\n      });\n    //下载软件\n\n    case constants.FETCH_LOAD_RESOURCE_SUCCESS:\n      return state.merge({\n        learningUrl: action.loadUrl\n      });\n    //搜索学习资源\n\n    case constants.FETCH_SEARCH_DATA_SUCCESS:\n      return state.merge({\n        searchFlag: true,\n        allLearningTotal: action.payload.total,\n        studyResource: action.payload.items,\n        type: action.payload.type,\n        resourceName: action.payload.resourceName,\n        userName: action.payload.userName,\n        page: action.payload.page\n      });\n    //搜索软件资源\n\n    case constants.FETCH_SEARCH_SOFTWARE_SUCCESS:\n      return state.merge({\n        searchFlag: true,\n        allSoftwareTotal: action.payload.total,\n        type: action.payload.type,\n        resourceName: action.payload.resourceName,\n        userName: action.payload.userName,\n        softwareResource: action.payload.items,\n        page: action.payload.page\n      });\n    //关于tab键的切换\n\n    case constants.CHANGE_TYPE:\n      // return state.set(\"type\", action.key === '3' ? \"material\" : \"software\");\n      return state.merge({\n        type: action.key === '3' && \"material\"\n      });\n    //获取老师学习资源\n\n    case constants.FETCH_TEACHER_DATA_SUCCESS:\n      return state.merge({\n        myLearningTotal: action.payload.total,\n        teacherData: action.payload.items\n      });\n    //获取老师软件资源\n\n    case constants.FETCH_TEACHER_SOFTWARE_SUCCESS:\n      return state.merge({\n        mySoftwareTotal: action.payload.total,\n        teacherSoftware: action.payload.items\n      });\n    //删除我的资料\n\n    case constants.DELETE_DATA_SUCCESS:\n      return state.set(\"resourceTemp\", new Date());\n    //删除我的软件\n\n    case constants.DELETE_SOFTWARE_SUCCESS:\n      return state.set(\"softwareTemp\", new Date());\n    //上传学习资源\n\n    case constants.FETCH_UPLOAD_DATA_SUCCESS:\n      return state.merge({\n        time: Date.now(),\n        uploadFlag: new Date(),\n        resourceTemp: Date.now()\n      });\n\n    case constants.NOT_UPLOAD:\n      return state.merge({\n        uploadFlag: new Date(),\n        time: new Date()\n      });\n    //上传软件资源\n\n    case constants.FETCH_UPLOAD_SOFTWARE_SUCCESS:\n      return state.merge({\n        time: Date.now(),\n        uploadFlag: new Date(),\n        softwareTemp: Date.now()\n      });\n    //     //老师查询待批准学生\n    // case constants.FETCH_QUERY_REGISTER_SUCCESS:\n    //     return state.merge({\n    //          registerTotal: action.payload.total,\n    //          registerStudent: action.payload.items,\n    //     });\n    //     //老师批准学生\n    // case constants.REGISTERED_SUCCESS:\n    //     return state.merge({\n    //         registerTotal: action.payload.total,\n    //         registerStudent: action.payload.items,\n    //     });\n    //获取全部老师姓名\n\n    case constants.HANDLE_TEACHERRES_SUCCESS:\n      return state.merge({\n        teacherName: action.payload\n      });\n    //老师搜索学生信息\n\n    case constants.FETCH_STUDENT_MESSAGE_SUCCESS:\n      return state.merge({\n        studentTotal: action.payload.total,\n        studentMessage: action.payload.items,\n        studentId: action.userId,\n        studentName: action.userName,\n        page: action.payload.page,\n        time: Date.now()\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/reducers/resource/resource.js"],"names":["fromJS","constants","defaultState","studyResource","softwareResource","searchFlag","allSoftwareTotal","allLearningTotal","mySoftwareTotal","myLearningTotal","searchTotal","type","resourceName","userName","teacherData","teacherSoftware","registerTotal","registerStudent","teacherName","studentTotal","studentMessage","studentId","studentName","page","time","Date","now","uploadFlag","softwareTemp","resourceTemp","learningDataTemp","softwareDataTemp","state","action","FETCH_STUDY_RES_SUCCESS","merge","payload","total","items","DOWNLOAD_RESOURCE_SUCCESS","set","DOWNLOAD_SOFTWARE_SUCCESS","FETCH_SOFTWARE_RES_SUCCESS","storageSoftwareRes","JSON","parse","storageSoftwareTotal","softwareTotal","FETCH_LOAD_RESOURCE_SUCCESS","learningUrl","loadUrl","FETCH_SEARCH_DATA_SUCCESS","FETCH_SEARCH_SOFTWARE_SUCCESS","CHANGE_TYPE","key","FETCH_TEACHER_DATA_SUCCESS","FETCH_TEACHER_SOFTWARE_SUCCESS","DELETE_DATA_SUCCESS","DELETE_SOFTWARE_SUCCESS","FETCH_UPLOAD_DATA_SUCCESS","NOT_UPLOAD","FETCH_UPLOAD_SOFTWARE_SUCCESS","HANDLE_TEACHERRES_SUCCESS","FETCH_STUDENT_MESSAGE_SUCCESS","userId"],"mappings":"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","sourcesContent":["import {fromJS} from \"immutable\";\r\nimport * as constants from \"../../../constants/actionTypes\"\r\n\r\nconst defaultState = fromJS({\r\n    studyResource: [],\r\n    softwareResource:[],\r\n    searchFlag: false,\r\n    allSoftwareTotal: \"\",\r\n    allLearningTotal: \"\",\r\n    mySoftwareTotal: \"\",\r\n    myLearningTotal: \"\",\r\n    searchTotal: \"\",\r\n    type: \"\",\r\n    resourceName: \"\",\r\n    //上传人名字\r\n    userName: \"\",\r\n    teacherData: [],\r\n    teacherSoftware: [],\r\n    registerTotal: \"\",\r\n    registerStudent: [],\r\n    teacherName: [],\r\n    studentTotal: \"\",\r\n    studentMessage: [],\r\n    studentId: \"\",\r\n    studentName: \"\",\r\n    page: 1,\r\n    time: Date.now(),\r\n    uploadFlag: true,\r\n    softwareTemp: \"\",\r\n    resourceTemp: \"\",\r\n    learningDataTemp: \"\",\r\n    softwareDataTemp: \"\",\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        //获取学习资源\r\n        case constants.FETCH_STUDY_RES_SUCCESS:\r\n            //merge：浅合并，新数据与旧数据对比，旧数据中不存在的属性直接添加，旧数据中已存在的属性用新数据中的覆盖\r\n            return state.merge({\r\n                searchFlag: false,\r\n                allLearningTotal: action.payload.total,\r\n                studyResource: action.payload.items,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                page: action.payload.page,\r\n            });\r\n            //学习资源下载次数\r\n        case constants.DOWNLOAD_RESOURCE_SUCCESS:\r\n            return state.set(\"learningDataTemp\", new Date());\r\n        case constants.DOWNLOAD_SOFTWARE_SUCCESS:\r\n            return state.set(\"softwareDataTemp\", new Date());\r\n            //获取软件资源\r\n        case constants.FETCH_SOFTWARE_RES_SUCCESS:\r\n            return state.merge({\r\n                storageSoftwareRes: JSON.parse(action.softwareResource),\r\n                storageSoftwareTotal: JSON.parse(action.softwareTotal),\r\n                allSoftwareTotal: action.payload.total,\r\n                softwareResource: action.payload.items,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                page: action.payload.page,\r\n            });\r\n            //下载软件\r\n        case constants.FETCH_LOAD_RESOURCE_SUCCESS:\r\n            return state.merge({\r\n                learningUrl: action.loadUrl\r\n            });\r\n            //搜索学习资源\r\n        case constants.FETCH_SEARCH_DATA_SUCCESS:\r\n            return state.merge({\r\n                searchFlag: true,\r\n                allLearningTotal: action.payload.total,\r\n                studyResource: action.payload.items,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                page: action.payload.page,\r\n            });\r\n            //搜索软件资源\r\n        case constants.FETCH_SEARCH_SOFTWARE_SUCCESS:\r\n            return state.merge({\r\n                searchFlag: true,\r\n                allSoftwareTotal: action.payload.total,\r\n                type: action.payload.type,\r\n                resourceName: action.payload.resourceName,\r\n                userName: action.payload.userName,\r\n                softwareResource: action.payload.items,\r\n                page: action.payload.page,\r\n            });\r\n            //关于tab键的切换\r\n        case constants.CHANGE_TYPE:\r\n            // return state.set(\"type\", action.key === '3' ? \"material\" : \"software\");\r\n            return state.merge({\r\n                type: action.key === '3' && \"material\"\r\n            })\r\n            //获取老师学习资源\r\n        case  constants.FETCH_TEACHER_DATA_SUCCESS:\r\n            return state.merge({\r\n                myLearningTotal: action.payload.total,\r\n                teacherData: action.payload.items,\r\n            });\r\n            //获取老师软件资源\r\n        case  constants.FETCH_TEACHER_SOFTWARE_SUCCESS:\r\n            return state.merge({\r\n                mySoftwareTotal: action.payload.total,\r\n                teacherSoftware: action.payload.items,\r\n            });\r\n            //删除我的资料\r\n        case constants.DELETE_DATA_SUCCESS:\r\n            return state.set(\"resourceTemp\", new Date());\r\n            //删除我的软件\r\n        case constants.DELETE_SOFTWARE_SUCCESS:\r\n            return state.set(\"softwareTemp\", new Date());\r\n            //上传学习资源\r\n        case constants.FETCH_UPLOAD_DATA_SUCCESS:\r\n            return state.merge({\r\n                time: Date.now(),\r\n                uploadFlag: new Date(),\r\n                resourceTemp: Date.now()\r\n            });\r\n        case constants.NOT_UPLOAD:\r\n            return state.merge({\r\n                uploadFlag: new Date(),\r\n                time: new Date(),\r\n            });\r\n            //上传软件资源\r\n        case constants.FETCH_UPLOAD_SOFTWARE_SUCCESS:\r\n            return state.merge({\r\n                time: Date.now(),\r\n                uploadFlag: new Date(),\r\n                softwareTemp: Date.now()\r\n            });\r\n        //     //老师查询待批准学生\r\n        // case constants.FETCH_QUERY_REGISTER_SUCCESS:\r\n        //     return state.merge({\r\n        //          registerTotal: action.payload.total,\r\n        //          registerStudent: action.payload.items,\r\n        //     });\r\n        //     //老师批准学生\r\n        // case constants.REGISTERED_SUCCESS:\r\n        //     return state.merge({\r\n        //         registerTotal: action.payload.total,\r\n        //         registerStudent: action.payload.items,\r\n        //     });\r\n            //获取全部老师姓名\r\n        case constants.HANDLE_TEACHERRES_SUCCESS:\r\n            return state.merge({\r\n                teacherName: action.payload\r\n            });\r\n        //老师搜索学生信息\r\n        case constants.FETCH_STUDENT_MESSAGE_SUCCESS:\r\n            return state.merge({\r\n                studentTotal: action.payload.total,\r\n                studentMessage: action.payload.items,\r\n                studentId: action.userId,\r\n                studentName: action.userName,\r\n                page: action.payload.page,\r\n                time: Date.now()\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}