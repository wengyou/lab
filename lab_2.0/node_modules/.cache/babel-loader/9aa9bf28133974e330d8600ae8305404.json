{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchSearchValue),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleSearchStudentMes),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootResourceSagas);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport Service from \"../../../lib/Service\";\nimport { FETCH_SEARCH_VALUE, FETCH_SEARCH_VALUE_SUCCESS, FETCH_SEARCH_DATA_SUCCESS, FETCH_SEARCH_SOFTWARE_SUCCESS, FETCH_STUDENT_MESSAGE, FETCH_STUDENT_MESSAGE_SUCCESS } from \"../../../constants/actionTypes\";\nimport { openNotification } from \"../../../utils/commonFunction\";\n\nfunction fetchSearchValue($data) {\n  var _$data$args, page, resourceName, userName, type, res, resData;\n\n  return _regeneratorRuntime.wrap(function fetchSearchValue$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _$data$args = $data.args, page = _$data$args.page, resourceName = _$data$args.resourceName, userName = _$data$args.userName, type = _$data$args.type;\n          _context.next = 4;\n          return call(Service.get, \"resource/queryResource?page=\".concat(page, \"&type=\").concat(type, \"&userName=\").concat(userName, \"&resourceName=\").concat(resourceName));\n\n        case 4:\n          res = _context.sent;\n          resData = Object.assign(res.data.data, {\n            type: type,\n            resourceName: resourceName,\n            userName: userName\n          });\n          _context.t0 = res.data.error_code;\n          _context.next = _context.t0 === 0 ? 9 : _context.t0 === -1 ? 20 : _context.t0 === 2 ? 22 : 24;\n          break;\n\n        case 9:\n          _context.t1 = type;\n          _context.next = _context.t1 === \"material\" ? 12 : _context.t1 === \"software\" ? 15 : 18;\n          break;\n\n        case 12:\n          _context.next = 14;\n          return put({\n            type: FETCH_SEARCH_DATA_SUCCESS,\n            payload: resData\n          });\n\n        case 14:\n          return _context.abrupt(\"break\", 19);\n\n        case 15:\n          _context.next = 17;\n          return put({\n            type: FETCH_SEARCH_SOFTWARE_SUCCESS,\n            payload: resData\n          });\n\n        case 17:\n          return _context.abrupt(\"break\", 19);\n\n        case 18:\n          return _context.abrupt(\"return\", 0);\n\n        case 19:\n          return _context.abrupt(\"break\", 25);\n\n        case 20:\n          openNotification(res.data.message);\n          return _context.abrupt(\"break\", 25);\n\n        case 22:\n          openNotification(res.data.message);\n          return _context.abrupt(\"break\", 25);\n\n        case 24:\n          return _context.abrupt(\"return\", 0);\n\n        case 25:\n          _context.next = 30;\n          break;\n\n        case 27:\n          _context.prev = 27;\n          _context.t2 = _context[\"catch\"](0);\n          console.error(_context.t2);\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 27]]);\n} //老师查询学生信息\n\n\nfunction handleSearchStudentMes(args) {\n  var _args$args, page, type, userId, userName, res;\n\n  return _regeneratorRuntime.wrap(function handleSearchStudentMes$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _args$args = args.args, page = _args$args.page, type = _args$args.type, userId = _args$args.userId, userName = _args$args.userName;\n          _context2.next = 4;\n          return call(Service.get, \"user/userInfo?page=\".concat(page, \"&type=\").concat(type, \"&userId=\").concat(userId, \"&userName=\").concat(userName));\n\n        case 4:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === 0 ? 8 : _context2.t0 === -1 ? 11 : _context2.t0 === 2 ? 13 : 15;\n          break;\n\n        case 8:\n          _context2.next = 10;\n          return put({\n            type: FETCH_STUDENT_MESSAGE_SUCCESS,\n            payload: res.data.data,\n            userId: userId,\n            userName: userName\n          });\n\n        case 10:\n          return _context2.abrupt(\"break\", 16);\n\n        case 11:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 16);\n\n        case 13:\n          openNotification(res.data.message);\n          return _context2.abrupt(\"break\", 16);\n\n        case 15:\n          return _context2.abrupt(\"return\", 0);\n\n        case 16:\n          _context2.next = 21;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t1 = _context2[\"catch\"](0);\n          console.log(_context2.t1);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 18]]);\n}\n\nexport default function rootResourceSagas() {\n  return _regeneratorRuntime.wrap(function rootResourceSagas$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(FETCH_SEARCH_VALUE, fetchSearchValue);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(FETCH_STUDENT_MESSAGE, handleSearchStudentMes);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/resourceSagas/search.js"],"names":["fetchSearchValue","handleSearchStudentMes","rootResourceSagas","takeEvery","call","put","Service","FETCH_SEARCH_VALUE","FETCH_SEARCH_VALUE_SUCCESS","FETCH_SEARCH_DATA_SUCCESS","FETCH_SEARCH_SOFTWARE_SUCCESS","FETCH_STUDENT_MESSAGE","FETCH_STUDENT_MESSAGE_SUCCESS","openNotification","$data","args","page","resourceName","userName","type","get","res","resData","Object","assign","data","error_code","payload","message","console","error","userId","log"],"mappings":"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","sourcesContent":["import { takeEvery, call, put} from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    FETCH_SEARCH_VALUE,\r\n    FETCH_SEARCH_VALUE_SUCCESS,\r\n    FETCH_SEARCH_DATA_SUCCESS,\r\n    FETCH_SEARCH_SOFTWARE_SUCCESS,\r\n    FETCH_STUDENT_MESSAGE,\r\n    FETCH_STUDENT_MESSAGE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *fetchSearchValue($data) {\r\n    try {\r\n        const { page, resourceName, userName, type} = $data.args;\r\n        const res = yield call(\r\n            Service.get,\r\n            `resource/queryResource?page=${page}&type=${type}&userName=${userName}&resourceName=${resourceName}`\r\n        );\r\n        const resData = Object.assign(res.data.data, {type,resourceName,userName});\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                switch (type) {\r\n                    case \"material\":\r\n                        yield put({\r\n                            type: FETCH_SEARCH_DATA_SUCCESS,\r\n                            payload: resData,\r\n                        });\r\n                        break;\r\n                    case \"software\":\r\n                        yield put({\r\n                            type: FETCH_SEARCH_SOFTWARE_SUCCESS,\r\n                            payload: resData,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0\r\n                }\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\n//老师查询学生信息\r\nfunction *handleSearchStudentMes(args) {\r\n    try{\r\n        const { page, type, userId, userName } = args.args;\r\n        const res = yield call(Service.get,\r\n            `user/userInfo?page=${page}&type=${type}&userId=${userId}&userName=${userName}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_STUDENT_MESSAGE_SUCCESS,\r\n                    payload: res.data.data,\r\n                    userId: userId,\r\n                    userName: userName\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield takeEvery(FETCH_SEARCH_VALUE, fetchSearchValue);\r\n    yield takeEvery(FETCH_STUDENT_MESSAGE, handleSearchStudentMes);\r\n}"]},"metadata":{},"sourceType":"module"}