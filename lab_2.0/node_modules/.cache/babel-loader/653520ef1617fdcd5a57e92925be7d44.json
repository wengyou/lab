{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import\"antd/es/message/style/css\";import _message from\"antd/es/message\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearData),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(modifyParam),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(rootClearDataSaga);import{takeEvery,put,call}from\"redux-saga/effects\";import Service from\"../../../lib/Service\";import{ADMIN_CLEAR_DATA,MODIFY_PARAM,MODIFY_PARAM_SUCCESS}from\"../../../constants/actionTypes\";import{openNotification}from\"../../../utils/commonFunction\";function clearData(){var res;return _regeneratorRuntime.wrap(function clearData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return call(Service.post,\"admin/clearData\");case 2:res=_context.sent;console.log(res);_context.t0=res.data.error_code;_context.next=_context.t0===0?7:_context.t0===-1?9:10;break;case 7:_message.success(\"清除成功~\");return _context.abrupt(\"break\",11);case 9:_message.error(\"清除失败！\");case 10:return _context.abrupt(\"return\",0);case 11:case\"end\":return _context.stop();}}},_marked);}function modifyParam(args){var res;return _regeneratorRuntime.wrap(function modifyParam$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return call(Service.post,'system/updateParameters',args.args);case 2:res=_context2.sent;console.log(res.data.data);_context2.t0=res.data.error_code;_context2.next=_context2.t0===0?7:_context2.t0===-1?11:_context2.t0===2?13:15;break;case 7:_context2.next=9;return put({type:MODIFY_PARAM_SUCCESS,payload:res.data.data});case 9:openNotification('修改成功');return _context2.abrupt(\"break\",16);case 11:openNotification(res.data.message);return _context2.abrupt(\"break\",16);case 13:openNotification(res.data.message);return _context2.abrupt(\"break\",16);case 15:return _context2.abrupt(\"return\",0);case 16:case\"end\":return _context2.stop();}}},_marked2);}export default function rootClearDataSaga(){return _regeneratorRuntime.wrap(function rootClearDataSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeEvery(ADMIN_CLEAR_DATA,clearData);case 2:_context3.next=4;return takeEvery(MODIFY_PARAM,modifyParam);case 4:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/adminSagas/dataMana.js"],"names":["clearData","modifyParam","rootClearDataSaga","takeEvery","put","call","Service","ADMIN_CLEAR_DATA","MODIFY_PARAM","MODIFY_PARAM_SUCCESS","openNotification","post","res","console","log","data","error_code","success","error","args","type","payload","message"],"mappings":"uQAUUA,S,iDAeAC,W,iDAsBeC,iB,EA/CzB,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,oBAArC,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,OACIC,gBADJ,CAEIC,YAFJ,CAGIC,oBAHJ,KAIO,gCAJP,CAMA,OAASC,gBAAT,KAAgC,+BAAhC,CAEA,QAAUV,CAAAA,SAAV,6IACgB,MAAMK,CAAAA,IAAI,CAACC,OAAO,CAACK,IAAT,mBAAV,CADhB,OACUC,GADV,eAEIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAFJ,YAGYA,GAAG,CAACG,IAAJ,CAASC,UAHrB,6BAIa,CAJb,iBAOa,CAAC,CAPd,mBAKY,SAAQC,OAAR,CAAgB,OAAhB,EALZ,0CAQY,SAAQC,KAAR,CAAc,OAAd,EARZ,wCAUmB,CAVnB,yDAeA,QAAUjB,CAAAA,WAAV,CAAsBkB,IAAtB,kJACgB,MAAMd,CAAAA,IAAI,CAACC,OAAO,CAACK,IAAT,CAAe,yBAAf,CAA0CQ,IAAI,CAACA,IAA/C,CAAV,CADhB,OACUP,GADV,gBAEIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAArB,EAFJ,aAGYH,GAAG,CAACG,IAAJ,CAASC,UAHrB,+BAIa,CAJb,kBAWa,CAAC,CAXd,mBAca,CAdb,qCAKY,MAAMZ,CAAAA,GAAG,CAAC,CACNgB,IAAI,CAAEX,oBADA,CAENY,OAAO,CAAET,GAAG,CAACG,IAAJ,CAASA,IAFZ,CAAD,CAAT,CALZ,OASYL,gBAAgB,CAAC,MAAD,CAAhB,CATZ,4CAYYA,gBAAgB,CAACE,GAAG,CAACG,IAAJ,CAASO,OAAV,CAAhB,CAZZ,4CAeYZ,gBAAgB,CAACE,GAAG,CAACG,IAAJ,CAASO,OAAV,CAAhB,CAfZ,6EAkBmB,CAlBnB,2DAsBA,cAAe,SAAUpB,CAAAA,iBAAV,iJACX,MAAMC,CAAAA,SAAS,CAACI,gBAAD,CAAmBP,SAAnB,CAAf,CADW,wBAEX,MAAMG,CAAAA,SAAS,CAACK,YAAD,CAAeP,WAAf,CAAf,CAFW","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    ADMIN_CLEAR_DATA,\r\n    MODIFY_PARAM,\r\n    MODIFY_PARAM_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {message} from \"antd\";\r\nimport { openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *clearData() {\r\n    const res = yield call(Service.post, `admin/clearData`);\r\n    console.log(res)\r\n    switch (res.data.error_code) {\r\n        case 0 :\r\n            message.success(\"清除成功~\");\r\n            break;\r\n        case -1:\r\n            message.error(\"清除失败！\");\r\n        default:\r\n            return 0;\r\n    }\r\n\r\n}\r\n\r\nfunction *modifyParam(args) {\r\n    const res = yield call(Service.post, 'system/updateParameters', args.args);\r\n    console.log(res.data.data)\r\n    switch (res.data.error_code) {\r\n        case 0:\r\n            yield put({\r\n                type: MODIFY_PARAM_SUCCESS,\r\n                payload: res.data.data\r\n            });\r\n            openNotification('修改成功');\r\n            break;\r\n        case -1:\r\n            openNotification(res.data.message);\r\n            break;\r\n        case 2:\r\n            openNotification(res.data.message);\r\n            break;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport default function* rootClearDataSaga() {\r\n    yield takeEvery(ADMIN_CLEAR_DATA, clearData);\r\n    yield takeEvery(MODIFY_PARAM, modifyParam);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}