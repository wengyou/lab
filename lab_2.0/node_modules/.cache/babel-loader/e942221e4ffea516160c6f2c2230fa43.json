{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchSearchValue),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handleSearchStudentMes),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(rootResourceSagas);import{takeEvery,call,put}from\"redux-saga/effects\";import Service from\"../../../lib/Service\";import{FETCH_SEARCH_VALUE,FETCH_SEARCH_DATA_SUCCESS,FETCH_SEARCH_SOFTWARE_SUCCESS,FETCH_STUDENT_MESSAGE,FETCH_STUDENT_MESSAGE_SUCCESS}from\"../../../constants/actionTypes\";import{openNotification}from\"../../../utils/commonFunction\";function fetchSearchValue($data){var _$data$args,page,resourceName,userName,type,res,resData;return _regeneratorRuntime.wrap(function fetchSearchValue$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_$data$args=$data.args,page=_$data$args.page,resourceName=_$data$args.resourceName,userName=_$data$args.userName,type=_$data$args.type;_context.next=4;return call(Service.get,\"resource/queryResource?page=\".concat(page,\"&type=\").concat(type,\"&userName=\").concat(userName,\"&resourceName=\").concat(resourceName));case 4:res=_context.sent;resData=Object.assign(res.data.data,{type:type,resourceName:resourceName,userName:userName});_context.t0=res.data.error_code;_context.next=_context.t0===0?9:_context.t0===-1?20:_context.t0===2?22:24;break;case 9:_context.t1=type;_context.next=_context.t1===\"material\"?12:_context.t1===\"software\"?15:18;break;case 12:_context.next=14;return put({type:FETCH_SEARCH_DATA_SUCCESS,payload:resData});case 14:return _context.abrupt(\"break\",19);case 15:_context.next=17;return put({type:FETCH_SEARCH_SOFTWARE_SUCCESS,payload:resData});case 17:return _context.abrupt(\"break\",19);case 18:return _context.abrupt(\"return\",0);case 19:return _context.abrupt(\"break\",25);case 20:openNotification(res.data.message);return _context.abrupt(\"break\",25);case 22:openNotification(res.data.message);return _context.abrupt(\"break\",25);case 24:return _context.abrupt(\"return\",0);case 25:_context.next=30;break;case 27:_context.prev=27;_context.t2=_context[\"catch\"](0);console.error(_context.t2);case 30:case\"end\":return _context.stop();}}},_marked,null,[[0,27]]);}//老师查询学生信息\nfunction handleSearchStudentMes(args){var _args$args,page,type,userId,userName,res;return _regeneratorRuntime.wrap(function handleSearchStudentMes$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_args$args=args.args,page=_args$args.page,type=_args$args.type,userId=_args$args.userId,userName=_args$args.userName;_context2.next=4;return call(Service.get,\"user/userInfo?page=\".concat(page,\"&type=\").concat(type,\"&userId=\").concat(userId,\"&userName=\").concat(userName));case 4:res=_context2.sent;_context2.t0=res.data.error_code;_context2.next=_context2.t0===0?8:_context2.t0===-1?11:_context2.t0===2?13:15;break;case 8:_context2.next=10;return put({type:FETCH_STUDENT_MESSAGE_SUCCESS,payload:res.data.data,userId:userId,userName:userName});case 10:return _context2.abrupt(\"break\",16);case 11:openNotification(res.data.message);return _context2.abrupt(\"break\",16);case 13:openNotification(res.data.message);return _context2.abrupt(\"break\",16);case 15:return _context2.abrupt(\"return\",0);case 16:_context2.next=21;break;case 18:_context2.prev=18;_context2.t1=_context2[\"catch\"](0);console.log(_context2.t1);case 21:case\"end\":return _context2.stop();}}},_marked2,null,[[0,18]]);}export default function rootResourceSagas(){return _regeneratorRuntime.wrap(function rootResourceSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeEvery(FETCH_SEARCH_VALUE,fetchSearchValue);case 2:_context3.next=4;return takeEvery(FETCH_STUDENT_MESSAGE,handleSearchStudentMes);case 4:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/resourceSagas/search.js"],"names":["fetchSearchValue","handleSearchStudentMes","rootResourceSagas","takeEvery","call","put","Service","FETCH_SEARCH_VALUE","FETCH_SEARCH_DATA_SUCCESS","FETCH_SEARCH_SOFTWARE_SUCCESS","FETCH_STUDENT_MESSAGE","FETCH_STUDENT_MESSAGE_SUCCESS","openNotification","$data","args","page","resourceName","userName","type","get","res","resData","Object","assign","data","error_code","payload","message","console","error","userId","log"],"mappings":"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","sourcesContent":["import { takeEvery, call, put} from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    FETCH_SEARCH_VALUE,\r\n    FETCH_SEARCH_DATA_SUCCESS,\r\n    FETCH_SEARCH_SOFTWARE_SUCCESS,\r\n    FETCH_STUDENT_MESSAGE,\r\n    FETCH_STUDENT_MESSAGE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport {openNotification} from \"../../../utils/commonFunction\";\r\n\r\nfunction *fetchSearchValue($data) {\r\n    try {\r\n        const { page, resourceName, userName, type} = $data.args;\r\n        const res = yield call(\r\n            Service.get,\r\n            `resource/queryResource?page=${page}&type=${type}&userName=${userName}&resourceName=${resourceName}`\r\n        );\r\n        const resData = Object.assign(res.data.data, {type,resourceName,userName});\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                switch (type) {\r\n                    case \"material\":\r\n                        yield put({\r\n                            type: FETCH_SEARCH_DATA_SUCCESS,\r\n                            payload: resData,\r\n                        });\r\n                        break;\r\n                    case \"software\":\r\n                        yield put({\r\n                            type: FETCH_SEARCH_SOFTWARE_SUCCESS,\r\n                            payload: resData,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0\r\n                }\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\n//老师查询学生信息\r\nfunction *handleSearchStudentMes(args) {\r\n    try{\r\n        const { page, type, userId, userName } = args.args;\r\n        const res = yield call(Service.get,\r\n            `user/userInfo?page=${page}&type=${type}&userId=${userId}&userName=${userName}`);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: FETCH_STUDENT_MESSAGE_SUCCESS,\r\n                    payload: res.data.data,\r\n                    userId: userId,\r\n                    userName: userName\r\n                });\r\n                break;\r\n            case -1:\r\n                openNotification(res.data.message);\r\n                break;\r\n            case 2:\r\n                openNotification(res.data.message);\r\n                break;\r\n            default:\r\n                return 0\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport default function *rootResourceSagas() {\r\n    yield takeEvery(FETCH_SEARCH_VALUE, fetchSearchValue);\r\n    yield takeEvery(FETCH_STUDENT_MESSAGE, handleSearchStudentMes);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}