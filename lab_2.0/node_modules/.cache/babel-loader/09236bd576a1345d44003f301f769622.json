{"ast":null,"code":"import \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/alert/style/css\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport _toConsumableArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport _slicedToArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\src\\\\components\\\\StudentTasks.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as course from \"../redux/actionCreators/resource\";\nvar confirm = _Modal.confirm; //学生的\"我的任务\"\n\nvar StudentTasks = function StudentTasks(props) {\n  var type = props.type,\n      userId = props.userId,\n      courseTask = props.courseTask,\n      myCourse = props.myCourse,\n      checkList = props.checkList,\n      studentUploadFlag = props.studentUploadFlag,\n      param = props.param,\n      handleMyCourseRes = props.handleMyCourseRes,\n      handleFetchTaskRes = props.handleFetchTaskRes,\n      handleStudentDeleteCourse = props.handleStudentDeleteCourse,\n      handleStudentUploadWork = props.handleStudentUploadWork,\n      handleStudentQuerySubmit = props.handleStudentQuerySubmit,\n      handleStudentDeleteHomework = props.handleStudentDeleteHomework;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uploadVisible = _useState2[0],\n      setUploadVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checkWorkVisible = _useState4[0],\n      setCheckWorkVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      studentCourseId = _useState6[0],\n      setStudentCourseId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      taskId = _useState8[0],\n      setTaskId = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fileList = _useState10[0],\n      setFileList = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      uploadLoading = _useState12[0],\n      setUploadLoading = _useState12[1];\n\n  useEffect(function () {\n    handleMyCourseRes({\n      userId: userId,\n      type: type\n    });\n  }, []);\n  useEffect(function () {\n    setUploadVisible(false);\n    setUploadLoading(false);\n  }, [studentUploadFlag]); //学生删除课程/任务提示框\n\n  var deleteConfirm = function deleteConfirm(e, action) {\n    confirm({\n      title: \"请确认~\",\n      content: \"删除后不可恢复，确认删除吗？\",\n      onOk: function onOk() {\n        action === \"deleteCourse\" ? handleStudentDeleteCourse({\n          studentCourseId: e.studentCourseId,\n          userId: userId,\n          teacherCourseId: e.teacherCourseId\n        }) : handleStudentDeleteHomework({\n          userId: userId,\n          workId: e.id\n        });\n      },\n      onCancel: function onCancel() {}\n    });\n  }; //学生上传作业\n\n\n  var studentUploadWork = function studentUploadWork() {\n    if (fileList.length === 0) {\n      _message.error(\"请选择文件！\");\n\n      setUploadLoading(false);\n    } else {\n      handleStudentUploadWork({\n        studentCourseId: studentCourseId,\n        taskId: taskId,\n        userId: userId,\n        file: fileList\n      });\n      setFileList([]);\n    }\n  }; //点击那个加号展开实验任务详情\n\n\n  var _expandedRowRender = function expandedRowRender(record) {\n    var columns = [{\n      title: '实验任务',\n      dataIndex: 'taskName',\n      key: 'taskName'\n    }, {\n      title: '任务附件',\n      key: 'taskFileName',\n      align: 'center',\n      render: function render(e) {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          download: \"\",\n          href: e.url,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, e.taskFileName);\n      }\n    }, {\n      title: '发布时间',\n      dataIndex: 'addTime',\n      align: 'center',\n      key: 'addTime'\n    }, {\n      title: '作业处理',\n      key: \"handleHomework\",\n      align: \"center\",\n      render: function render(e) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"#189EFF\",\n            cursor: \"pointer\",\n            padding: \"0 0.375rem\"\n          },\n          onClick: function onClick() {\n            e.closed ? _Modal.error({\n              title: 'Attention!',\n              content: '老师已关闭该任务作业的上传'\n            }) : setUploadVisible(!uploadVisible);\n            setStudentCourseId(record.studentCourseId);\n            setTaskId(e.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }\n        }, \"\\u4E0A\\u4F20\\u4F5C\\u4E1A\"), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"#189EFF\",\n            cursor: \"pointer\",\n            padding: \"0 0.375rem\"\n          },\n          onClick: function onClick() {\n            setCheckWorkVisible(!checkWorkVisible);\n            handleStudentQuerySubmit({\n              taskId: e.id,\n              userId: userId\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, \"\\u67E5\\u770B\\u4F5C\\u4E1A\"));\n      }\n    }];\n    var el = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Table, {\n      size: 'small',\n      rowKey: function rowKey(record) {\n        return record.id;\n      },\n      columns: columns,\n      dataSource: courseTask[record.teacherCourseId],\n      pagination: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n    return el;\n  }; //主列表\n\n\n  var columns = [{\n    title: '实验课程',\n    dataIndex: 'courseName',\n    key: 'courseName'\n  }, {\n    title: '教学班备注',\n    dataIndex: 'remark',\n    align: 'center',\n    key: 'remark'\n  }, {\n    title: '课程编号',\n    dataIndex: 'teacherCourseId',\n    align: 'center',\n    key: 'teacherCourseId'\n  }, {\n    title: '实验教师',\n    dataIndex: 'teacherName',\n    align: 'center',\n    key: 'teacherName'\n  }, {\n    title: '选课时间',\n    dataIndex: 'addTime',\n    align: 'center',\n    key: 'addTime'\n  }, {\n    title: '课程处理',\n    align: 'center',\n    render: function render(e) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onClick: function onClick() {\n          return deleteConfirm(e, \"deleteCourse\");\n        },\n        style: {\n          color: \"#B30000\",\n          cursor: \"pointer\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"\\u5220\\u9664\\u4EFB\\u52A1\");\n    }\n  }];\n  var uploadProps = {\n    beforeUpload: function beforeUpload(file) {\n      fileList.push(file);\n      return false;\n    },\n    onRemove: function onRemove(file) {\n      var index = fileList.indexOf(file.originFileObj);\n      fileList.splice(index, 1);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    rowKey: function rowKey(record) {\n      return record.teacherCourseId;\n    },\n    size: 'small',\n    columns: columns,\n    expandedRowRender: function expandedRowRender(record) {\n      return _expandedRowRender(record);\n    },\n    onExpand: function onExpand(expanded, record) {\n      expanded && handleFetchTaskRes({\n        teacherCourseId: record.teacherCourseId,\n        courseTask: courseTask\n      });\n    },\n    dataSource: _toConsumableArray(myCourse),\n    pagination: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(_Modal, {\n    title: \"上传作业\",\n    visible: uploadVisible,\n    footer: /*#__PURE__*/React.createElement(_Button, {\n      loading: uploadLoading,\n      type: \"primary\",\n      onClick: function onClick() {\n        studentUploadWork();\n        setUploadLoading(!uploadLoading);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"\\u4E0A\\u4F20\\u6587\\u4EF6\"),\n    destroyOnClose: true,\n    onCancel: function onCancel() {\n      setUploadVisible(!uploadVisible);\n      setUploadLoading(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Alert, {\n    type: \"info\",\n    showIcon: true,\n    message: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, \"\\u53EA\\u80FD\\u4E0A\\u4F20\\u5927\\u5C0F\\u4E0D\\u8D85\\u8FC7\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fontC_red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 47\n      }\n    }, Array.isArray(param) && param[4].keyValue + 'M'), \"\\u7684\\u6587\\u4EF6\\uFF0C\\u4E14\\u540C\\u540D\\u6587\\u4EF6\\u5C06\\u4F1A\\u8986\\u76D6\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, \"\\u53EF\\u4EE5\\u62D6\\u52A8\\u9F20\\u6807\\u6216\\u8005\\u6309\\u4F4Fctrl\\u952E\\u9009\\u62E9\\u591A\\u4E2A\\u6587\\u4EF6\\u4E0A\\u4F20\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padding_column_xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, Object.assign({}, uploadProps, {\n    multiple: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"\\u9009\\u62E9\\u6587\\u4EF6\"))))), /*#__PURE__*/React.createElement(_Modal, {\n    title: \"查看作业\",\n    visible: checkWorkVisible,\n    footer: null,\n    onCancel: function onCancel() {\n      setCheckWorkVisible(!checkWorkVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    rowKey: function rowKey(e) {\n      return e.id;\n    },\n    pagination: false,\n    scroll: {\n      y: \"17.5rem\"\n    },\n    size: \"small\",\n    dataSource: _toConsumableArray(checkList),\n    columns: [{\n      title: \"作业名称\",\n      dataIndex: \"workName\",\n      key: \"workName\",\n      width: \"55%\"\n    }, {\n      title: \"上传时间\",\n      dataIndex: \"addTime\",\n      align: 'center',\n      key: \"addTime\"\n    }, {\n      title: \"作业操作\",\n      key: \"handleWork\",\n      align: 'center',\n      render: function render(e) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n          download: \"\",\n          href: e.url,\n          style: {\n            color: \"#189EFF\",\n            cursor: \"pointer\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 41\n          }\n        }, \"\\u4E0B\\u8F7D\"), /*#__PURE__*/React.createElement(\"span\", {\n          onClick: function onClick() {\n            return deleteConfirm(e, \"deleteHomework\");\n          },\n          style: {\n            color: \"#B30000\",\n            cursor: \"pointer\",\n            padding: \"0 0.375rem\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 41\n          }\n        }, \"\\u5220\\u9664\"));\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fontS_12 padding_column_xxs fontC_red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"\\u8BF7\\u6CE8\\u610F\\uFF01\\u4E0A\\u4F20\\u7684\\u4F5C\\u4E1A\\u5C06\\u4E8E\\u6BCF\\u5E748\\u67081\\u65E5\\u6E05\\u7A7A\\uFF0C\\u8BF7\\u53CA\\u65F6\\u5907\\u4EFD\"))));\n};\n\nexport default connect(function (state) {\n  return {\n    userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\n    type: state.getIn([\"userMana\", \"common\", \"type\"]),\n    myCourse: state.getIn([\"course\", \"myCourse\"]),\n    courseTask: state.getIn([\"course\", \"courseTask\"]),\n    checkList: state.getIn([\"course\", \"checkList\"]),\n    studentUploadFlag: state.getIn([\"course\", \"studentUploadFlag\"]),\n    param: state.getIn([\"userMana\", \"common\", \"param\"])\n  };\n}, function (dispatch) {\n  return {\n    handleMyCourseRes: function handleMyCourseRes(args) {\n      dispatch(course.queryMyCourse(args));\n    },\n    handleFetchTaskRes: function handleFetchTaskRes(teacherCourseId, courseTask) {\n      dispatch(course.fetchCourseTask(teacherCourseId, courseTask));\n    },\n    handleStudentDeleteCourse: function handleStudentDeleteCourse(args) {\n      dispatch(course.studentDeleteCourse(args));\n    },\n    handleStudentQuerySubmit: function handleStudentQuerySubmit(args) {\n      dispatch(course.studentQuerySubmit(args));\n    },\n    handleStudentUploadWork: function handleStudentUploadWork(args) {\n      dispatch(course.studentUploadHomework(args));\n    },\n    handleStudentDeleteHomework: function handleStudentDeleteHomework(args) {\n      dispatch(course.studentDeleteHomework(args));\n    }\n  };\n})(StudentTasks);","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/components/StudentTasks.js"],"names":["React","useEffect","useState","connect","course","confirm","StudentTasks","props","type","userId","courseTask","myCourse","checkList","studentUploadFlag","param","handleMyCourseRes","handleFetchTaskRes","handleStudentDeleteCourse","handleStudentUploadWork","handleStudentQuerySubmit","handleStudentDeleteHomework","uploadVisible","setUploadVisible","checkWorkVisible","setCheckWorkVisible","studentCourseId","setStudentCourseId","taskId","setTaskId","fileList","setFileList","uploadLoading","setUploadLoading","deleteConfirm","e","action","title","content","onOk","teacherCourseId","workId","id","onCancel","studentUploadWork","length","error","file","expandedRowRender","record","columns","dataIndex","key","align","render","url","taskFileName","color","cursor","padding","closed","el","uploadProps","beforeUpload","push","onRemove","index","indexOf","originFileObj","splice","expanded","Array","isArray","keyValue","y","width","state","getIn","dispatch","args","queryMyCourse","fetchCourseTask","studentDeleteCourse","studentQuerySubmit","studentUploadHomework","studentDeleteHomework"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Modal, Button, Upload, message, Alert } from \"antd\";\r\nimport * as course from \"../redux/actionCreators/resource\";\r\nconst { confirm } = Modal;\r\n\r\n//学生的\"我的任务\"\r\nconst StudentTasks = props => {\r\n    const {\r\n        type, userId, courseTask, myCourse,checkList, studentUploadFlag,param,\r\n        handleMyCourseRes, handleFetchTaskRes, handleStudentDeleteCourse,\r\n        handleStudentUploadWork, handleStudentQuerySubmit, handleStudentDeleteHomework\r\n    } = props;\r\n    const [uploadVisible, setUploadVisible] = useState(false);\r\n    const [checkWorkVisible, setCheckWorkVisible] = useState(false);\r\n    const [studentCourseId, setStudentCourseId] = useState(\"\");\r\n    const [taskId, setTaskId] = useState(\"\");\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploadLoading, setUploadLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        handleMyCourseRes({ userId: userId, type:type })\r\n    },[]);\r\n    useEffect(()=>{\r\n        setUploadVisible(false);\r\n        setUploadLoading(false)\r\n    },[studentUploadFlag]);\r\n    //学生删除课程/任务提示框\r\n    const deleteConfirm = (e, action) => {\r\n        confirm({\r\n            title: \"请确认~\",\r\n            content: \"删除后不可恢复，确认删除吗？\",\r\n            onOk() {\r\n                action === \"deleteCourse\" ?\r\n                    handleStudentDeleteCourse({\r\n                        studentCourseId: e.studentCourseId,\r\n                        userId: userId,\r\n                        teacherCourseId: e.teacherCourseId\r\n                    })\r\n                    :\r\n                    handleStudentDeleteHomework({\r\n                        userId: userId,\r\n                        workId: e.id,\r\n                    });\r\n                },\r\n            onCancel() {}\r\n        })\r\n    };\r\n    //学生上传作业\r\n    const studentUploadWork = () => {\r\n            if (fileList.length === 0) {\r\n                message.error(\"请选择文件！\");\r\n                setUploadLoading(false)\r\n            } else {\r\n                handleStudentUploadWork({\r\n                    studentCourseId: studentCourseId,\r\n                    taskId: taskId,\r\n                    userId: userId,\r\n                    file: fileList,\r\n                });\r\n                setFileList([])\r\n            }\r\n        }\r\n    //点击那个加号展开实验任务详情\r\n    const expandedRowRender = record => {\r\n        const columns = [\r\n            { title: '实验任务', dataIndex: 'taskName', key: 'taskName' },\r\n            {\r\n                title: '任务附件',\r\n                key: 'taskFileName',\r\n                align: 'center',\r\n                render: e => (\r\n                    <a download={\"\"} href = {e.url}>{e.taskFileName}</a>\r\n                )\r\n            },\r\n            { title: '发布时间', dataIndex: 'addTime', align: 'center', key: 'addTime' },\r\n            {\r\n                title: '作业处理',\r\n                key: \"handleHomework\",\r\n                align: \"center\",\r\n                render: e => (\r\n                    <div>\r\n                        <span\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                            onClick={\r\n                                    () => {\r\n                                        e.closed ?\r\n                                            Modal.error({\r\n                                                title: 'Attention!',\r\n                                                content: '老师已关闭该任务作业的上传',\r\n                                            }):\r\n                                    setUploadVisible(!uploadVisible);\r\n                                    setStudentCourseId(record.studentCourseId);\r\n                                    setTaskId(e.id);\r\n                                }\r\n                            }\r\n\r\n                        >\r\n                            上传作业\r\n                        </span>\r\n                        <span\r\n                            style={{color: \"#189EFF\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                            onClick={() => {\r\n                                setCheckWorkVisible(!checkWorkVisible);\r\n                                handleStudentQuerySubmit({\r\n                                    taskId: e.id,\r\n                                    userId: userId,\r\n                                })\r\n                            }}\r\n                        >\r\n                            查看作业\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        const el = (\r\n            <>\r\n                <Table\r\n                    size={'small'}\r\n                    rowKey={(record)=>(record.id)}\r\n                    columns={columns}\r\n                    dataSource={courseTask[record.teacherCourseId]}\r\n                    pagination={false}\r\n                />\r\n            </>\r\n        );\r\n        return el;\r\n    };\r\n    //主列表\r\n    const columns = [\r\n        { title: '实验课程', dataIndex: 'courseName', key: 'courseName' },\r\n        { title: '教学班备注', dataIndex: 'remark', align: 'center', key: 'remark' },\r\n        { title: '课程编号', dataIndex: 'teacherCourseId', align: 'center', key: 'teacherCourseId' },\r\n        { title: '实验教师', dataIndex: 'teacherName', align: 'center', key: 'teacherName' },\r\n        { title: '选课时间', dataIndex: 'addTime', align: 'center', key: 'addTime' },\r\n        {\r\n            title: '课程处理',\r\n            align: 'center',\r\n            render: (e)=>(\r\n                <span\r\n                    onClick={()=>deleteConfirm(e, \"deleteCourse\")}\r\n                    style={{color: \"#B30000\", cursor: \"pointer\"}}\r\n                >\r\n                    删除任务\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n\r\n    const uploadProps = {\r\n                beforeUpload:\r\n                    file => {\r\n                        fileList.push(file);\r\n                        return false\r\n                    },\r\n                onRemove:\r\n                    file=>{\r\n                        const index = fileList.indexOf(file.originFileObj);\r\n                        fileList.splice(index, 1);\r\n                    }\r\n            };\r\n\r\n    return (\r\n            <div>\r\n                <Table\r\n                    rowKey={record => record.teacherCourseId}\r\n                    size={'small'}\r\n                    columns={columns}\r\n                    expandedRowRender={(record)=>expandedRowRender(record)}\r\n                    onExpand = {\r\n                        (expanded,record)=>{\r\n                            expanded && handleFetchTaskRes({teacherCourseId: record.teacherCourseId, courseTask});\r\n                        }\r\n                    }\r\n                    dataSource={[...myCourse]}\r\n                    pagination={false}\r\n                />\r\n                <Modal\r\n                    title = {\"上传作业\"}\r\n                    visible = {uploadVisible}\r\n                    footer={\r\n                        <Button\r\n                            loading={uploadLoading}\r\n                            type = \"primary\"\r\n                            onClick={()=>{\r\n                                studentUploadWork();\r\n                                setUploadLoading(!uploadLoading)\r\n                            }}\r\n                        >\r\n                            上传文件\r\n                        </Button>\r\n                    }\r\n                    destroyOnClose = {true}\r\n                    onCancel={() => {\r\n                        setUploadVisible(!uploadVisible);\r\n                        setUploadLoading(false);\r\n\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Alert type='info' showIcon message={\r\n                            <div>\r\n                                <div>只能上传大小不超过<span className=\"fontC_red\">{Array.isArray(param) && param[4].keyValue + 'M'}</span>的文件，且同名文件将会覆盖</div>\r\n                                <div>可以拖动鼠标或者按住ctrl键选择多个文件上传</div>\r\n                            </div>\r\n                        } />\r\n                        <div className='padding_column_xs'>\r\n                            <Upload\r\n                            {...uploadProps}\r\n                            multiple = {true}\r\n                        >\r\n                            <Button>选择文件</Button>\r\n                        </Upload>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    title = {\"查看作业\"}\r\n                    visible = {checkWorkVisible}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        setCheckWorkVisible(!checkWorkVisible)\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Table\r\n                        rowKey={e=> (e.id)}\r\n                        pagination={false}\r\n                        scroll={{y: \"17.5rem\"}}\r\n                        size = \"small\"\r\n                        dataSource={[...checkList]}\r\n                        columns={[\r\n                            {title: \"作业名称\", dataIndex: \"workName\", key: \"workName\", width: \"55%\"},\r\n                            {title: \"上传时间\", dataIndex: \"addTime\", align: 'center', key: \"addTime\",},\r\n                            {\r\n                                title: \"作业操作\",\r\n                                key: \"handleWork\",\r\n                                align: 'center',\r\n                                render: (e) => (\r\n                                    <>\r\n                                        <a\r\n                                            download={\"\"}\r\n                                            href={e.url}\r\n                                            style={{color: \"#189EFF\", cursor: \"pointer\"}}\r\n                                        >\r\n                                            下载\r\n                                        </a>\r\n                                        <span\r\n                                            onClick={() => deleteConfirm(e, \"deleteHomework\")}\r\n                                            style={{color: \"#B30000\", cursor: \"pointer\", padding: \"0 0.375rem\"}}\r\n                                        >\r\n                                            删除\r\n                                        </span>\r\n                                    </>\r\n                                )\r\n                            },\r\n                        ]}\r\n                    />\r\n                        <div className=\"fontS_12 padding_column_xxs fontC_red\" >请注意！上传的作业将于每年8月1日清空，请及时备份</div>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </div>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n        type: state.getIn([\"userMana\", \"common\", \"type\"]),\r\n        myCourse: state.getIn([\"course\", \"myCourse\"]),\r\n        courseTask: state.getIn([\"course\", \"courseTask\"]),\r\n        checkList: state.getIn([\"course\", \"checkList\"]),\r\n        studentUploadFlag: state.getIn([\"course\", \"studentUploadFlag\"]),\r\n        param: state.getIn([\"userMana\", \"common\", \"param\"])\r\n    }),\r\n    dispatch => ({\r\n        handleMyCourseRes(args){\r\n            dispatch(course.queryMyCourse(args));\r\n        },\r\n        handleFetchTaskRes(teacherCourseId,courseTask){\r\n            dispatch(course.fetchCourseTask(teacherCourseId, courseTask));\r\n        },\r\n        handleStudentDeleteCourse(args){\r\n            dispatch(course.studentDeleteCourse(args))\r\n        },\r\n        handleStudentQuerySubmit(args){\r\n            dispatch(course.studentQuerySubmit(args))\r\n        },\r\n        handleStudentUploadWork(args){\r\n            dispatch(course.studentUploadHomework(args))\r\n        },\r\n        handleStudentDeleteHomework(args){\r\n            dispatch(course.studentDeleteHomework(args))\r\n        }\r\n\r\n    })\r\n)(StudentTasks);\r\n"]},"metadata":{},"sourceType":"module"}