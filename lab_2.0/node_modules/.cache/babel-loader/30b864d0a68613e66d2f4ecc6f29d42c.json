{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(studentAddCourse),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(teacherAddStudent),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(teacherAddCourse),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(studentDeleteCourse),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(teacherDeleteCourse),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(teacherAddRemark),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(teacherReleaseTask),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(teacherCheckStudent),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(teacherDeleteStudent),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(rootStudentAddCourse);\n\n//一系列课程处理操作，老师学生添加，删除课程，老师添加课程备注\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport Service from \"../../../lib/Service\";\nimport { TEACHER_ADD_COURSE, STUDENT_ADD_COURSE, TEACHER_DELETE_COURSE, STUDENT_DELETE_COURSE, TEACHER_ADD_REMARK, TEACHER_RELEASE_TASKS, STUDENT_DELETE_COURSE_SUCCESS, STUDENT_ADD_COURSE_SUCCESS, TEACHER_DELETE_COURSE_SUCCESS, TEACHER_ADD_REMARK_SUCCESS, QUERY_MY_COURSE_SUCCESS, TEACHER_RELEASE_TASKS_SUCCESS, TEACHER_ADD_COURSE_SUCCESS, TEACHER_RELEASE_TASKS_FAILED, TEACHER_CHECK_STUDENT, TEACHER_CHECK_STUDENT_SUCCESS, TEACHER_DELETE_STUDENT_SUCCESS, TEACHER_DELETE_STUDENT, TEACHER_ADD_STUDENT, TEACHER_ADD_STUDENT_SUCCESS } from \"../../../constants/actionTypes\";\n\n//学生添加课程\nfunction studentAddCourse(args) {\n  var _args$args, teacherCourseId, userId, type, data, res, updateUrl, updateRes;\n\n  return _regeneratorRuntime.wrap(function studentAddCourse$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _args$args = args.args, teacherCourseId = _args$args.teacherCourseId, userId = _args$args.userId, type = _args$args.type;\n          data = {\n            teacherCourseId: teacherCourseId,\n            userId: userId\n          };\n          _context.next = 5;\n          return call(Service.post, \"student/addCourse\", data);\n\n        case 5:\n          res = _context.sent;\n          _context.t0 = res.data.error_code;\n          _context.next = _context.t0 === 0 ? 9 : _context.t0 === -1 ? 24 : 26;\n          break;\n\n        case 9:\n          _message.success(\"添加成功~\");\n\n          updateUrl = \"course/queryMyCourse?userId=\".concat(userId, \"&type=\").concat(type);\n          _context.next = 13;\n          return call(Service.get, updateUrl);\n\n        case 13:\n          updateRes = _context.sent;\n          _context.t1 = updateRes.data.error_code;\n          _context.next = _context.t1 === 0 ? 17 : 22;\n          break;\n\n        case 17:\n          _context.next = 19;\n          return put({\n            type: STUDENT_ADD_COURSE_SUCCESS,\n            payload: teacherCourseId\n          });\n\n        case 19:\n          _context.next = 21;\n          return put({\n            type: QUERY_MY_COURSE_SUCCESS,\n            payload: updateRes.data.data\n          });\n\n        case 21:\n          return _context.abrupt(\"break\", 23);\n\n        case 22:\n          return _context.abrupt(\"return\", 0);\n\n        case 23:\n          return _context.abrupt(\"break\", 26);\n\n        case 24:\n          _message.error(\"请勿重复添加！\");\n\n          return _context.abrupt(\"break\", 26);\n\n        case 26:\n          _context.next = 30;\n          break;\n\n        case 28:\n          _context.prev = 28;\n          _context.t2 = _context[\"catch\"](0);\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 28]]);\n} //老师为学生添加课程\n\n\nfunction teacherAddStudent(args) {\n  var _args$args2, teacherCourseId, userId, data, res, Url, Res;\n\n  return _regeneratorRuntime.wrap(function teacherAddStudent$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _args$args2 = args.args, teacherCourseId = _args$args2.teacherCourseId, userId = _args$args2.userId;\n          data = {\n            teacherCourseId: teacherCourseId,\n            userId: userId\n          };\n          _context2.next = 5;\n          return call(Service.post, \"student/addCourse\", data);\n\n        case 5:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === 0 ? 9 : _context2.t0 === -1 ? 23 : 25;\n          break;\n\n        case 9:\n          _message.success(\"添加成功~\");\n\n          Url = \"teacher/queryStudents?teacherCourseId=\".concat(teacherCourseId);\n          _context2.next = 13;\n          return call(Service.get, Url);\n\n        case 13:\n          Res = _context2.sent;\n          _context2.t1 = Res.data.error_code;\n          _context2.next = _context2.t1 === 0 ? 17 : _context2.t1 === -1 ? 20 : 22;\n          break;\n\n        case 17:\n          _context2.next = 19;\n          return put({\n            type: TEACHER_CHECK_STUDENT_SUCCESS,\n            payload: Res.data.data\n          });\n\n        case 19:\n          return _context2.abrupt(\"break\", 22);\n\n        case 20:\n          _message.error(\"查询失败！\");\n\n          return _context2.abrupt(\"break\", 22);\n\n        case 22:\n          return _context2.abrupt(\"break\", 25);\n\n        case 23:\n          _message.error(\"请勿重复添加！\");\n\n          return _context2.abrupt(\"break\", 25);\n\n        case 25:\n          _context2.next = 29;\n          break;\n\n        case 27:\n          _context2.prev = 27;\n          _context2.t2 = _context2[\"catch\"](0);\n\n        case 29:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 27]]);\n} //老师添加课程\n\n\nfunction teacherAddCourse(args) {\n  var _args$args3, courseId, teacherId, teacherCourseId, type, data, res, updateUrl, updateRes;\n\n  return _regeneratorRuntime.wrap(function teacherAddCourse$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _args$args3 = args.args, courseId = _args$args3.courseId, teacherId = _args$args3.teacherId, teacherCourseId = _args$args3.teacherCourseId, type = _args$args3.type;\n          data = {\n            courseId: courseId,\n            teacherId: teacherId\n          };\n          _context3.next = 5;\n          return call(Service.post, \"teacher/addCourse\", data);\n\n        case 5:\n          res = _context3.sent;\n          _context3.t0 = res.data.error_code;\n          _context3.next = _context3.t0 === 0 ? 9 : _context3.t0 === -1 ? 24 : 26;\n          break;\n\n        case 9:\n          _message.success(\"添加成功~\");\n\n          updateUrl = \"course/queryMyCourse?userId=\".concat(teacherId, \"&type=\").concat(type);\n          _context3.next = 13;\n          return call(Service.get, updateUrl);\n\n        case 13:\n          updateRes = _context3.sent;\n          _context3.t1 = updateRes.data.error_code;\n          _context3.next = _context3.t1 === 0 ? 17 : 22;\n          break;\n\n        case 17:\n          _context3.next = 19;\n          return put({\n            type: TEACHER_ADD_COURSE_SUCCESS,\n            payload: courseId\n          });\n\n        case 19:\n          _context3.next = 21;\n          return put({\n            type: QUERY_MY_COURSE_SUCCESS,\n            payload: updateRes.data.data\n          });\n\n        case 21:\n          return _context3.abrupt(\"break\", 23);\n\n        case 22:\n          return _context3.abrupt(\"return\", 0);\n\n        case 23:\n          return _context3.abrupt(\"break\", 27);\n\n        case 24:\n          _message.error(\"请勿重复添加！\");\n\n          return _context3.abrupt(\"break\", 27);\n\n        case 26:\n          _message.error(res.data.message);\n\n        case 27:\n          _context3.next = 31;\n          break;\n\n        case 29:\n          _context3.prev = 29;\n          _context3.t2 = _context3[\"catch\"](0);\n\n        case 31:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 29]]);\n} //学生删除课程\n\n\nfunction studentDeleteCourse(args) {\n  var _args$args4, studentCourseId, userId, teacherCourseId, data, res;\n\n  return _regeneratorRuntime.wrap(function studentDeleteCourse$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _args$args4 = args.args, studentCourseId = _args$args4.studentCourseId, userId = _args$args4.userId, teacherCourseId = _args$args4.teacherCourseId;\n          data = {\n            studentCourseId: studentCourseId,\n            userId: userId\n          };\n          _context4.next = 5;\n          return call(Service.post, \"student/deleteCourse\", data);\n\n        case 5:\n          res = _context4.sent;\n          _context4.t0 = res.data.error_code;\n          _context4.next = _context4.t0 === 0 ? 9 : _context4.t0 === -1 ? 13 : 14;\n          break;\n\n        case 9:\n          _message.success(\"删除成功~\");\n\n          _context4.next = 12;\n          return put({\n            type: STUDENT_DELETE_COURSE_SUCCESS,\n            teacherCourseId: teacherCourseId,\n            studentCourseId: studentCourseId\n          });\n\n        case 12:\n          return _context4.abrupt(\"break\", 14);\n\n        case 13:\n          _message.error(\"删除失败！\");\n\n        case 14:\n          _context4.next = 18;\n          break;\n\n        case 16:\n          _context4.prev = 16;\n          _context4.t1 = _context4[\"catch\"](0);\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 16]]);\n} //老师删除课程\n\n\nfunction teacherDeleteCourse(args) {\n  var _args$args5, id, userId, teacherCourseId, data, res;\n\n  return _regeneratorRuntime.wrap(function teacherDeleteCourse$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _args$args5 = args.args, id = _args$args5.id, userId = _args$args5.userId, teacherCourseId = _args$args5.teacherCourseId;\n          data = {\n            id: id,\n            userId: userId\n          };\n          _context5.next = 5;\n          return call(Service.post, \"teacher/deleteCourse\", data);\n\n        case 5:\n          res = _context5.sent;\n          _context5.t0 = res.data.error_code;\n          _context5.next = _context5.t0 === 0 ? 9 : _context5.t0 === -1 ? 13 : 15;\n          break;\n\n        case 9:\n          _message.success(\"删除成功！\");\n\n          _context5.next = 12;\n          return put({\n            type: TEACHER_DELETE_COURSE_SUCCESS,\n            payload: teacherCourseId\n          });\n\n        case 12:\n          return _context5.abrupt(\"break\", 16);\n\n        case 13:\n          _message.error(\"删除失败！\");\n\n          return _context5.abrupt(\"break\", 16);\n\n        case 15:\n          return _context5.abrupt(\"return\", 0);\n\n        case 16:\n          _context5.next = 20;\n          break;\n\n        case 18:\n          _context5.prev = 18;\n          _context5.t1 = _context5[\"catch\"](0);\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 18]]);\n} //老师添加课程备注\n\n\nfunction teacherAddRemark(args) {\n  var _args$args6, teacherCourseId, remark, data, res;\n\n  return _regeneratorRuntime.wrap(function teacherAddRemark$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _args$args6 = args.args, teacherCourseId = _args$args6.teacherCourseId, remark = _args$args6.remark;\n          data = {\n            teacherCourseId: teacherCourseId,\n            remark: remark\n          };\n          _context6.next = 5;\n          return call(Service.post, \"teacher/addRemark\", data);\n\n        case 5:\n          res = _context6.sent;\n          _context6.t0 = res.data.error_code;\n          _context6.next = _context6.t0 === 0 ? 9 : _context6.t0 === -1 ? 13 : 14;\n          break;\n\n        case 9:\n          _message.success(\"操作成功~\");\n\n          _context6.next = 12;\n          return put({\n            type: TEACHER_ADD_REMARK_SUCCESS,\n            payload: data\n          });\n\n        case 12:\n          return _context6.abrupt(\"break\", 15);\n\n        case 13:\n          _message.error(\"操作失败！\");\n\n        case 14:\n          return _context6.abrupt(\"return\", 0);\n\n        case 15:\n          _context6.next = 19;\n          break;\n\n        case 17:\n          _context6.prev = 17;\n          _context6.t1 = _context6[\"catch\"](0);\n\n        case 19:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 17]]);\n} //老师发布课程任务\n\n\nfunction teacherReleaseTask(args) {\n  var _args$args7, teacherCourseId, userId, taskName, file, formData, res, url, Res;\n\n  return _regeneratorRuntime.wrap(function teacherReleaseTask$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _args$args7 = args.args, teacherCourseId = _args$args7.teacherCourseId, userId = _args$args7.userId, taskName = _args$args7.taskName, file = _args$args7.file;\n          formData = new FormData();\n          formData.append('teacherCourseId', teacherCourseId);\n          formData.append('userId', userId);\n          formData.append('taskName', taskName);\n          formData.append('fileName', file);\n          _context7.next = 9;\n          return call(Service.post, \"teacher/addCourseTask\", formData);\n\n        case 9:\n          res = _context7.sent;\n          _context7.t0 = res.data.error_code;\n          _context7.next = _context7.t0 === 0 ? 13 : _context7.t0 === -1 ? 26 : 30;\n          break;\n\n        case 13:\n          _message.success('发布任务成功~');\n\n          url = \"course/queryCourseTask?teacherCourseId=\".concat(teacherCourseId);\n          _context7.next = 17;\n          return call(Service.get, url);\n\n        case 17:\n          Res = _context7.sent;\n          _context7.t1 = Res.data.error_code;\n          _context7.next = _context7.t1 === 0 ? 21 : 24;\n          break;\n\n        case 21:\n          _context7.next = 23;\n          return put({\n            type: TEACHER_RELEASE_TASKS_SUCCESS,\n            payload: Res.data.data,\n            teacherCourseId: teacherCourseId\n          });\n\n        case 23:\n          return _context7.abrupt(\"break\", 25);\n\n        case 24:\n          return _context7.abrupt(\"return\", 0);\n\n        case 25:\n          return _context7.abrupt(\"break\", 31);\n\n        case 26:\n          _context7.next = 28;\n          return put({\n            type: TEACHER_RELEASE_TASKS_FAILED\n          });\n\n        case 28:\n          _message.error(\"已发布过该实验任务！\");\n\n          return _context7.abrupt(\"break\", 31);\n\n        case 30:\n          _message.error(res.data.message);\n\n        case 31:\n          _context7.next = 35;\n          break;\n\n        case 33:\n          _context7.prev = 33;\n          _context7.t2 = _context7[\"catch\"](0);\n\n        case 35:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 33]]);\n} //老师查看选修该课学生名单\n\n\nfunction teacherCheckStudent(args) {\n  var teacherCourseId, url, res;\n  return _regeneratorRuntime.wrap(function teacherCheckStudent$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          teacherCourseId = args.args.teacherCourseId;\n          url = \"teacher/queryStudents?teacherCourseId=\".concat(teacherCourseId);\n          _context8.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          res = _context8.sent;\n          _context8.t0 = res.data.error_code;\n          _context8.next = _context8.t0 === 0 ? 9 : _context8.t0 === -1 ? 12 : 14;\n          break;\n\n        case 9:\n          _context8.next = 11;\n          return put({\n            type: TEACHER_CHECK_STUDENT_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 11:\n          return _context8.abrupt(\"break\", 14);\n\n        case 12:\n          _message.error(\"查询失败！\");\n\n          return _context8.abrupt(\"break\", 14);\n\n        case 14:\n          _context8.next = 18;\n          break;\n\n        case 16:\n          _context8.prev = 16;\n          _context8.t1 = _context8[\"catch\"](0);\n\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 16]]);\n}\n\nfunction teacherDeleteStudent(args) {\n  var studentCourseIdList, formData, res;\n  return _regeneratorRuntime.wrap(function teacherDeleteStudent$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          studentCourseIdList = args.args.studentCourseIdList;\n          formData = new FormData();\n          formData.append(\"studentCourseIdList\", studentCourseIdList);\n          _context9.next = 6;\n          return call(Service.post, \"teacher/deleteStudentCourses\", formData);\n\n        case 6:\n          res = _context9.sent;\n          _context9.t0 = res.data.error_code;\n          _context9.next = _context9.t0 === 0 ? 10 : _context9.t0 === -1 ? 14 : 16;\n          break;\n\n        case 10:\n          _message.success(\"删除成功~\");\n\n          _context9.next = 13;\n          return put({\n            type: TEACHER_DELETE_STUDENT_SUCCESS,\n            payload: studentCourseIdList\n          });\n\n        case 13:\n          return _context9.abrupt(\"break\", 17);\n\n        case 14:\n          _message.error(\"删除失败！\");\n\n          return _context9.abrupt(\"break\", 17);\n\n        case 16:\n          return _context9.abrupt(\"return\", 0);\n\n        case 17:\n          _context9.next = 21;\n          break;\n\n        case 19:\n          _context9.prev = 19;\n          _context9.t1 = _context9[\"catch\"](0);\n\n        case 21:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 19]]);\n}\n\nexport default function rootStudentAddCourse() {\n  return _regeneratorRuntime.wrap(function rootStudentAddCourse$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(STUDENT_ADD_COURSE, studentAddCourse);\n\n        case 2:\n          _context10.next = 4;\n          return takeEvery(TEACHER_ADD_COURSE, teacherAddCourse);\n\n        case 4:\n          _context10.next = 6;\n          return takeEvery(TEACHER_DELETE_COURSE, teacherDeleteCourse);\n\n        case 6:\n          _context10.next = 8;\n          return takeEvery(STUDENT_DELETE_COURSE, studentDeleteCourse);\n\n        case 8:\n          _context10.next = 10;\n          return takeEvery(TEACHER_ADD_REMARK, teacherAddRemark);\n\n        case 10:\n          _context10.next = 12;\n          return takeEvery(TEACHER_RELEASE_TASKS, teacherReleaseTask);\n\n        case 12:\n          _context10.next = 14;\n          return takeEvery(TEACHER_CHECK_STUDENT, teacherCheckStudent);\n\n        case 14:\n          _context10.next = 16;\n          return takeEvery(TEACHER_DELETE_STUDENT, teacherDeleteStudent);\n\n        case 16:\n          _context10.next = 18;\n          return takeEvery(TEACHER_ADD_STUDENT, teacherAddStudent);\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/courseSagas/handleCourse.js"],"names":["studentAddCourse","teacherAddStudent","teacherAddCourse","studentDeleteCourse","teacherDeleteCourse","teacherAddRemark","teacherReleaseTask","teacherCheckStudent","teacherDeleteStudent","rootStudentAddCourse","call","put","takeEvery","Service","TEACHER_ADD_COURSE","STUDENT_ADD_COURSE","TEACHER_DELETE_COURSE","STUDENT_DELETE_COURSE","TEACHER_ADD_REMARK","TEACHER_RELEASE_TASKS","STUDENT_DELETE_COURSE_SUCCESS","STUDENT_ADD_COURSE_SUCCESS","TEACHER_DELETE_COURSE_SUCCESS","TEACHER_ADD_REMARK_SUCCESS","QUERY_MY_COURSE_SUCCESS","TEACHER_RELEASE_TASKS_SUCCESS","TEACHER_ADD_COURSE_SUCCESS","TEACHER_RELEASE_TASKS_FAILED","TEACHER_CHECK_STUDENT","TEACHER_CHECK_STUDENT_SUCCESS","TEACHER_DELETE_STUDENT_SUCCESS","TEACHER_DELETE_STUDENT","TEACHER_ADD_STUDENT","TEACHER_ADD_STUDENT_SUCCESS","args","teacherCourseId","userId","type","data","post","res","error_code","success","updateUrl","get","updateRes","payload","error","Url","Res","courseId","teacherId","message","studentCourseId","id","remark","taskName","file","formData","FormData","append","url","studentCourseIdList"],"mappings":";;;;oDA6BUA,gB;qDAoCAC,iB;qDAgCAC,gB;qDAqCAC,mB;qDAsBAC,mB;qDAyBAC,gB;qDAyBAC,kB;qDA4CAC,mB;qDAsBAC,oB;sDA0BeC,oB;;AA1SzB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,qBAHJ,EAIIC,qBAJJ,EAKIC,kBALJ,EAMIC,qBANJ,EAOIC,6BAPJ,EAQIC,0BARJ,EASIC,6BATJ,EAUIC,0BAVJ,EAWIC,uBAXJ,EAYIC,6BAZJ,EAaIC,0BAbJ,EAcIC,4BAdJ,EAeIC,qBAfJ,EAgBIC,6BAhBJ,EAiBIC,8BAjBJ,EAkBIC,sBAlBJ,EAmBIC,mBAnBJ,EAoBIC,2BApBJ,QAqBO,gCArBP;;AAyBA;AACA,SAAUjC,gBAAV,CAA2BkC,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEkDA,IAAI,CAACA,IAFvD,EAEgBC,eAFhB,cAEgBA,eAFhB,EAEiCC,MAFjC,cAEiCA,MAFjC,EAEyCC,IAFzC,cAEyCA,IAFzC;AAGcC,UAAAA,IAHd,GAGqB;AAAEH,YAAAA,eAAe,EAAfA,eAAF;AAAmBC,YAAAA,MAAM,EAANA;AAAnB,WAHrB;AAAA;AAIoB,iBAAM1B,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,mBAAf,EAAoCD,IAApC,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,wBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,0CAMiB,CANjB,uBA0BiB,CAAC,CA1BlB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,OAAhB;;AACMC,UAAAA,SARtB,yCAQiEP,MARjE,mBAQgFC,IARhF;AAAA;AASkC,iBAAM3B,IAAI,CAACG,OAAO,CAAC+B,GAAT,EAAcD,SAAd,CAAV;;AATlC;AASsBE,UAAAA,SATtB;AAAA,wBAUuBA,SAAS,CAACP,IAAV,CAAeG,UAVtC;AAAA,0CAWyB,CAXzB;AAAA;;AAAA;AAAA;AAYwB,iBAAM9B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEhB,0BADA;AAENyB,YAAAA,OAAO,EAAEX;AAFH,WAAD,CAAT;;AAZxB;AAAA;AAiBwB,iBAAMxB,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEb,uBADA;AAENsB,YAAAA,OAAO,EAAED,SAAS,CAACP,IAAV,CAAeA;AAFlB,WAAD,CAAT;;AAjBxB;AAAA;;AAAA;AAAA,2CAuB+B,CAvB/B;;AAAA;AAAA;;AAAA;AA2BgB,mBAAQS,KAAR,CAAc,SAAd;;AA3BhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAmCA;;;AACA,SAAU9C,iBAAV,CAA4BiC,IAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE4CA,IAAI,CAACA,IAFjD,EAEgBC,eAFhB,eAEgBA,eAFhB,EAEiCC,MAFjC,eAEiCA,MAFjC;AAGcE,UAAAA,IAHd,GAGqB;AAAEH,YAAAA,eAAe,EAAfA,eAAF;AAAmBC,YAAAA,MAAM,EAANA;AAAnB,WAHrB;AAAA;AAIoB,iBAAM1B,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,mBAAf,EAAoCD,IAApC,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,4CAMiB,CANjB,wBAsBiB,CAAC,CAtBlB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,OAAhB;;AACMM,UAAAA,GARtB,mDAQqEb,eARrE;AAAA;AAS4B,iBAAMzB,IAAI,CAACG,OAAO,CAAC+B,GAAT,EAAcI,GAAd,CAAV;;AAT5B;AASsBC,UAAAA,GATtB;AAAA,yBAUwBA,GAAG,CAACX,IAAJ,CAASG,UAVjC;AAAA,4CAWyB,CAXzB,yBAiByB,CAAC,CAjB1B;AAAA;;AAAA;AAAA;AAYwB,iBAAM9B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAER,6BADA;AAENiB,YAAAA,OAAO,EAAEG,GAAG,CAACX,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAZxB;AAAA;;AAAA;AAkBwB,mBAAQS,KAAR,CAAc,OAAd;;AAlBxB;;AAAA;AAAA;;AAAA;AAuBgB,mBAAQA,KAAR,CAAc,SAAd;;AAvBhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA+BA;;;AACA,SAAU7C,gBAAV,CAA2BgC,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE+DA,IAAI,CAACA,IAFpE,EAEgBgB,QAFhB,eAEgBA,QAFhB,EAE0BC,SAF1B,eAE0BA,SAF1B,EAEqChB,eAFrC,eAEqCA,eAFrC,EAEsDE,IAFtD,eAEsDA,IAFtD;AAGcC,UAAAA,IAHd,GAGqB;AAAEY,YAAAA,QAAQ,EAARA,QAAF;AAAYC,YAAAA,SAAS,EAATA;AAAZ,WAHrB;AAAA;AAIoB,iBAAMzC,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,mBAAf,EAAoCD,IAApC,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,4CAMiB,CANjB,wBAyBiB,CAAC,CAzBlB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAiB,OAAjB;;AACMC,UAAAA,SARtB,yCAQiEQ,SARjE,mBAQmFd,IARnF;AAAA;AASkC,iBAAM3B,IAAI,CAACG,OAAO,CAAC+B,GAAT,EAAcD,SAAd,CAAV;;AATlC;AASsBE,UAAAA,SATtB;AAAA,yBAUuBA,SAAS,CAACP,IAAV,CAAeG,UAVtC;AAAA,4CAWyB,CAXzB;AAAA;;AAAA;AAAA;AAYwB,iBAAM9B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEX,0BADA;AAENoB,YAAAA,OAAO,EAAEI;AAFH,WAAD,CAAT;;AAZxB;AAAA;AAgBwB,iBAAMvC,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEb,uBADA;AAENsB,YAAAA,OAAO,EAAED,SAAS,CAACP,IAAV,CAAeA;AAFlB,WAAD,CAAT;;AAhBxB;AAAA;;AAAA;AAAA,4CAsB+B,CAtB/B;;AAAA;AAAA;;AAAA;AA0BgB,mBAAQS,KAAR,CAAc,SAAd;;AA1BhB;;AAAA;AA6BgB,mBAAQA,KAAR,CAAcP,GAAG,CAACF,IAAJ,CAASc,OAAvB;;AA7BhB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAoCA;;;AACA,SAAUjD,mBAAV,CAA8B+B,IAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE6DA,IAAI,CAACA,IAFlE,EAEgBmB,eAFhB,eAEgBA,eAFhB,EAEiCjB,MAFjC,eAEiCA,MAFjC,EAEyCD,eAFzC,eAEyCA,eAFzC;AAGcG,UAAAA,IAHd,GAGqB;AAAEe,YAAAA,eAAe,EAAfA,eAAF;AAAmBjB,YAAAA,MAAM,EAANA;AAAnB,WAHrB;AAAA;AAIoB,iBAAM1B,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,sBAAf,EAAuCD,IAAvC,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,4CAMiB,CANjB,wBAciB,CAAC,CAdlB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,OAAhB;;AAPhB;AAQgB,iBAAM/B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEjB,6BADA;AAENe,YAAAA,eAAe,EAAEA,eAFX;AAGNkB,YAAAA,eAAe,EAAEA;AAHX,WAAD,CAAT;;AARhB;AAAA;;AAAA;AAegB,mBAAQN,KAAR,CAAc,OAAd;;AAfhB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAqBA;;;AACA,SAAU3C,mBAAV,CAA8B8B,IAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEgDA,IAAI,CAACA,IAFrD,EAEgBoB,EAFhB,eAEgBA,EAFhB,EAEoBlB,MAFpB,eAEoBA,MAFpB,EAE4BD,eAF5B,eAE4BA,eAF5B;AAGcG,UAAAA,IAHd,GAGqB;AAAEgB,YAAAA,EAAE,EAAFA,EAAF;AAAMlB,YAAAA,MAAM,EAANA;AAAN,WAHrB;AAAA;AAIoB,iBAAM1B,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,sBAAf,EAAuCD,IAAvC,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,4CAMiB,CANjB,wBAaiB,CAAC,CAblB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAiB,OAAjB;;AAPhB;AAQgB,iBAAM/B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEf,6BADA;AAENwB,YAAAA,OAAO,EAAEX;AAFH,WAAD,CAAT;;AARhB;AAAA;;AAAA;AAcgB,mBAAQY,KAAR,CAAc,OAAd;;AAdhB;;AAAA;AAAA,4CAiBuB,CAjBvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAwBA;;;AACA,SAAU1C,gBAAV,CAA2B6B,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE0CA,IAAI,CAACA,IAF/C,EAEeC,eAFf,eAEeA,eAFf,EAEgCoB,MAFhC,eAEgCA,MAFhC;AAGcjB,UAAAA,IAHd,GAGqB;AAACH,YAAAA,eAAe,EAAfA,eAAD;AAAkBoB,YAAAA,MAAM,EAANA;AAAlB,WAHrB;AAAA;AAIoB,iBAAM7C,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,mBAAf,EAAoCD,IAApC,CAAV;;AAJpB;AAIcE,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,4CAMiB,CANjB,wBAaiB,CAAC,CAblB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,OAAhB;;AAPhB;AAQgB,iBAAM/B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEd,0BADA;AAENuB,YAAAA,OAAO,EAAER;AAFH,WAAD,CAAT;;AARhB;AAAA;;AAAA;AAcgB,mBAAQS,KAAR,CAAc,OAAd;;AAdhB;AAAA,4CAgBuB,CAhBvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAwBA;;;AACA,SAAUzC,kBAAV,CAA6B4B,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE0DA,IAAI,CAACA,IAF/D,EAEeC,eAFf,eAEeA,eAFf,EAEgCC,MAFhC,eAEgCA,MAFhC,EAEwCoB,QAFxC,eAEwCA,QAFxC,EAEkDC,IAFlD,eAEkDA,IAFlD;AAGcC,UAAAA,QAHd,GAGyB,IAAIC,QAAJ,EAHzB;AAIQD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAkCzB,eAAlC;AACAuB,UAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAAyBxB,MAAzB;AACAsB,UAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA2BJ,QAA3B;AACAE,UAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BH,IAA5B;AAPR;AAQoB,iBAAM/C,IAAI,CAACG,OAAO,CAAC0B,IAAT,EAAe,uBAAf,EAAwCmB,QAAxC,CAAV;;AARpB;AAQclB,UAAAA,GARd;AAAA,yBASgBA,GAAG,CAACF,IAAJ,CAASG,UATzB;AAAA,4CAUiB,CAVjB,yBA0BiB,CAAC,CA1BlB;AAAA;;AAAA;AAWgB,mBAAQC,OAAR,CAAgB,SAAhB;;AACMmB,UAAAA,GAZtB,oDAYsE1B,eAZtE;AAAA;AAa4B,iBAAMzB,IAAI,CAACG,OAAO,CAAC+B,GAAT,EAAciB,GAAd,CAAV;;AAb5B;AAasBZ,UAAAA,GAbtB;AAAA,yBAcwBA,GAAG,CAACX,IAAJ,CAASG,UAdjC;AAAA,4CAeyB,CAfzB;AAAA;;AAAA;AAAA;AAgBwB,iBAAM9B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAACZ,6BADC;AAENqB,YAAAA,OAAO,EAAEG,GAAG,CAACX,IAAJ,CAASA,IAFZ;AAGNH,YAAAA,eAAe,EAAfA;AAHM,WAAD,CAAT;;AAhBxB;AAAA;;AAAA;AAAA,4CAuB+B,CAvB/B;;AAAA;AAAA;;AAAA;AAAA;AA2BgB,iBAAMxB,GAAG,CACL;AACI0B,YAAAA,IAAI,EAAEV;AADV,WADK,CAAT;;AA3BhB;AAgCgB,mBAAQoB,KAAR,CAAc,YAAd;;AAhChB;;AAAA;AAmCgB,mBAAQA,KAAR,CAAcP,GAAG,CAACF,IAAJ,CAASc,OAAvB;;AAnChB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA2CA;;;AACA,SAAU7C,mBAAV,CAA8B2B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEeC,UAAAA,eAFf,GAEkCD,IAAI,CAACA,IAFvC,CAEeC,eAFf;AAGc0B,UAAAA,GAHd,mDAG6D1B,eAH7D;AAAA;AAIoB,iBAAMzB,IAAI,CAACG,OAAO,CAAC+B,GAAT,EAAciB,GAAd,CAAV;;AAJpB;AAIcrB,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACF,IAAJ,CAASG,UALzB;AAAA,4CAMiB,CANjB,wBAYiB,CAAC,CAZlB;AAAA;;AAAA;AAAA;AAOgB,iBAAM9B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAER,6BADA;AAENiB,YAAAA,OAAO,EAAEN,GAAG,CAACF,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAPhB;AAAA;;AAAA;AAagB,mBAAQS,KAAR,CAAc,OAAd;;AAbhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,SAAUvC,oBAAV,CAA+B0B,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEe4B,UAAAA,mBAFf,GAEsC5B,IAAI,CAACA,IAF3C,CAEe4B,mBAFf;AAGcJ,UAAAA,QAHd,GAGyB,IAAIC,QAAJ,EAHzB;AAIQD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCE,mBAAvC;AAJR;AAKoB,iBAAMpD,IAAI,CAACG,OAAO,CAAC0B,IAAT,kCAA+CmB,QAA/C,CAAV;;AALpB;AAKclB,UAAAA,GALd;AAAA,yBAMgBA,GAAG,CAACF,IAAJ,CAASG,UANzB;AAAA,4CAOiB,CAPjB,yBAciB,CAAC,CAdlB;AAAA;;AAAA;AAQgB,mBAAQC,OAAR,CAAgB,OAAhB;;AARhB;AASgB,iBAAM/B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEP,8BADA;AAENgB,YAAAA,OAAO,EAAEgB;AAFH,WAAD,CAAT;;AAThB;AAAA;;AAAA;AAegB,mBAAQf,KAAR,CAAc,OAAd;;AAfhB;;AAAA;AAAA,4CAkBuB,CAlBvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BA,eAAe,SAAUtC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMG,SAAS,CAACG,kBAAD,EAAqBf,gBAArB,CAAf;;AADW;AAAA;AAEX,iBAAMY,SAAS,CAACE,kBAAD,EAAqBZ,gBAArB,CAAf;;AAFW;AAAA;AAGX,iBAAMU,SAAS,CAACI,qBAAD,EAAwBZ,mBAAxB,CAAf;;AAHW;AAAA;AAIX,iBAAMQ,SAAS,CAACK,qBAAD,EAAwBd,mBAAxB,CAAf;;AAJW;AAAA;AAKX,iBAAMS,SAAS,CAACM,kBAAD,EAAqBb,gBAArB,CAAf;;AALW;AAAA;AAMX,iBAAMO,SAAS,CAACO,qBAAD,EAAwBb,kBAAxB,CAAf;;AANW;AAAA;AAOX,iBAAMM,SAAS,CAACgB,qBAAD,EAAwBrB,mBAAxB,CAAf;;AAPW;AAAA;AAQX,iBAAMK,SAAS,CAACmB,sBAAD,EAAyBvB,oBAAzB,CAAf;;AARW;AAAA;AASX,iBAAMI,SAAS,CAACoB,mBAAD,EAAsB/B,iBAAtB,CAAf;;AATW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//一系列课程处理操作，老师学生添加，删除课程，老师添加课程备注\r\nimport { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport Service from \"../../../lib/Service\";\r\nimport {\r\n    TEACHER_ADD_COURSE,\r\n    STUDENT_ADD_COURSE,\r\n    TEACHER_DELETE_COURSE,\r\n    STUDENT_DELETE_COURSE,\r\n    TEACHER_ADD_REMARK,\r\n    TEACHER_RELEASE_TASKS,\r\n    STUDENT_DELETE_COURSE_SUCCESS,\r\n    STUDENT_ADD_COURSE_SUCCESS,\r\n    TEACHER_DELETE_COURSE_SUCCESS,\r\n    TEACHER_ADD_REMARK_SUCCESS,\r\n    QUERY_MY_COURSE_SUCCESS,\r\n    TEACHER_RELEASE_TASKS_SUCCESS,\r\n    TEACHER_ADD_COURSE_SUCCESS,\r\n    TEACHER_RELEASE_TASKS_FAILED,\r\n    TEACHER_CHECK_STUDENT,\r\n    TEACHER_CHECK_STUDENT_SUCCESS,\r\n    TEACHER_DELETE_STUDENT_SUCCESS,\r\n    TEACHER_DELETE_STUDENT,\r\n    TEACHER_ADD_STUDENT,\r\n    TEACHER_ADD_STUDENT_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport { message } from \"antd\";\r\n\r\n\r\n//学生添加课程\r\nfunction* studentAddCourse(args) {\r\n    try {\r\n        const { teacherCourseId, userId, type } = args.args;\r\n        const data = { teacherCourseId, userId };\r\n        const res = yield call(Service.post, \"student/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"添加成功~\");\r\n                const updateUrl = `course/queryMyCourse?userId=${userId}&type=${type}`;\r\n                const updateRes = yield call(Service.get, updateUrl);\r\n                switch(updateRes.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type: STUDENT_ADD_COURSE_SUCCESS,\r\n                            payload: teacherCourseId\r\n\r\n                        });\r\n                        yield put({\r\n                            type: QUERY_MY_COURSE_SUCCESS,\r\n                            payload: updateRes.data.data,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                message.error(\"请勿重复添加！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//老师为学生添加课程\r\nfunction* teacherAddStudent(args) {\r\n    try {\r\n        const { teacherCourseId, userId } = args.args;\r\n        const data = { teacherCourseId, userId };\r\n        const res = yield call(Service.post, \"student/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"添加成功~\");\r\n                const Url = `teacher/queryStudents?teacherCourseId=${teacherCourseId}`;\r\n                const Res = yield call(Service.get, Url);\r\n                switch (Res.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type: TEACHER_CHECK_STUDENT_SUCCESS,\r\n                            payload: Res.data.data,\r\n                        });\r\n                        break;\r\n                    case -1:\r\n                        message.error(\"查询失败！\");\r\n                        break;\r\n                }\r\n                break;\r\n            case -1:\r\n                message.error(\"请勿重复添加！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//老师添加课程\r\nfunction* teacherAddCourse(args) {\r\n    try {\r\n        const { courseId, teacherId, teacherCourseId, type } = args.args;\r\n        const data = { courseId, teacherId };\r\n        const res = yield call(Service.post, \"teacher/addCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success( \"添加成功~\");\r\n                const updateUrl = `course/queryMyCourse?userId=${teacherId}&type=${type}`;\r\n                const updateRes = yield call(Service.get, updateUrl);\r\n                switch(updateRes.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type: TEACHER_ADD_COURSE_SUCCESS,\r\n                            payload: courseId\r\n                        });\r\n                        yield put({\r\n                            type: QUERY_MY_COURSE_SUCCESS,\r\n                            payload: updateRes.data.data,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                message.error(\"请勿重复添加！\");\r\n                break;\r\n            default:\r\n                message.error(res.data.message);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//学生删除课程\r\nfunction* studentDeleteCourse(args) {\r\n    try {\r\n        const { studentCourseId, userId, teacherCourseId } = args.args;\r\n        const data = { studentCourseId, userId };\r\n        const res = yield call(Service.post, \"student/deleteCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除成功~\");\r\n                yield put({\r\n                    type: STUDENT_DELETE_COURSE_SUCCESS,\r\n                    teacherCourseId: teacherCourseId,\r\n                    studentCourseId: studentCourseId\r\n                })\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\")\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n//老师删除课程\r\nfunction* teacherDeleteCourse(args) {\r\n    try {\r\n        const { id, userId, teacherCourseId } = args.args;\r\n        const data = { id, userId };\r\n        const res = yield call(Service.post, \"teacher/deleteCourse\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success( \"删除成功！\");\r\n                yield put({\r\n                    type: TEACHER_DELETE_COURSE_SUCCESS,\r\n                    payload: teacherCourseId,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\n//老师添加课程备注\r\nfunction* teacherAddRemark(args) {\r\n    try {\r\n        const {teacherCourseId, remark} = args.args;\r\n        const data = {teacherCourseId, remark};\r\n        const res = yield call(Service.post, \"teacher/addRemark\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"操作成功~\");\r\n                yield put({\r\n                    type: TEACHER_ADD_REMARK_SUCCESS,\r\n                    payload: data\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"操作失败！\");\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//老师发布课程任务\r\nfunction* teacherReleaseTask(args) {\r\n    try {\r\n        const {teacherCourseId, userId, taskName, file} = args.args;\r\n        const formData = new FormData();\r\n        formData.append('teacherCourseId',teacherCourseId);\r\n        formData.append('userId',userId);\r\n        formData.append('taskName',taskName);\r\n        formData.append('fileName', file);\r\n        const res = yield call(Service.post, \"teacher/addCourseTask\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success('发布任务成功~');\r\n                const url = `course/queryCourseTask?teacherCourseId=${teacherCourseId}`;\r\n                const Res = yield call(Service.get, url);\r\n                switch (Res.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type:TEACHER_RELEASE_TASKS_SUCCESS,\r\n                            payload: Res.data.data,\r\n                            teacherCourseId,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                yield put(\r\n                    {\r\n                        type: TEACHER_RELEASE_TASKS_FAILED,\r\n                    }\r\n                );\r\n                message.error(\"已发布过该实验任务！\");\r\n                break;\r\n            default:\r\n                message.error(res.data.message);\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//老师查看选修该课学生名单\r\nfunction* teacherCheckStudent(args) {\r\n    try {\r\n        const {teacherCourseId} = args.args;\r\n        const url = `teacher/queryStudents?teacherCourseId=${teacherCourseId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_CHECK_STUDENT_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"查询失败！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* teacherDeleteStudent(args) {\r\n    try {\r\n        const {studentCourseIdList} = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"studentCourseIdList\", studentCourseIdList);\r\n        const res = yield call(Service.post, `teacher/deleteStudentCourses`, formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除成功~\");\r\n                yield put({\r\n                    type: TEACHER_DELETE_STUDENT_SUCCESS,\r\n                    payload: studentCourseIdList,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootStudentAddCourse() {\r\n    yield takeEvery(STUDENT_ADD_COURSE, studentAddCourse);\r\n    yield takeEvery(TEACHER_ADD_COURSE, teacherAddCourse);\r\n    yield takeEvery(TEACHER_DELETE_COURSE, teacherDeleteCourse);\r\n    yield takeEvery(STUDENT_DELETE_COURSE, studentDeleteCourse);\r\n    yield takeEvery(TEACHER_ADD_REMARK, teacherAddRemark);\r\n    yield takeEvery(TEACHER_RELEASE_TASKS, teacherReleaseTask);\r\n    yield takeEvery(TEACHER_CHECK_STUDENT, teacherCheckStudent);\r\n    yield takeEvery(TEACHER_DELETE_STUDENT, teacherDeleteStudent);\r\n    yield takeEvery(TEACHER_ADD_STUDENT, teacherAddStudent);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}