{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(queryTeacherCourse),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(rootTeacherCourse);\n\n//获取教师的课程列表,前tab的第二个\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { TEACHER_QUERY_COURSE, TEACHER_QUERY_COURSE_SUCCESS } from \"../../../constants/actionTypes\";\nimport Service from \"../../../lib/Service\";\n\nfunction queryTeacherCourse(data) {\n  var _data$args, page, userId, url, _res;\n\n  return _regeneratorRuntime.wrap(function queryTeacherCourse$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _data$args = data.args, page = _data$args.page, userId = _data$args.userId;\n          url = \"course/allCourse?page=\".concat(page, \"&userId=\").concat(userId, \"&courseName=\").concat(data.args.courseName);\n          _context.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          _res = _context.sent;\n          _context.t0 = _res.data.error_code;\n          _context.next = _context.t0 === 0 ? 9 : 12;\n          break;\n\n        case 9:\n          _context.next = 11;\n          return put({\n            type: TEACHER_QUERY_COURSE_SUCCESS,\n            payload: _res.data.data\n          });\n\n        case 11:\n          return _context.abrupt(\"break\", 13);\n\n        case 12:\n          return _context.abrupt(\"return\", 0);\n\n        case 13:\n          _context.next = 17;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t1 = _context[\"catch\"](0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 15]]);\n}\n\nexport default function rootTeacherCourse() {\n  return _regeneratorRuntime.wrap(function rootTeacherCourse$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(TEACHER_QUERY_COURSE, queryTeacherCourse);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nvar arr = [1, 7, 7, 4, 3];\nvar obj = {};\nvar res = arr.map(function (e) {\n  return obj.hasOwnProperty(e) ? e : obj[e];\n});","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/courseSagas/teacherCourse.js"],"names":["queryTeacherCourse","rootTeacherCourse","takeEvery","put","call","TEACHER_QUERY_COURSE","TEACHER_QUERY_COURSE_SUCCESS","Service","data","args","page","userId","url","courseName","get","res","error_code","type","payload","arr","obj","map","e","hasOwnProperty"],"mappings":";;oDAQUA,kB;qDAoBeC,iB;;AA5BzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SACIC,oBADJ,EAEIC,4BAFJ,QAGO,gCAHP;AAIA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAAUP,kBAAV,CAA6BQ,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEiCA,IAAI,CAACC,IAFtC,EAEgBC,IAFhB,cAEgBA,IAFhB,EAEsBC,MAFtB,cAEsBA,MAFtB;AAGcC,UAAAA,GAHd,mCAG6CF,IAH7C,qBAG4DC,MAH5D,yBAGiFH,IAAI,CAACC,IAAL,CAAUI,UAH3F;AAAA;AAIoB,iBAAMT,IAAI,CAACG,OAAO,CAACO,GAAT,EAAcF,GAAd,CAAV;;AAJpB;AAIcG,UAAAA,IAJd;AAAA,wBAKgBA,IAAG,CAACP,IAAJ,CAASQ,UALzB;AAAA,0CAMiB,CANjB;AAAA;;AAAA;AAAA;AAOgB,iBAAMb,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAEX,4BADA;AAENY,YAAAA,OAAO,EAAEH,IAAG,CAACP,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAPhB;AAAA;;AAAA;AAAA,2CAauB,CAbvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAe,SAAUP,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,SAAS,CAACG,oBAAD,EAAuBL,kBAAvB,CAAf;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIf,IAAMmB,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAZ;AACA,IAAIC,GAAG,GAAG,EAAV;AACA,IAAIL,GAAG,GAAGI,GAAG,CAACE,GAAJ,CAAQ,UAACC,CAAD,EAAK;AACnB,SAAOF,GAAG,CAACG,cAAJ,CAAmBD,CAAnB,IAAwBA,CAAxB,GAA4BF,GAAG,CAACE,CAAD,CAAtC;AACH,CAFS,CAAV","sourcesContent":["//获取教师的课程列表,前tab的第二个\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport {\r\n    TEACHER_QUERY_COURSE,\r\n    TEACHER_QUERY_COURSE_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\nimport Service from \"../../../lib/Service\";\r\n\r\nfunction* queryTeacherCourse(data) {\r\n    try{\r\n        const { page, userId } = data.args;\r\n        const url = `course/allCourse?page=${page}&userId=${userId}&courseName=${data.args.courseName}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_QUERY_COURSE_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch(e){\r\n\r\n    }\r\n}\r\nexport default function* rootTeacherCourse() {\r\n    yield takeEvery(TEACHER_QUERY_COURSE, queryTeacherCourse)\r\n}\r\n\r\nconst arr = [1, 7, 7, 4, 3];\r\nlet obj = {};\r\nlet res = arr.map((e)=>{\r\n    return obj.hasOwnProperty(e) ? e : obj[e];\r\n});\r\n"]},"metadata":{},"sourceType":"module"}