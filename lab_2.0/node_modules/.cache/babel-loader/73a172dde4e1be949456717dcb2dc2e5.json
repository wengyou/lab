{"ast":null,"code":"import{fromJS}from\"immutable\";import{default as constants,COUNTER_SUCCESS,LOG_OUT,LOGIN_SUCCESS,PRESERVE_SUCCESS,REGISTER_SUCCESS,REGISTERED_SUCCESS,FETCH_QUERY_REGISTER_SUCCESS,FETCH_PARAM_SUCCESS,SECRET_GUARD_EXISTENCE_SUCCESS,RESET_PASSWARD,ADD_QUESTION_SUCCESS,CHECK_QUESTION_SUCCESS}from\"../../../constants/actionTypes\";var defaultSate=fromJS({login:false,userIdentify:\"游客\",name:\"\",userId:\"\",academy:\"\",class:\"\",discipline:\"\",grade:\"\",sex:\"\",type:\"\",phone:\"\",password:\"\",bigOpenKey:sessionStorage.getItem(\"bigOpenKey\"),smallOpenKey:sessionStorage.getItem(\"smallOpenKey\"),time:Date.now(),registerSuccess:false,counter:'',registeredFlag:\"\",registerTotal:\"\",registerStudent:[],pv:'',uv:'',param:[],isQuestion:'',resetPasswardData:{},isCheck:false,modifyPassward:false,visible:false});export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSate;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOG_OUT:return state.merge({login:false,userIdentify:\"游客\",userId:\"\",academy:\"\",class:\"\",discipline:\"\",grade:\"\",sex:\"\",type:\"\",phone:\"\",bigOpenKey:sessionStorage.setItem(\"bigOpenKey\",\"1\"),time:Date.now()});case LOGIN_SUCCESS:return state.merge({login:true,userIdentify:action.payload.id,name:action.payload.name,userId:action.payload.userId,academy:action.payload.academy,class:action.payload.cls,discipline:action.payload.discipline,grade:action.payload.grade,sex:action.payload.sex,type:action.payload.type,phone:action.payload.phone,password:action.payload.password,bigOpenKey:sessionStorage.setItem(\"bigOpenKey\",\"1\"),time:Date.now(),visible:new Date()});case RESET_PASSWARD:return state.merge({resetPasswardData:action.payload,modifyPassward:true});case SECRET_GUARD_EXISTENCE_SUCCESS:return state.merge({isQuestion:action.payload,modifyPassward:true});case ADD_QUESTION_SUCCESS:return state.merge({isQuestion:true});case CHECK_QUESTION_SUCCESS:return state.merge({isCheck:true});case REGISTER_SUCCESS:return state.merge({registerSuccess:true});case PRESERVE_SUCCESS:return state.merge({login:true,name:action.payload.userName,userId:action.payload.userId,academy:action.payload.academy,class:action.payload.class,discipline:action.payload.discipline,grade:action.payload.grade,sex:action.payload.sex,type:action.payload.type,phone:action.payload.phone,password:action.payload.password,visible:new Date()});case COUNTER_SUCCESS:return state.merge({counter:action.payload});case FETCH_PARAM_SUCCESS:return state.merge({pv:action.payload[6].keyValue,uv:action.payload[7].keyValue,param:action.payload});//老师查询待批准学生\ncase FETCH_QUERY_REGISTER_SUCCESS:return state.merge({registerTotal:action.payload.total,registerStudent:action.payload.items});//老师批准学生\n// case constants.REGISTERED_SUCCESS:\n//     return state.merge({\n//         registerTotal: action.payload.total,\n//         registerStudent: action.payload.items,\n//     });\ncase REGISTERED_SUCCESS:return state.set(\"registeredFlag\",new Date());default:return state;}});","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/reducers/userMana/common.js"],"names":["fromJS","default","constants","COUNTER_SUCCESS","LOG_OUT","LOGIN_SUCCESS","PRESERVE_SUCCESS","REGISTER_SUCCESS","REGISTERED_SUCCESS","FETCH_QUERY_REGISTER_SUCCESS","FETCH_PARAM_SUCCESS","SECRET_GUARD_EXISTENCE_SUCCESS","RESET_PASSWARD","ADD_QUESTION_SUCCESS","CHECK_QUESTION_SUCCESS","defaultSate","login","userIdentify","name","userId","academy","class","discipline","grade","sex","type","phone","password","bigOpenKey","sessionStorage","getItem","smallOpenKey","time","Date","now","registerSuccess","counter","registeredFlag","registerTotal","registerStudent","pv","uv","param","isQuestion","resetPasswardData","isCheck","modifyPassward","visible","state","action","merge","setItem","payload","id","cls","userName","keyValue","total","items","set"],"mappings":"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","sourcesContent":["import { fromJS } from \"immutable\";\r\nimport {\r\n    default as constants,\r\n    COUNTER_SUCCESS,\r\n    LOG_OUT,\r\n    LOGIN_SUCCESS,\r\n    PRESERVE_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTERED_SUCCESS,\r\n    FETCH_QUERY_REGISTER_SUCCESS,\r\n    FETCH_PARAM_SUCCESS,\r\n    SECRET_GUARD_EXISTENCE_SUCCESS,\r\n    RESET_PASSWARD,\r\n    ADD_QUESTION_SUCCESS,\r\n    CHECK_QUESTION_SUCCESS\r\n} from \"../../../constants/actionTypes\";\r\n\r\nconst defaultSate = fromJS({\r\n    login: false,\r\n    userIdentify: \"游客\",\r\n    name: \"\",\r\n    userId: \"\",\r\n    academy:\"\",\r\n    class: \"\",\r\n    discipline: \"\",\r\n    grade:\"\",\r\n    sex: \"\",\r\n    type: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    bigOpenKey: sessionStorage.getItem(\"bigOpenKey\"),\r\n    smallOpenKey: sessionStorage.getItem(\"smallOpenKey\"),\r\n    time: Date.now(),\r\n    registerSuccess: false,\r\n    counter: '',\r\n    registeredFlag: \"\",\r\n    registerTotal: \"\",\r\n    registerStudent: [],\r\n    pv: '',\r\n    uv: '',\r\n    param: [],\r\n    isQuestion: '',\r\n    resetPasswardData: {},\r\n    isCheck: false,\r\n    modifyPassward: false,\r\n    visible: false\r\n});\r\n\r\nexport default (state = defaultSate, action) => {\r\n    switch (action.type) {\r\n        case LOG_OUT:\r\n            return state.merge({\r\n                login: false,\r\n                userIdentify: \"游客\",\r\n                userId: \"\",\r\n                academy:\"\",\r\n                class: \"\",\r\n                discipline: \"\",\r\n                grade:\"\",\r\n                sex: \"\",\r\n                type: \"\",\r\n                phone: \"\",\r\n                bigOpenKey: sessionStorage.setItem(\"bigOpenKey\", \"1\"),\r\n                time: Date.now()\r\n            });\r\n        case LOGIN_SUCCESS:\r\n            return state.merge({\r\n                login: true,\r\n                userIdentify: action.payload.id,\r\n                name: action.payload.name,\r\n                userId: action.payload.userId,\r\n                academy: action.payload.academy,\r\n                class: action.payload.cls,\r\n                discipline: action.payload.discipline,\r\n                grade: action.payload.grade,\r\n                sex: action.payload.sex,\r\n                type: action.payload.type,\r\n                phone: action.payload.phone,\r\n                password: action.payload.password,\r\n                bigOpenKey: sessionStorage.setItem(\"bigOpenKey\", \"1\"),\r\n                time: Date.now(),\r\n                visible: new Date()\r\n            });\r\n        case RESET_PASSWARD:\r\n            return state.merge({\r\n                resetPasswardData: action.payload,\r\n                modifyPassward: true\r\n            })\r\n        case SECRET_GUARD_EXISTENCE_SUCCESS:\r\n            return state.merge({\r\n                isQuestion: action.payload,\r\n                modifyPassward: true\r\n            })\r\n        case ADD_QUESTION_SUCCESS:\r\n            return state.merge({\r\n                isQuestion: true\r\n            })\r\n        case CHECK_QUESTION_SUCCESS: \r\n            return state.merge({\r\n                isCheck: true\r\n            })\r\n        case REGISTER_SUCCESS:\r\n            return state.merge({\r\n                registerSuccess: true\r\n            });\r\n        case PRESERVE_SUCCESS:\r\n            return state.merge({\r\n                login: true,\r\n                name: action.payload.userName,\r\n                userId: action.payload.userId,\r\n                academy: action.payload.academy,\r\n                class: action.payload.class,\r\n                discipline: action.payload.discipline,\r\n                grade: action.payload.grade,\r\n                sex: action.payload.sex,\r\n                type: action.payload.type,\r\n                phone: action.payload.phone,\r\n                password: action.payload.password,\r\n                visible: new Date()\r\n            });\r\n        case COUNTER_SUCCESS:\r\n            return state.merge({\r\n                counter: action.payload\r\n            });\r\n        case FETCH_PARAM_SUCCESS:\r\n            return state.merge({\r\n                pv: action.payload[6].keyValue,\r\n                uv: action.payload[7].keyValue,\r\n                param: action.payload\r\n            });\r\n        //老师查询待批准学生\r\n        case FETCH_QUERY_REGISTER_SUCCESS:\r\n            return state.merge({\r\n                registerTotal: action.payload.total,\r\n                registerStudent: action.payload.items,\r\n            });\r\n        //老师批准学生\r\n        // case constants.REGISTERED_SUCCESS:\r\n        //     return state.merge({\r\n        //         registerTotal: action.payload.total,\r\n        //         registerStudent: action.payload.items,\r\n        //     });\r\n        case REGISTERED_SUCCESS:\r\n            return state.set(\"registeredFlag\", new Date());\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}