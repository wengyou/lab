{"ast":null,"code":"import{fromJS}from\"immutable\";import*as constants from\"../../constants/actionTypes\";var defaultState=fromJS({taskTotal:\" \",courseTotal:\"\",submitTotal:\"\",downloadUrl:\"\",courseTask:[],taskResource:{},myCourse:[],allCourse:[],unsubmitList:[],submitList:[],checkList:[],studentCourseList:[],teacherUploadFlag:false,studentUploadFlag:false,teacherUpdateFlag:false,updateCourseFlag:false});export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;//那个游客也可见的课程页面，并用于学生添加课程\nswitch(action.type){case constants.QUERY_COURSE_RES_SUCCESS:return state.merge({taskTotal:action.payload.total,courseResource:action.payload.items});case constants.QUERY_COURSE_TASK_SUCCESS:var obj={};obj[action.teacherCourseId]=action.payload;var newObj=Object.assign(obj,action.courseTask);return state.set(\"courseTask\",newObj);case constants.QUERY_MY_COURSE_SUCCESS:return state.set(\"myCourse\",action.payload);case constants.TEACHER_QUERY_COURSE_SUCCESS:return state.merge({allCourse:action.payload.items,courseTotal:action.payload.total});case constants.STUDENT_QUERY_SUBMIT_SUCCESS:return state.set(\"checkList\",action.payload);case constants.TEACHER_QUERY_UNSUBMIT_SUCCESS:return state.set(\"unsubmitList\",action.payload);case constants.TEACHER_QUERY_SUBMIT_SUCCESS:return state.merge({submitTotal:action.payload.total,submitList:action.payload.items});case constants.TEACHER_DOWNLOAD_SUBMIT_SUCCESS:return state.set(\"downloadUrl\",action.payload);//修改store\n//学生删除课程\ncase constants.STUDENT_DELETE_COURSE_SUCCESS:var myCourseRes_S=state.toJS().myCourse;var courseResourceRes_S=state.toJS().courseResource;var myCourseArr_S=[];myCourseRes_S.map(function(e){return myCourseArr_S.push(e.studentCourseId);});courseResourceRes_S.map(function(e){if(e.teacherCourseId===action.teacherCourseId){e.added=!e.added;}});var myCourseIndex_S=myCourseArr_S.indexOf(action.studentCourseId);myCourseRes_S.splice(myCourseIndex_S,1);return state.merge({myCourse:myCourseRes_S,courseResource:courseResourceRes_S});//学生删除作业\ncase constants.STUDENT_DELETE_HOMEWORK_SUCCESS:var checkListRes=state.toJS().checkList;var checkListSearch=action.payload;var checkListArr=[];checkListRes.map(function(e){return checkListArr.push(e.id);});var checkListIndex=checkListArr.indexOf(checkListSearch);checkListRes.splice(checkListIndex,1);return state.set(\"checkList\",checkListRes);//老师删除课程后\ncase constants.TEACHER_DELETE_COURSE_SUCCESS:var myCourseRes_T=state.toJS().myCourse;var allCourseRes_T=state.toJS().allCourse;var myCourseArr_T=[];myCourseRes_T.map(function(e){return myCourseArr_T.push(e.courseId);});allCourseRes_T.map(function(e){if(e.id===action.payload){e.added=!e.added;}});var myCourseIndex_T=myCourseArr_T.indexOf(action.payload);myCourseRes_T.splice(myCourseIndex_T,1);return state.merge({myCourse:myCourseRes_T,allCourse:allCourseRes_T});//老师删除任务后\ncase constants.TEACHER_DELETE_TASK_SUCCESS:var teacherDeleteTask=state.toJS().courseTask;var deleteIndex=teacherDeleteTask[action.teacherCourseId].map(function(item,index){if(item.id===action.taskId){return index;}});teacherDeleteTask[action.teacherCourseId].splice(deleteIndex,1);return state.set(\"courseTask\",teacherDeleteTask);//学生添加课程\ncase constants.STUDENT_ADD_COURSE_SUCCESS:var courseResourceRes=state.toJS().courseResource;var newCourseResource=courseResourceRes.map(function(e){if(e.teacherCourseId===action.payload){e.added=!e.added;}return e;});return state.set(\"courseResource\",newCourseResource);//老师添加课程后：\ncase constants.TEACHER_ADD_COURSE_SUCCESS:var allCourseRes=state.toJS().allCourse;var updateCourseFlag1=state.toJS().updateCourseFlag;allCourseRes.map(function(e){if(e.id===action.payload){e.added=!e.added;}});return state.merge({allCourse:allCourseRes,updateCourseFlag:!updateCourseFlag1});//remark改变后\ncase constants.TEACHER_ADD_REMARK_SUCCESS:var myCourseRes=state.toJS().myCourse;var updateCourseFlag2=state.toJS().updateCourseFlag;var teacherCourseId1=action.payload.teacherCourseId;var remark=action.payload.remark;var myCourseList=myCourseRes.map(function(e){if(e.teacherCourseId===teacherCourseId1)e.remark=remark;return e;});return state.merge({myCourse:myCourseList,updateCourseFlag:!updateCourseFlag2});//开启上传下载作业！\ncase constants.TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS:var toggleCourseTask=state.toJS().courseTask;toggleCourseTask[action.teacherCourseId].map(function(e){if(e.id===action.taskId){e.closed=!e.closed;return e;}});return state.set(\"courseTask\",toggleCourseTask);//老师发布任务后，任务动态显示在列表在\ncase constants.TEACHER_RELEASE_TASKS_SUCCESS:var releaseTask=state.toJS().courseTask;var teacherUploadFlag=state.toJS().teacherUploadFlag;releaseTask[action.teacherCourseId]=action.payload;return state.merge({courseTask:releaseTask,teacherUploadFlag:!teacherUploadFlag});//老师发布任务失败\ncase constants.TEACHER_RELEASE_TASKS_FAILED:var teacherUploadFlag2=state.toJS().teacherUploadFlag;return state.set(\"teacherUploadFlag\",!teacherUploadFlag2);//老师修改任务后，任务变化\ncase constants.TEACHER_UPDATE_TASK_SUCCESS:var updateTask=state.toJS().courseTask;var teacherUpdateFlag=state.toJS().teacherUpdateFlag;updateTask[action.teacherCourseId]=action.payload;return state.merge({courseTask:updateTask,teacherUpdateFlag:!teacherUpdateFlag});//老师修改任务失败\ncase constants.TEACHER_UPDATE_TASK_FAILED:var teacherUpdateFlag2=state.toJS().teacherUpdateFlag;return state.set(\"teacherUpdateFlag\",!teacherUpdateFlag2);//学生上传任务成功,学生上传任务失败\ncase constants.STUDENT_UPLOAD_HOMEWORK_SUCCESS:case constants.STUDENT_UPLOAD_HOMEWORK_FAILED:var studentUploadFlag=state.toJS().studentUploadFlag;return state.set(\"studentUploadFlag\",!studentUploadFlag);//搜索课程\ncase constants.FETCH_SEARCH_COURSE_SUCCESS:return state.merge({taskTotal:action.payload.total,courseResource:action.payload.items});case constants.TEACHER_CHECK_STUDENT_SUCCESS:return state.set(\"studentCourseList\",action.payload);case constants.TEACHER_DELETE_STUDENT_SUCCESS:var studentCourseList=state.toJS().studentCourseList;var arr=[];studentCourseList.map(function(e){if(e.studentCourseId!==action.payload){return arr.push(e);}});return state.set(\"studentCourseList\",arr);default:return state;}});","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/reducers/course.js"],"names":["fromJS","constants","defaultState","taskTotal","courseTotal","submitTotal","downloadUrl","courseTask","taskResource","myCourse","allCourse","unsubmitList","submitList","checkList","studentCourseList","teacherUploadFlag","studentUploadFlag","teacherUpdateFlag","updateCourseFlag","state","action","type","QUERY_COURSE_RES_SUCCESS","merge","payload","total","courseResource","items","QUERY_COURSE_TASK_SUCCESS","obj","teacherCourseId","newObj","Object","assign","set","QUERY_MY_COURSE_SUCCESS","TEACHER_QUERY_COURSE_SUCCESS","STUDENT_QUERY_SUBMIT_SUCCESS","TEACHER_QUERY_UNSUBMIT_SUCCESS","TEACHER_QUERY_SUBMIT_SUCCESS","TEACHER_DOWNLOAD_SUBMIT_SUCCESS","STUDENT_DELETE_COURSE_SUCCESS","myCourseRes_S","toJS","courseResourceRes_S","myCourseArr_S","map","e","push","studentCourseId","added","myCourseIndex_S","indexOf","splice","STUDENT_DELETE_HOMEWORK_SUCCESS","checkListRes","checkListSearch","checkListArr","id","checkListIndex","TEACHER_DELETE_COURSE_SUCCESS","myCourseRes_T","allCourseRes_T","myCourseArr_T","courseId","myCourseIndex_T","TEACHER_DELETE_TASK_SUCCESS","teacherDeleteTask","deleteIndex","item","index","taskId","STUDENT_ADD_COURSE_SUCCESS","courseResourceRes","newCourseResource","TEACHER_ADD_COURSE_SUCCESS","allCourseRes","updateCourseFlag1","TEACHER_ADD_REMARK_SUCCESS","myCourseRes","updateCourseFlag2","teacherCourseId1","remark","myCourseList","TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS","toggleCourseTask","closed","TEACHER_RELEASE_TASKS_SUCCESS","releaseTask","TEACHER_RELEASE_TASKS_FAILED","teacherUploadFlag2","TEACHER_UPDATE_TASK_SUCCESS","updateTask","TEACHER_UPDATE_TASK_FAILED","teacherUpdateFlag2","STUDENT_UPLOAD_HOMEWORK_SUCCESS","STUDENT_UPLOAD_HOMEWORK_FAILED","FETCH_SEARCH_COURSE_SUCCESS","TEACHER_CHECK_STUDENT_SUCCESS","TEACHER_DELETE_STUDENT_SUCCESS","arr"],"mappings":"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","sourcesContent":["import { fromJS,  } from \"immutable\";\r\nimport * as constants from \"../../constants/actionTypes\";\r\nconst defaultState = fromJS({\r\n    taskTotal: \" \",\r\n    courseTotal: \"\",\r\n    submitTotal: \"\",\r\n    downloadUrl: \"\",\r\n    courseTask: [],\r\n    taskResource: {},\r\n    myCourse: [],\r\n    allCourse: [],\r\n    unsubmitList: [],\r\n    submitList: [],\r\n    checkList : [],\r\n    studentCourseList: [],\r\n    teacherUploadFlag: false,\r\n    studentUploadFlag: false,\r\n    teacherUpdateFlag: false,\r\n    updateCourseFlag: false,\r\n});\r\nexport default (state = defaultState, action) => {\r\n    //那个游客也可见的课程页面，并用于学生添加课程\r\n    switch (action.type) {\r\n        case constants.QUERY_COURSE_RES_SUCCESS:\r\n            return state.merge({\r\n                taskTotal: action.payload.total,\r\n                courseResource: action.payload.items\r\n            });\r\n        case constants.QUERY_COURSE_TASK_SUCCESS:\r\n            let obj = {};\r\n            obj[action.teacherCourseId] = action.payload;\r\n            let newObj = Object.assign(obj,action.courseTask);\r\n            return state.set(\r\n                \"courseTask\", newObj,\r\n            );\r\n        case constants.QUERY_MY_COURSE_SUCCESS:\r\n            return state.set(\r\n                \"myCourse\", action.payload\r\n            );\r\n        case constants.TEACHER_QUERY_COURSE_SUCCESS:\r\n            return state.merge({\r\n                allCourse: action.payload.items,\r\n                courseTotal: action.payload.total,\r\n            });\r\n        case constants.STUDENT_QUERY_SUBMIT_SUCCESS:\r\n            return state.set(\r\n                \"checkList\", action.payload\r\n            );\r\n        case constants.TEACHER_QUERY_UNSUBMIT_SUCCESS:\r\n            return state.set(\r\n                \"unsubmitList\", action.payload\r\n            );\r\n        case constants.TEACHER_QUERY_SUBMIT_SUCCESS:\r\n            return state.merge({\r\n                submitTotal: action.payload.total,\r\n                submitList: action.payload.items\r\n            });\r\n        case constants.TEACHER_DOWNLOAD_SUBMIT_SUCCESS:\r\n            return state.set(\r\n                \"downloadUrl\", action.payload\r\n            );\r\n            //修改store\r\n            //学生删除课程\r\n        case constants.STUDENT_DELETE_COURSE_SUCCESS:\r\n            const myCourseRes_S = state.toJS().myCourse;\r\n            const courseResourceRes_S = state.toJS().courseResource;\r\n            const myCourseArr_S = [];\r\n            myCourseRes_S.map((e)=>(\r\n                myCourseArr_S.push(e.studentCourseId)\r\n              ));\r\n            courseResourceRes_S.map((e)=>{\r\n                if(e.teacherCourseId === action.teacherCourseId){\r\n                    e.added = !e.added;\r\n                }\r\n            });\r\n             const myCourseIndex_S = myCourseArr_S.indexOf(action.studentCourseId);\r\n            myCourseRes_S.splice(myCourseIndex_S, 1);\r\n            return state.merge({\r\n                myCourse: myCourseRes_S,\r\n                courseResource: courseResourceRes_S\r\n            });\r\n            //学生删除作业\r\n        case constants.STUDENT_DELETE_HOMEWORK_SUCCESS:\r\n            let checkListRes = state.toJS().checkList;\r\n            const checkListSearch = action.payload;\r\n            let checkListArr = [];\r\n            checkListRes.map((e)=>(\r\n                checkListArr.push(e.id)\r\n            ));\r\n            const checkListIndex = checkListArr.indexOf(checkListSearch);\r\n            checkListRes.splice(checkListIndex, 1);\r\n            return state.set(\r\n                \"checkList\", checkListRes\r\n            );\r\n            //老师删除课程后\r\n        case constants.TEACHER_DELETE_COURSE_SUCCESS:\r\n            const myCourseRes_T = state.toJS().myCourse;\r\n            const allCourseRes_T = state.toJS().allCourse;\r\n            let myCourseArr_T = [];\r\n            myCourseRes_T.map((e)=>(\r\n                myCourseArr_T.push(e.courseId)\r\n            ));\r\n            allCourseRes_T.map((e) => {\r\n                if(e.id === action.payload){\r\n                    e.added = !e.added;\r\n                }\r\n            });\r\n            const myCourseIndex_T = myCourseArr_T.indexOf(action.payload);\r\n            myCourseRes_T.splice(myCourseIndex_T, 1);\r\n            return state.merge({\r\n                myCourse: myCourseRes_T,\r\n                allCourse: allCourseRes_T\r\n            });\r\n            //老师删除任务后\r\n        case constants.TEACHER_DELETE_TASK_SUCCESS:\r\n            let teacherDeleteTask = state.toJS().courseTask;\r\n            let deleteIndex = teacherDeleteTask[action.teacherCourseId].map((item, index)=>{\r\n                if(item.id === action.taskId){\r\n                    return index;\r\n                }\r\n            });\r\n            teacherDeleteTask[action.teacherCourseId].splice(deleteIndex, 1);\r\n            return state.set(\r\n                \"courseTask\", teacherDeleteTask\r\n            );\r\n\r\n            //学生添加课程\r\n        case constants.STUDENT_ADD_COURSE_SUCCESS:\r\n            const courseResourceRes = state.toJS().courseResource;\r\n            const newCourseResource = courseResourceRes.map((e)=>{\r\n                    if(e.teacherCourseId === action.payload){\r\n                        e.added = !e.added;\r\n                    }\r\n                    return e;\r\n                });\r\n            return state.set(\r\n                \"courseResource\", newCourseResource\r\n            );\r\n            //老师添加课程后：\r\n        case constants.TEACHER_ADD_COURSE_SUCCESS:\r\n            const allCourseRes = state.toJS().allCourse;\r\n            const updateCourseFlag1 = state.toJS().updateCourseFlag;\r\n            allCourseRes.map((e) => {\r\n                if(e.id === action.payload){\r\n                    e.added = !e.added;\r\n                }\r\n            });\r\n            return state.merge({\r\n                allCourse: allCourseRes,\r\n                updateCourseFlag: !updateCourseFlag1,\r\n            });\r\n\r\n            //remark改变后\r\n        case constants.TEACHER_ADD_REMARK_SUCCESS:\r\n            let myCourseRes = state.toJS().myCourse;\r\n            const updateCourseFlag2 = state.toJS().updateCourseFlag;\r\n            let teacherCourseId1 = action.payload.teacherCourseId;\r\n            let remark = action.payload.remark;\r\n            let myCourseList = myCourseRes.map((e)=>{\r\n                if(e.teacherCourseId === teacherCourseId1)\r\n                     e.remark = remark ;\r\n                return e;\r\n            });\r\n            return state.merge({\r\n                myCourse: myCourseList,\r\n                updateCourseFlag: !updateCourseFlag2,\r\n\r\n            });\r\n            //开启上传下载作业！\r\n        case constants.TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS:\r\n            let toggleCourseTask = state.toJS().courseTask;\r\n                toggleCourseTask[action.teacherCourseId].map((e)=>{\r\n                if(e.id === action.taskId){\r\n                    e.closed = !e.closed;\r\n                    return e;\r\n                }\r\n            });\r\n            return state.set(\r\n                \"courseTask\",toggleCourseTask\r\n            );\r\n            //老师发布任务后，任务动态显示在列表在\r\n        case constants.TEACHER_RELEASE_TASKS_SUCCESS:\r\n            const releaseTask = state.toJS().courseTask;\r\n            const teacherUploadFlag = state.toJS().teacherUploadFlag;\r\n            releaseTask[action.teacherCourseId] = action.payload;\r\n            return state.merge({\r\n                courseTask: releaseTask,\r\n                teacherUploadFlag: !teacherUploadFlag,\r\n            });\r\n            //老师发布任务失败\r\n        case constants.TEACHER_RELEASE_TASKS_FAILED:\r\n            const teacherUploadFlag2 = state.toJS().teacherUploadFlag;\r\n            return state.set(\r\n                \"teacherUploadFlag\",!teacherUploadFlag2\r\n            );\r\n            //老师修改任务后，任务变化\r\n        case constants.TEACHER_UPDATE_TASK_SUCCESS:\r\n            const updateTask =  state.toJS().courseTask;\r\n            const teacherUpdateFlag = state.toJS().teacherUpdateFlag;\r\n            updateTask[action.teacherCourseId] = action.payload;\r\n            return state.merge({\r\n                courseTask: updateTask,\r\n                teacherUpdateFlag: !teacherUpdateFlag\r\n            });\r\n            //老师修改任务失败\r\n        case constants.TEACHER_UPDATE_TASK_FAILED:\r\n            const teacherUpdateFlag2 = state.toJS().teacherUpdateFlag;\r\n            return state.set(\r\n                \"teacherUpdateFlag\", !teacherUpdateFlag2\r\n            );\r\n            //学生上传任务成功,学生上传任务失败\r\n        case constants.STUDENT_UPLOAD_HOMEWORK_SUCCESS:\r\n        case constants.STUDENT_UPLOAD_HOMEWORK_FAILED:\r\n            const studentUploadFlag = state.toJS().studentUploadFlag;\r\n            return state.set(\r\n                \"studentUploadFlag\", !studentUploadFlag\r\n            );\r\n            //搜索课程\r\n        case constants.FETCH_SEARCH_COURSE_SUCCESS:\r\n            return state.merge({\r\n                taskTotal: action.payload.total,\r\n                courseResource: action.payload.items\r\n            });\r\n        case constants.TEACHER_CHECK_STUDENT_SUCCESS:\r\n            return state.set(\r\n                \"studentCourseList\", action.payload,\r\n            );\r\n        case constants.TEACHER_DELETE_STUDENT_SUCCESS:\r\n            let studentCourseList = state.toJS().studentCourseList;\r\n            let arr = [];\r\n            studentCourseList.map(e=>{\r\n                if(e.studentCourseId !== action.payload) {\r\n                    return arr.push(e);\r\n                }\r\n            });\r\n            return state.set(\r\n                \"studentCourseList\", arr\r\n            );\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}