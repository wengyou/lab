{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(teacherUpdateTask),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(teacherDeleteTask),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(teacherToggleTaskUpload),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(teacherQueryUnsubmit),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(teacherQuerySubmit),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(teacherDownloadSubmit),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(studentUploadHomework),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(studentQuerySubmit),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(studentDeleteHomework),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(queryCourseTaskRes),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootHandleTask);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport { TEACHER_DELETE_TASK, TEACHER_QUERY_UNSUBMIT, TEACHER_UPDATE_TASK, TEACHER_QUERY_UNSUBMIT_SUCCESS, TEACHER_QUERY_SUBMIT, TEACHER_QUERY_SUBMIT_SUCCESS, TEACHER_TOGGLE_TASK_UPLOAD, STUDENT_QUERY_SUBMIT, STUDENT_QUERY_SUBMIT_SUCCESS, STUDENT_UPLOAD_HOMEWORK, STUDENT_UPLOAD_HOMEWORK_SUCCESS, STUDENT_DELETE_HOMEWORK, QUERY_COURSE_TASK_SUCCESS, QUERY_COURSE_TASK, TEACHER_DOWNLOAD_SUBMIT, TEACHER_DOWNLOAD_SUBMIT_SUCCESS, STUDENT_DELETE_HOMEWORK_SUCCESS, TEACHER_DELETE_TASK_SUCCESS, TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS, TEACHER_UPDATE_TASK_SUCCESS, TEACHER_UPDATE_TASK_FAILED, STUDENT_UPLOAD_HOMEWORK_FAILED } from \"../../../constants/actionTypes\";\nimport Service from \"../../../lib/Service\"; //老师修改任务\n\nfunction teacherUpdateTask(args) {\n  var _args$args, id, taskName, file, teacherCourseId, userId, formData, res, url, Res;\n\n  return _regeneratorRuntime.wrap(function teacherUpdateTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _args$args = args.args, id = _args$args.id, taskName = _args$args.taskName, file = _args$args.file, teacherCourseId = _args$args.teacherCourseId, userId = _args$args.userId;\n          formData = new FormData();\n          formData.append('id', id);\n          formData.append('userId', userId);\n          formData.append('taskName', taskName);\n          formData.append('fileName', file);\n          _context.next = 9;\n          return call(Service.post, \"teacher/updateTask\", formData);\n\n        case 9:\n          res = _context.sent;\n          _context.t0 = res.data.error_code;\n          _context.next = _context.t0 === 0 ? 13 : _context.t0 === -1 ? 26 : 30;\n          break;\n\n        case 13:\n          _message.success('修改任务成功~');\n\n          url = \"course/queryCourseTask?teacherCourseId=\".concat(teacherCourseId);\n          _context.next = 17;\n          return call(Service.get, url);\n\n        case 17:\n          Res = _context.sent;\n          _context.t1 = Res.data.error_code;\n          _context.next = _context.t1 === 0 ? 21 : 24;\n          break;\n\n        case 21:\n          _context.next = 23;\n          return put({\n            type: TEACHER_UPDATE_TASK_SUCCESS,\n            payload: Res.data.data,\n            teacherCourseId: teacherCourseId\n          });\n\n        case 23:\n          return _context.abrupt(\"break\", 25);\n\n        case 24:\n          return _context.abrupt(\"return\", 0);\n\n        case 25:\n          return _context.abrupt(\"break\", 30);\n\n        case 26:\n          _context.next = 28;\n          return put({\n            type: TEACHER_UPDATE_TASK_FAILED\n          });\n\n        case 28:\n          _message.error(\"该文件已存在！\");\n\n          return _context.abrupt(\"break\", 30);\n\n        case 30:\n          _context.next = 34;\n          break;\n\n        case 32:\n          _context.prev = 32;\n          _context.t2 = _context[\"catch\"](0);\n\n        case 34:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 32]]);\n} //老师删除实验任务\n\n\nfunction teacherDeleteTask(args) {\n  var _args$args2, taskId, teacherCourseId, data, res;\n\n  return _regeneratorRuntime.wrap(function teacherDeleteTask$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _args$args2 = args.args, taskId = _args$args2.taskId, teacherCourseId = _args$args2.teacherCourseId;\n          data = {\n            taskId: taskId\n          };\n          _context2.next = 5;\n          return call(Service.post, \"teacher/deleteTask\", data);\n\n        case 5:\n          res = _context2.sent;\n          _context2.t0 = res.data.error_code;\n          _context2.next = _context2.t0 === 0 ? 9 : 13;\n          break;\n\n        case 9:\n          _message.success(\"删除实验任务成功！\");\n\n          _context2.next = 12;\n          return put({\n            type: TEACHER_DELETE_TASK_SUCCESS,\n            taskId: taskId,\n            teacherCourseId: teacherCourseId\n          });\n\n        case 12:\n          return _context2.abrupt(\"break\", 14);\n\n        case 13:\n          return _context2.abrupt(\"return\", 0);\n\n        case 14:\n          _context2.next = 18;\n          break;\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t1 = _context2[\"catch\"](0);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 16]]);\n} //教师开启/关闭实验任务作业的上传\n\n\nfunction teacherToggleTaskUpload(args) {\n  var _args$args3, taskId, teacherCourseId, data, res;\n\n  return _regeneratorRuntime.wrap(function teacherToggleTaskUpload$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _args$args3 = args.args, taskId = _args$args3.taskId, teacherCourseId = _args$args3.teacherCourseId;\n          data = {\n            taskId: taskId\n          };\n          _context3.prev = 2;\n          _context3.next = 5;\n          return call(Service.post, \"teacher/toggleUpload\", data);\n\n        case 5:\n          res = _context3.sent;\n          _context3.t0 = res.data.error_code;\n          _context3.next = _context3.t0 === 0 ? 9 : _context3.t0 === -1 ? 13 : 15;\n          break;\n\n        case 9:\n          _message.success(\"操作成功~\");\n\n          _context3.next = 12;\n          return put({\n            type: TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS,\n            taskId: taskId,\n            teacherCourseId: teacherCourseId\n          });\n\n        case 12:\n          return _context3.abrupt(\"break\", 16);\n\n        case 13:\n          _message.error(\"操作失败！\");\n\n          return _context3.abrupt(\"break\", 16);\n\n        case 15:\n          return _context3.abrupt(\"return\", 0);\n\n        case 16:\n          _context3.next = 20;\n          break;\n\n        case 18:\n          _context3.prev = 18;\n          _context3.t1 = _context3[\"catch\"](2);\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 18]]);\n} //教师查看未交作业同学名单\n\n\nfunction teacherQueryUnsubmit(args) {\n  var _args$args4, teacherCourseId, taskId, url, res;\n\n  return _regeneratorRuntime.wrap(function teacherQueryUnsubmit$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _args$args4 = args.args, teacherCourseId = _args$args4.teacherCourseId, taskId = _args$args4.taskId;\n          url = \"teacher/queryUnSubmit?teacherCourseId=\".concat(teacherCourseId, \"&taskId=\").concat(taskId);\n          _context4.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          res = _context4.sent;\n          _context4.t0 = res.data.error_code;\n          _context4.next = _context4.t0 === 0 ? 9 : 12;\n          break;\n\n        case 9:\n          _context4.next = 11;\n          return put({\n            type: TEACHER_QUERY_UNSUBMIT_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 11:\n          return _context4.abrupt(\"break\", 13);\n\n        case 12:\n          return _context4.abrupt(\"return\", 0);\n\n        case 13:\n          _context4.next = 17;\n          break;\n\n        case 15:\n          _context4.prev = 15;\n          _context4.t1 = _context4[\"catch\"](0);\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 15]]);\n} //教师查看已交作业名单\n\n\nfunction teacherQuerySubmit(data) {\n  var _data$data, taskId, rows, page, url, res;\n\n  return _regeneratorRuntime.wrap(function teacherQuerySubmit$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _data$data = data.data, taskId = _data$data.taskId, rows = _data$data.rows, page = _data$data.page;\n          url = \"teacher/queryWork?taskId=\".concat(taskId, \"&rows=\").concat(rows, \"&page=\").concat(page);\n          _context5.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          res = _context5.sent;\n          _context5.t0 = res.data.error_code;\n          _context5.next = _context5.t0 === 0 ? 9 : 12;\n          break;\n\n        case 9:\n          _context5.next = 11;\n          return put({\n            type: TEACHER_QUERY_SUBMIT_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 11:\n          return _context5.abrupt(\"break\", 13);\n\n        case 12:\n          return _context5.abrupt(\"return\", 0);\n\n        case 13:\n          _context5.next = 17;\n          break;\n\n        case 15:\n          _context5.prev = 15;\n          _context5.t1 = _context5[\"catch\"](0);\n\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 15]]);\n} //老师批量下载已提交作业\n\n\nfunction teacherDownloadSubmit(args) {\n  var _args$args5, taskId, userIdList, callback, hide, data, url, res;\n\n  return _regeneratorRuntime.wrap(function teacherDownloadSubmit$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _args$args5 = args.args, taskId = _args$args5.taskId, userIdList = _args$args5.userIdList, callback = _args$args5.callback, hide = _args$args5.hide;\n          data = {\n            taskId: taskId,\n            userIdList: userIdList\n          };\n          url = \"teacher/downloadWorks\";\n          _context6.next = 6;\n          return call(Service.post, url, data);\n\n        case 6:\n          res = _context6.sent;\n          hide();\n          _context6.t0 = res.data.error_code;\n          _context6.next = _context6.t0 === 0 ? 11 : 15;\n          break;\n\n        case 11:\n          _context6.next = 13;\n          return put({\n            type: TEACHER_DOWNLOAD_SUBMIT_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 13:\n          callback(true);\n          return _context6.abrupt(\"break\", 16);\n\n        case 15:\n          return _context6.abrupt(\"return\", 0);\n\n        case 16:\n          _context6.next = 20;\n          break;\n\n        case 18:\n          _context6.prev = 18;\n          _context6.t1 = _context6[\"catch\"](0);\n\n        case 20:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 18]]);\n} //学生上传任务作业\n\n\nfunction studentUploadHomework(args) {\n  var _args$args6, userId, studentCourseId, taskId, file, formData, res;\n\n  return _regeneratorRuntime.wrap(function studentUploadHomework$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _args$args6 = args.args, userId = _args$args6.userId, studentCourseId = _args$args6.studentCourseId, taskId = _args$args6.taskId, file = _args$args6.file;\n          formData = new FormData();\n          formData.append(\"userId\", userId);\n          formData.append(\"studentCourseId\", studentCourseId);\n          formData.append(\"taskId\", taskId);\n          file.forEach(function (e) {\n            return formData.append(\"file\", e);\n          });\n          _context7.next = 9;\n          return call(Service.post, \"resource/uploadWorks\", formData);\n\n        case 9:\n          res = _context7.sent;\n          _context7.t0 = res.data.error_code;\n          _context7.next = _context7.t0 === 0 ? 13 : _context7.t0 === -1 ? 17 : 20;\n          break;\n\n        case 13:\n          res.data.data.length === 0 ? _message.success(res.data.message) : res.data.data.map(function (err) {\n            return _message.error(err.message + err.reason);\n          });\n          _context7.next = 16;\n          return put({\n            type: STUDENT_UPLOAD_HOMEWORK_SUCCESS\n          });\n\n        case 16:\n          return _context7.abrupt(\"break\", 21);\n\n        case 17:\n          _context7.next = 19;\n          return put({\n            type: STUDENT_UPLOAD_HOMEWORK_FAILED\n          });\n\n        case 19:\n          return _context7.abrupt(\"break\", 21);\n\n        case 20:\n          return _context7.abrupt(\"return\", 0);\n\n        case 21:\n          _context7.next = 25;\n          break;\n\n        case 23:\n          _context7.prev = 23;\n          _context7.t1 = _context7[\"catch\"](0);\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 23]]);\n} //学生查看已经上传的作业\n\n\nfunction studentQuerySubmit(args) {\n  var _args$args7, userId, taskId, url, res;\n\n  return _regeneratorRuntime.wrap(function studentQuerySubmit$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _args$args7 = args.args, userId = _args$args7.userId, taskId = _args$args7.taskId;\n          url = \"student/queryWork?userId=\".concat(userId, \"&taskId=\").concat(taskId);\n          _context8.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          res = _context8.sent;\n          _context8.t0 = res.data.error_code;\n          _context8.next = _context8.t0 === 0 ? 9 : 12;\n          break;\n\n        case 9:\n          _context8.next = 11;\n          return put({\n            type: STUDENT_QUERY_SUBMIT_SUCCESS,\n            payload: res.data.data\n          });\n\n        case 11:\n          return _context8.abrupt(\"break\", 13);\n\n        case 12:\n          return _context8.abrupt(\"return\", 0);\n\n        case 13:\n          _context8.next = 17;\n          break;\n\n        case 15:\n          _context8.prev = 15;\n          _context8.t1 = _context8[\"catch\"](0);\n\n        case 17:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 15]]);\n} //学生删除已上传作业\n\n\nfunction studentDeleteHomework(args) {\n  var _args$args8, userId, workId, data, res;\n\n  return _regeneratorRuntime.wrap(function studentDeleteHomework$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _args$args8 = args.args, userId = _args$args8.userId, workId = _args$args8.workId;\n          data = {\n            userId: userId,\n            workId: workId\n          };\n          _context9.next = 5;\n          return call(Service.post, \"student/removeWork\", data);\n\n        case 5:\n          res = _context9.sent;\n          _context9.t0 = res.data.error_code;\n          _context9.next = _context9.t0 === 0 ? 9 : _context9.t0 === -1 ? 13 : 14;\n          break;\n\n        case 9:\n          _message.success(\"删除作业成功~\");\n\n          _context9.next = 12;\n          return put({\n            type: STUDENT_DELETE_HOMEWORK_SUCCESS,\n            payload: workId\n          });\n\n        case 12:\n          return _context9.abrupt(\"break\", 15);\n\n        case 13:\n          _message.error(\"删除作业失败！\");\n\n        case 14:\n          return _context9.abrupt(\"return\", 0);\n\n        case 15:\n          _context9.next = 19;\n          break;\n\n        case 17:\n          _context9.prev = 17;\n          _context9.t1 = _context9[\"catch\"](0);\n\n        case 19:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 17]]);\n} //老师学生获取任务详情\n\n\nfunction queryCourseTaskRes(data) {\n  var _data$teacherCourseId, teacherCourseId, courseTask, url, res;\n\n  return _regeneratorRuntime.wrap(function queryCourseTaskRes$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _data$teacherCourseId = data.teacherCourseId, teacherCourseId = _data$teacherCourseId.teacherCourseId, courseTask = _data$teacherCourseId.courseTask;\n          url = \"course/queryCourseTask?teacherCourseId=\".concat(teacherCourseId);\n          _context10.next = 5;\n          return call(Service.get, url);\n\n        case 5:\n          res = _context10.sent;\n          _context10.t0 = res.data.error_code;\n          _context10.next = _context10.t0 === 0 ? 9 : 12;\n          break;\n\n        case 9:\n          _context10.next = 11;\n          return put({\n            type: QUERY_COURSE_TASK_SUCCESS,\n            payload: res.data.data,\n            teacherCourseId: teacherCourseId,\n            courseTask: courseTask\n          });\n\n        case 11:\n          return _context10.abrupt(\"break\", 13);\n\n        case 12:\n          return _context10.abrupt(\"return\", 0);\n\n        case 13:\n          _context10.next = 17;\n          break;\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t1 = _context10[\"catch\"](0);\n\n        case 17:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 15]]);\n}\n\nexport default function rootHandleTask() {\n  return _regeneratorRuntime.wrap(function rootHandleTask$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(TEACHER_DELETE_TASK, teacherDeleteTask);\n\n        case 2:\n          _context11.next = 4;\n          return takeEvery(TEACHER_TOGGLE_TASK_UPLOAD, teacherToggleTaskUpload);\n\n        case 4:\n          _context11.next = 6;\n          return takeEvery(TEACHER_QUERY_SUBMIT, teacherQuerySubmit);\n\n        case 6:\n          _context11.next = 8;\n          return takeEvery(TEACHER_QUERY_UNSUBMIT, teacherQueryUnsubmit);\n\n        case 8:\n          _context11.next = 10;\n          return takeEvery(TEACHER_UPDATE_TASK, teacherUpdateTask);\n\n        case 10:\n          _context11.next = 12;\n          return takeEvery(TEACHER_DOWNLOAD_SUBMIT, teacherDownloadSubmit);\n\n        case 12:\n          _context11.next = 14;\n          return takeEvery(STUDENT_QUERY_SUBMIT, studentQuerySubmit);\n\n        case 14:\n          _context11.next = 16;\n          return takeEvery(STUDENT_UPLOAD_HOMEWORK, studentUploadHomework);\n\n        case 16:\n          _context11.next = 18;\n          return takeEvery(STUDENT_DELETE_HOMEWORK, studentDeleteHomework);\n\n        case 18:\n          _context11.next = 20;\n          return takeEvery(QUERY_COURSE_TASK, queryCourseTaskRes);\n\n        case 20:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/redux/sagas/courseSagas/handleTasks.js"],"names":["teacherUpdateTask","teacherDeleteTask","teacherToggleTaskUpload","teacherQueryUnsubmit","teacherQuerySubmit","teacherDownloadSubmit","studentUploadHomework","studentQuerySubmit","studentDeleteHomework","queryCourseTaskRes","rootHandleTask","takeEvery","call","put","TEACHER_DELETE_TASK","TEACHER_QUERY_UNSUBMIT","TEACHER_UPDATE_TASK","TEACHER_QUERY_UNSUBMIT_SUCCESS","TEACHER_QUERY_SUBMIT","TEACHER_QUERY_SUBMIT_SUCCESS","TEACHER_TOGGLE_TASK_UPLOAD","STUDENT_QUERY_SUBMIT","STUDENT_QUERY_SUBMIT_SUCCESS","STUDENT_UPLOAD_HOMEWORK","STUDENT_UPLOAD_HOMEWORK_SUCCESS","STUDENT_DELETE_HOMEWORK","QUERY_COURSE_TASK_SUCCESS","QUERY_COURSE_TASK","TEACHER_DOWNLOAD_SUBMIT","TEACHER_DOWNLOAD_SUBMIT_SUCCESS","STUDENT_DELETE_HOMEWORK_SUCCESS","TEACHER_DELETE_TASK_SUCCESS","TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS","TEACHER_UPDATE_TASK_SUCCESS","TEACHER_UPDATE_TASK_FAILED","STUDENT_UPLOAD_HOMEWORK_FAILED","Service","args","id","taskName","file","teacherCourseId","userId","formData","FormData","append","post","res","data","error_code","success","url","get","Res","type","payload","error","taskId","rows","page","userIdList","callback","hide","studentCourseId","forEach","e","length","message","map","err","reason","workId","courseTask"],"mappings":";;;;oDA4BUA,iB;qDAwCAC,iB;qDAwBAC,uB;qDA2BAC,oB;qDAqBAC,kB;qDAqBAC,qB;qDAyBAC,qB;qDAuCAC,kB;qDAsBAC,qB;sDAwBAC,kB;sDAuBeC,c;;AAtSzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACIC,mBADJ,EAEIC,sBAFJ,EAGIC,mBAHJ,EAIIC,8BAJJ,EAKIC,oBALJ,EAMIC,4BANJ,EAOIC,0BAPJ,EAQIC,oBARJ,EASIC,4BATJ,EAUIC,uBAVJ,EAWIC,+BAXJ,EAYIC,uBAZJ,EAaIC,yBAbJ,EAcIC,iBAdJ,EAeIC,uBAfJ,EAgBIC,+BAhBJ,EAiBIC,+BAjBJ,EAkBIC,2BAlBJ,EAmBIC,kCAnBJ,EAoBIC,2BApBJ,EAoBiCC,0BApBjC,EAoB6DC,8BApB7D,QAsBO,gCAtBP;AAwBA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,SAAUpC,iBAAV,CAA4BqC,IAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE8DA,IAAI,CAACA,IAFnE,EAEeC,EAFf,cAEeA,EAFf,EAEmBC,QAFnB,cAEmBA,QAFnB,EAE6BC,IAF7B,cAE6BA,IAF7B,EAEmCC,eAFnC,cAEmCA,eAFnC,EAEoDC,MAFpD,cAEoDA,MAFpD;AAGcC,UAAAA,QAHd,GAGyB,IAAIC,QAAJ,EAHzB;AAIQD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAqBP,EAArB;AACAK,UAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAAyBH,MAAzB;AACAC,UAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA2BN,QAA3B;AACAI,UAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BL,IAA5B;AAPR;AAQoB,iBAAM5B,IAAI,CAACwB,OAAO,CAACU,IAAT,EAAe,oBAAf,EAAqCH,QAArC,CAAV;;AARpB;AAQcI,UAAAA,GARd;AAAA,wBASgBA,GAAG,CAACC,IAAJ,CAASC,UATzB;AAAA,0CAUiB,CAVjB,wBA0BiB,CAAC,CA1BlB;AAAA;;AAAA;AAWgB,mBAAQC,OAAR,CAAgB,SAAhB;;AACMC,UAAAA,GAZtB,oDAYsEV,eAZtE;AAAA;AAa4B,iBAAM7B,IAAI,CAACwB,OAAO,CAACgB,GAAT,EAAcD,GAAd,CAAV;;AAb5B;AAasBE,UAAAA,GAbtB;AAAA,wBAcwBA,GAAG,CAACL,IAAJ,CAASC,UAdjC;AAAA,0CAeyB,CAfzB;AAAA;;AAAA;AAAA;AAgBwB,iBAAMpC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAACrB,2BADC;AAENsB,YAAAA,OAAO,EAAEF,GAAG,CAACL,IAAJ,CAASA,IAFZ;AAGNP,YAAAA,eAAe,EAAfA;AAHM,WAAD,CAAT;;AAhBxB;AAAA;;AAAA;AAAA,2CAuB+B,CAvB/B;;AAAA;AAAA;;AAAA;AAAA;AA2BgB,iBAAM5B,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAEpB;AADA,WAAD,CAAT;;AA3BhB;AA8BgB,mBAAQsB,KAAR,CAAc,SAAd;;AA9BhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAuCA;;;AACA,SAAUvD,iBAAV,CAA4BoC,IAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE4CA,IAAI,CAACA,IAFjD,EAEgBoB,MAFhB,eAEgBA,MAFhB,EAEwBhB,eAFxB,eAEwBA,eAFxB;AAGcO,UAAAA,IAHd,GAGqB;AAACS,YAAAA,MAAM,EAANA;AAAD,WAHrB;AAAA;AAIoB,iBAAM7C,IAAI,CAACwB,OAAO,CAACU,IAAT,EAAe,oBAAf,EAAqCE,IAArC,CAAV;;AAJpB;AAIcD,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,4CAMiB,CANjB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,WAAhB;;AAPhB;AAQgB,iBAAMrC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAEvB,2BADA;AAEN0B,YAAAA,MAAM,EAAEA,MAFF;AAGNhB,YAAAA,eAAe,EAAEA;AAHX,WAAD,CAAT;;AARhB;AAAA;;AAAA;AAAA,4CAeuB,CAfvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAuBA;;;AACA,SAAUvC,uBAAV,CAAkCmC,IAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACsCA,IAAI,CAACA,IAD3C,EACWoB,MADX,eACWA,MADX,EACmBhB,eADnB,eACmBA,eADnB;AAEUO,UAAAA,IAFV,GAEiB;AAACS,YAAAA,MAAM,EAANA;AAAD,WAFjB;AAAA;AAAA;AAIoB,iBAAM7C,IAAI,CAACwB,OAAO,CAACU,IAAT,EAAe,sBAAf,EAAuCE,IAAvC,CAAV;;AAJpB;AAIcD,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,4CAMiB,CANjB,wBAciB,CAAC,CAdlB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,OAAhB;;AAPhB;AAQgB,iBAAMrC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAEtB,kCADA;AAENyB,YAAAA,MAAM,EAAEA,MAFF;AAGNhB,YAAAA,eAAe,EAAEA;AAHX,WAAD,CAAT;;AARhB;AAAA;;AAAA;AAegB,mBAAQe,KAAR,CAAc,OAAd;;AAfhB;;AAAA;AAAA,4CAkBuB,CAlBvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA0BA;;;AACA,SAAUrD,oBAAV,CAA+BkC,IAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE4CA,IAAI,CAACA,IAFjD,EAEgBI,eAFhB,eAEgBA,eAFhB,EAEiCgB,MAFjC,eAEiCA,MAFjC;AAGcN,UAAAA,GAHd,mDAG6DV,eAH7D,qBAGuFgB,MAHvF;AAAA;AAIoB,iBAAM7C,IAAI,CAACwB,OAAO,CAACgB,GAAT,EAAcD,GAAd,CAAV;;AAJpB;AAIcJ,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,4CAMiB,CANjB;AAAA;;AAAA;AAAA;AAOc,iBAAMpC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAErC,8BADA;AAENsC,YAAAA,OAAO,EAAER,GAAG,CAACC,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAPd;AAAA;;AAAA;AAAA,4CAauB,CAbvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAoBA;;;AACA,SAAU5C,kBAAV,CAA6B4C,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEuCA,IAAI,CAACA,IAF5C,EAEgBS,MAFhB,cAEgBA,MAFhB,EAEwBC,IAFxB,cAEwBA,IAFxB,EAE8BC,IAF9B,cAE8BA,IAF9B;AAGcR,UAAAA,GAHd,sCAGgDM,MAHhD,mBAG+DC,IAH/D,mBAG4EC,IAH5E;AAAA;AAIoB,iBAAM/C,IAAI,CAACwB,OAAO,CAACgB,GAAT,EAAcD,GAAd,CAAV;;AAJpB;AAIcJ,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,4CAMiB,CANjB;AAAA;;AAAA;AAAA;AAOgB,iBAAMpC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAEnC,4BADA;AAENoC,YAAAA,OAAO,EAAER,GAAG,CAACC,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAPhB;AAAA;;AAAA;AAAA,4CAauB,CAbvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAoBA;;;AACA,SAAU3C,qBAAV,CAAgCgC,IAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEuDA,IAAI,CAACA,IAF5D,EAEgBoB,MAFhB,eAEgBA,MAFhB,EAEwBG,UAFxB,eAEwBA,UAFxB,EAEoCC,QAFpC,eAEoCA,QAFpC,EAE8CC,IAF9C,eAE8CA,IAF9C;AAGcd,UAAAA,IAHd,GAGqB;AAAES,YAAAA,MAAM,EAANA,MAAF;AAAUG,YAAAA,UAAU,EAAVA;AAAV,WAHrB;AAIcT,UAAAA,GAJd;AAAA;AAKoB,iBAAMvC,IAAI,CAACwB,OAAO,CAACU,IAAT,EAAeK,GAAf,EAAoBH,IAApB,CAAV;;AALpB;AAKcD,UAAAA,GALd;AAMQe,UAAAA,IAAI;AANZ,yBAOgBf,GAAG,CAACC,IAAJ,CAASC,UAPzB;AAAA,4CAQiB,CARjB;AAAA;;AAAA;AAAA;AASgB,iBAAMpC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAEzB,+BADA;AAEN0B,YAAAA,OAAO,EAAER,GAAG,CAACC,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAThB;AAagBa,UAAAA,QAAQ,CAAC,IAAD,CAAR;AAbhB;;AAAA;AAAA,4CAgBuB,CAhBvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAwBA;;;AACA,SAAUvD,qBAAV,CAAgC+B,IAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEwDA,IAAI,CAACA,IAF7D,EAEeK,MAFf,eAEeA,MAFf,EAEuBqB,eAFvB,eAEuBA,eAFvB,EAEwCN,MAFxC,eAEwCA,MAFxC,EAEgDjB,IAFhD,eAEgDA,IAFhD;AAGcG,UAAAA,QAHd,GAGyB,IAAIC,QAAJ,EAHzB;AAIQD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,MAA1B;AACAC,UAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmCkB,eAAnC;AACApB,UAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BY,MAA1B;AACAjB,UAAAA,IAAI,CAACwB,OAAL,CACI,UAAAC,CAAC;AAAA,mBACGtB,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBoB,CAAxB,CADH;AAAA,WADL;AAPR;AAYoB,iBAAMrD,IAAI,CAACwB,OAAO,CAACU,IAAT,EAAe,sBAAf,EAAuCH,QAAvC,CAAV;;AAZpB;AAYcI,UAAAA,GAZd;AAAA,yBAagBA,GAAG,CAACC,IAAJ,CAASC,UAbzB;AAAA,4CAciB,CAdjB,yBAsBiB,CAAC,CAtBlB;AAAA;;AAAA;AAegBF,UAAAA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAckB,MAAd,KAAyB,CAAzB,GACI,SAAQhB,OAAR,CAAgBH,GAAG,CAACC,IAAJ,CAASmB,OAAzB,CADJ,GAEIpB,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcoB,GAAd,CAAkB,UAAAC,GAAG;AAAA,mBAAK,SAAQb,KAAR,CAAca,GAAG,CAACF,OAAJ,GAAcE,GAAG,CAACC,MAAhC,CAAL;AAAA,WAArB,CAFJ;AAfhB;AAkBgB,iBAAMzD,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAE9B;AADA,WAAD,CAAT;;AAlBhB;AAAA;;AAAA;AAAA;AAuBgB,iBAAOX,GAAG,CACV;AACIyC,YAAAA,IAAI,EAAEnB;AADV,WADU,CAAV;;AAvBhB;AAAA;;AAAA;AAAA,4CA8BuB,CA9BvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAsCA;;;AACA,SAAU5B,kBAAV,CAA6B8B,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEmCA,IAAI,CAACA,IAFxC,EAEgBK,MAFhB,eAEgBA,MAFhB,EAEwBe,MAFxB,eAEwBA,MAFxB;AAGcN,UAAAA,GAHd,sCAGgDT,MAHhD,qBAGiEe,MAHjE;AAAA;AAIoB,iBAAM7C,IAAI,CAACwB,OAAO,CAACgB,GAAT,EAAcD,GAAd,CAAV;;AAJpB;AAIcJ,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,4CAMiB,CANjB;AAAA;;AAAA;AAAA;AAOgB,iBAAMpC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAEhC,4BADA;AAENiC,YAAAA,OAAO,EAAER,GAAG,CAACC,IAAJ,CAASA;AAFZ,WAAD,CAAT;;AAPhB;AAAA;;AAAA;AAAA,4CAauB,CAbvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAqBA;;;AACA,SAAUxC,qBAAV,CAAgC6B,IAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEiCA,IAAI,CAACA,IAFtC,EAEeK,MAFf,eAEeA,MAFf,EAEuB6B,MAFvB,eAEuBA,MAFvB;AAGcvB,UAAAA,IAHd,GAGqB;AAACN,YAAAA,MAAM,EAANA,MAAD;AAAS6B,YAAAA,MAAM,EAANA;AAAT,WAHrB;AAAA;AAIoB,iBAAM3D,IAAI,CAACwB,OAAO,CAACU,IAAT,EAAe,oBAAf,EAAqCE,IAArC,CAAV;;AAJpB;AAIcD,UAAAA,GAJd;AAAA,yBAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,4CAMiB,CANjB,wBAaiB,CAAC,CAblB;AAAA;;AAAA;AAOgB,mBAAQC,OAAR,CAAgB,SAAhB;;AAPhB;AAQgB,iBAAMrC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAExB,+BADA;AAENyB,YAAAA,OAAO,EAAEgB;AAFH,WAAD,CAAT;;AARhB;AAAA;;AAAA;AAcgB,mBAAQf,KAAR,CAAc,SAAd;;AAdhB;AAAA,4CAgBuB,CAhBvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAuBA;;;AACA,SAAU/C,kBAAV,CAA6BuC,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAE8CA,IAAI,CAACP,eAFnD,EAEeA,eAFf,yBAEeA,eAFf,EAEgC+B,UAFhC,yBAEgCA,UAFhC;AAGcrB,UAAAA,GAHd,oDAG8DV,eAH9D;AAAA;AAIoB,iBAAM7B,IAAI,CAACwB,OAAO,CAACgB,GAAT,EAAcD,GAAd,CAAV;;AAJpB;AAIcJ,UAAAA,GAJd;AAAA,0BAKgBA,GAAG,CAACC,IAAJ,CAASC,UALzB;AAAA,8CAMiB,CANjB;AAAA;;AAAA;AAAA;AAOgB,iBAAMpC,GAAG,CAAC;AACNyC,YAAAA,IAAI,EAAC5B,yBADC;AAEN6B,YAAAA,OAAO,EAAER,GAAG,CAACC,IAAJ,CAASA,IAFZ;AAGNP,YAAAA,eAAe,EAAfA,eAHM;AAIN+B,YAAAA,UAAU,EAAVA;AAJM,WAAD,CAAT;;AAPhB;AAAA;;AAAA;AAAA,6CAeuB,CAfvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA,eAAe,SAAU9D,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,SAAS,CAACG,mBAAD,EAAsBb,iBAAtB,CAAf;;AADW;AAAA;AAEX,iBAAMU,SAAS,CAACS,0BAAD,EAA6BlB,uBAA7B,CAAf;;AAFW;AAAA;AAGX,iBAAMS,SAAS,CAACO,oBAAD,EAAsBd,kBAAtB,CAAf;;AAHW;AAAA;AAIX,iBAAMO,SAAS,CAACI,sBAAD,EAAwBZ,oBAAxB,CAAf;;AAJW;AAAA;AAKX,iBAAMQ,SAAS,CAACK,mBAAD,EAAqBhB,iBAArB,CAAf;;AALW;AAAA;AAMX,iBAAMW,SAAS,CAACiB,uBAAD,EAA0BvB,qBAA1B,CAAf;;AANW;AAAA;AAOX,iBAAMM,SAAS,CAACU,oBAAD,EAAsBd,kBAAtB,CAAf;;AAPW;AAAA;AAQX,iBAAMI,SAAS,CAACY,uBAAD,EAA0BjB,qBAA1B,CAAf;;AARW;AAAA;AASX,iBAAMK,SAAS,CAACc,uBAAD,EAA0BjB,qBAA1B,CAAf;;AATW;AAAA;AAUX,iBAAMG,SAAS,CAACgB,iBAAD,EAAoBlB,kBAApB,CAAf;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport {\r\n    TEACHER_DELETE_TASK,\r\n    TEACHER_QUERY_UNSUBMIT,\r\n    TEACHER_UPDATE_TASK,\r\n    TEACHER_QUERY_UNSUBMIT_SUCCESS,\r\n    TEACHER_QUERY_SUBMIT,\r\n    TEACHER_QUERY_SUBMIT_SUCCESS,\r\n    TEACHER_TOGGLE_TASK_UPLOAD,\r\n    STUDENT_QUERY_SUBMIT,\r\n    STUDENT_QUERY_SUBMIT_SUCCESS,\r\n    STUDENT_UPLOAD_HOMEWORK,\r\n    STUDENT_UPLOAD_HOMEWORK_SUCCESS,\r\n    STUDENT_DELETE_HOMEWORK,\r\n    QUERY_COURSE_TASK_SUCCESS,\r\n    QUERY_COURSE_TASK,\r\n    TEACHER_DOWNLOAD_SUBMIT,\r\n    TEACHER_DOWNLOAD_SUBMIT_SUCCESS,\r\n    STUDENT_DELETE_HOMEWORK_SUCCESS,\r\n    TEACHER_DELETE_TASK_SUCCESS,\r\n    TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS,\r\n    TEACHER_UPDATE_TASK_SUCCESS, TEACHER_UPDATE_TASK_FAILED, STUDENT_UPLOAD_HOMEWORK_FAILED\r\n\r\n} from \"../../../constants/actionTypes\";\r\nimport { message } from \"antd\";\r\nimport Service from \"../../../lib/Service\";\r\n\r\n//老师修改任务\r\nfunction* teacherUpdateTask(args) {\r\n    try {\r\n        const {id, taskName, file, teacherCourseId, userId} = args.args;\r\n        const formData = new FormData();\r\n        formData.append('id',id);\r\n        formData.append('userId',userId);\r\n        formData.append('taskName',taskName);\r\n        formData.append('fileName', file);\r\n        const res = yield call(Service.post, \"teacher/updateTask\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success('修改任务成功~');\r\n                const url = `course/queryCourseTask?teacherCourseId=${teacherCourseId}`;\r\n                const Res = yield call(Service.get, url);\r\n                switch (Res.data.error_code) {\r\n                    case 0:\r\n                        yield put({\r\n                            type:TEACHER_UPDATE_TASK_SUCCESS,\r\n                            payload: Res.data.data,\r\n                            teacherCourseId,\r\n                        });\r\n                        break;\r\n                    default:\r\n                        return 0;\r\n                }\r\n                break;\r\n            case -1:\r\n                yield put({\r\n                    type: TEACHER_UPDATE_TASK_FAILED,\r\n                });\r\n                message.error(\"该文件已存在！\");\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//老师删除实验任务\r\nfunction *teacherDeleteTask(args) {\r\n    try {\r\n        const { taskId, teacherCourseId } = args.args;\r\n        const data = {taskId};\r\n        const res = yield call(Service.post, \"teacher/deleteTask\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除实验任务成功！\");\r\n                yield put({\r\n                    type: TEACHER_DELETE_TASK_SUCCESS,\r\n                    taskId: taskId,\r\n                    teacherCourseId: teacherCourseId\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//教师开启/关闭实验任务作业的上传\r\nfunction* teacherToggleTaskUpload(args) {\r\n    const {taskId, teacherCourseId} = args.args;\r\n    const data = {taskId};\r\n    try {\r\n        const res = yield call(Service.post, \"teacher/toggleUpload\", data);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"操作成功~\");\r\n                yield put({\r\n                    type: TEACHER_TOGGLE_TASK_UPLOAD_SUCCESS,\r\n                    taskId: taskId,\r\n                    teacherCourseId: teacherCourseId\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"操作失败！\");\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//教师查看未交作业同学名单\r\nfunction* teacherQueryUnsubmit(args){\r\n    try {\r\n        const { teacherCourseId, taskId } = args.args;\r\n        const url = `teacher/queryUnSubmit?teacherCourseId=${teacherCourseId}&taskId=${taskId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n              yield put({\r\n                  type: TEACHER_QUERY_UNSUBMIT_SUCCESS,\r\n                  payload: res.data.data,\r\n              });\r\n              break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n//教师查看已交作业名单\r\nfunction* teacherQuerySubmit(data){\r\n    try {\r\n        const { taskId, rows, page } = data.data;\r\n        const url = `teacher/queryWork?taskId=${taskId}&rows=${rows}&page=${page}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_QUERY_SUBMIT_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n//老师批量下载已提交作业\r\nfunction* teacherDownloadSubmit(args){\r\n    try {\r\n        const { taskId, userIdList, callback, hide } = args.args;\r\n        const data = { taskId, userIdList };\r\n        const url = `teacher/downloadWorks`;\r\n        const res = yield call(Service.post, url, data);\r\n        hide()\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: TEACHER_DOWNLOAD_SUBMIT_SUCCESS,\r\n                    payload: res.data.data\r\n                });\r\n                callback(true);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//学生上传任务作业\r\nfunction* studentUploadHomework(args) {\r\n    try {\r\n        const {userId, studentCourseId, taskId, file} = args.args;\r\n        const formData = new FormData;\r\n        formData.append(\"userId\", userId);\r\n        formData.append(\"studentCourseId\", studentCourseId);\r\n        formData.append(\"taskId\", taskId);\r\n        file.forEach(\r\n            e => (\r\n                formData.append(\"file\", e)\r\n            )\r\n        );\r\n        const res = yield call(Service.post, \"resource/uploadWorks\", formData);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                res.data.data.length === 0 ?\r\n                    message.success(res.data.message) :\r\n                    res.data.data.map(err => (message.error(err.message + err.reason)));\r\n                yield put({\r\n                    type: STUDENT_UPLOAD_HOMEWORK_SUCCESS\r\n                });\r\n                break;\r\n            case -1:\r\n                yield  put(\r\n                {\r\n                    type: STUDENT_UPLOAD_HOMEWORK_FAILED,\r\n                }\r\n            );\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//学生查看已经上传的作业\r\nfunction* studentQuerySubmit(args){\r\n    try {\r\n        const { userId, taskId } = args.args;\r\n        const url = `student/queryWork?userId=${userId}&taskId=${taskId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type: STUDENT_QUERY_SUBMIT_SUCCESS,\r\n                    payload: res.data.data,\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//学生删除已上传作业\r\nfunction *studentDeleteHomework(args) {\r\n    try {\r\n        const {userId, workId} = args.args;\r\n        const data = {userId, workId};\r\n        const res = yield call(Service.post, \"student/removeWork\", data );\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                message.success(\"删除作业成功~\");\r\n                yield put({\r\n                    type: STUDENT_DELETE_HOMEWORK_SUCCESS,\r\n                    payload: workId,\r\n                });\r\n                break;\r\n            case -1:\r\n                message.error(\"删除作业失败！\");\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n//老师学生获取任务详情\r\nfunction* queryCourseTaskRes(data) {\r\n    try {\r\n        const {teacherCourseId, courseTask} = data.teacherCourseId;\r\n        const url = `course/queryCourseTask?teacherCourseId=${teacherCourseId}`;\r\n        const res = yield call(Service.get, url);\r\n        switch (res.data.error_code) {\r\n            case 0:\r\n                yield put({\r\n                    type:QUERY_COURSE_TASK_SUCCESS,\r\n                    payload: res.data.data,\r\n                    teacherCourseId,\r\n                    courseTask\r\n                });\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootHandleTask() {\r\n    yield takeEvery(TEACHER_DELETE_TASK, teacherDeleteTask);\r\n    yield takeEvery(TEACHER_TOGGLE_TASK_UPLOAD, teacherToggleTaskUpload);\r\n    yield takeEvery(TEACHER_QUERY_SUBMIT,teacherQuerySubmit);\r\n    yield takeEvery(TEACHER_QUERY_UNSUBMIT,teacherQueryUnsubmit);\r\n    yield takeEvery(TEACHER_UPDATE_TASK,teacherUpdateTask);\r\n    yield takeEvery(TEACHER_DOWNLOAD_SUBMIT, teacherDownloadSubmit);\r\n    yield takeEvery(STUDENT_QUERY_SUBMIT,studentQuerySubmit);\r\n    yield takeEvery(STUDENT_UPLOAD_HOMEWORK, studentUploadHomework);\r\n    yield takeEvery(STUDENT_DELETE_HOMEWORK, studentDeleteHomework);\r\n    yield takeEvery(QUERY_COURSE_TASK, queryCourseTaskRes);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}