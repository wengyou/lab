{"ast":null,"code":"import\"antd/es/table/style/css\";import _Table from\"antd/es/table\";import _toConsumableArray from\"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import\"antd/es/button/style/css\";import _Button from\"antd/es/button\";import\"antd/es/icon/style/css\";import _Icon from\"antd/es/icon\";import _slicedToArray from\"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import\"antd/es/select/style/css\";import _Select from\"antd/es/select\";import\"antd/es/modal/style/css\";import _Modal from\"antd/es/modal\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import*as admin from\"../../redux/actionCreators/admin\";var confirm=_Modal.confirm;var Option=_Select.Option;var Search=_Input.Search;var Reg=/^[\\s\\S]*.*[^\\s][\\s\\S]*$/;var StudentCourse=function StudentCourse(props){var userId=props.userId,studentCourseFlag=props.studentCourseFlag,studentCourses=props.studentCourses,studentCourseTotal=props.studentCourseTotal,handleQueryStudentCourse=props.handleQueryStudentCourse,handleDeleteStudentCourse=props.handleDeleteStudentCourse;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),deleteBtn=_useState2[0],setDeleteBtn=_useState2[1];var _useState3=useState(\"studentName\"),_useState4=_slicedToArray(_useState3,2),searchFlag=_useState4[0],setSearchFlag=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),presentPage=_useState6[0],setPresentPage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),arr=_useState8[0],setArr=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),selected=_useState10[0],setSelected=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),selectedKey=_useState12[0],setSelectedKey=_useState12[1];useEffect(function(){handleQueryStudentCourse(presentPage===1?{page:1,studentName:\"\",studentId:\"\"}:Math.ceil(studentCourseTotal/10)>presentPage?{page:presentPage,studentName:\"\",studentId:\"\"}:{page:presentPage-1,studentName:\"\",studentId:\"\"});},[studentCourseFlag]);var columns=[{title:\"课程名\",dataIndex:\"courseName\",key:\"courseName\"},{title:\"课程编号\",dataIndex:\"courseNumber\",key:\"courseNumber\"},{title:\"学号\",dataIndex:\"studentId\",key:\"studentId\"},{title:\"学生姓名\",dataIndex:\"studentName\",key:\"studentName\"},{title:\"添加时间\",dataIndex:\"addTime\",key:\"addTime\"}];return/*#__PURE__*/React.createElement(\"div\",{style:{margin:\"0.625rem\"}},/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\"}},/*#__PURE__*/React.createElement(_Button,{disabled:deleteBtn,style:{margin:\"0 0.625rem\"},onClick:function onClick(){return confirm({title:'确认删除吗?',onOk:function onOk(){selected.map(function(e){return arr.push(e.studentCourseId);});handleDeleteStudentCourse({studentCourseIdList:arr});setSelectedKey([]);setArr([]);setDeleteBtn(true);},onCancel:function onCancel(){}});}},/*#__PURE__*/React.createElement(_Icon,{type:\"delete\"}),\"\\u5220\\u9664\\u8BFE\\u7A0B\"),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexWrap:\"nowrap\",width:\"20rem\"}},/*#__PURE__*/React.createElement(_Select,{defaultValue:\"studentName\",style:{width:\"4.375rem\"},onChange:function onChange(e){return setSearchFlag(e);}},/*#__PURE__*/React.createElement(Option,{value:\"studentName\"},\"\\u59D3\\u540D\"),/*#__PURE__*/React.createElement(Option,{value:\"studentId\"},\"\\u5B66\\u53F7\")),/*#__PURE__*/React.createElement(Search,{placeholder:\"\\u8BF7\\u8F93\\u5165\\u641C\\u7D22\\u5185\\u5BB9\",onSearch:function onSearch(value){Reg.test(value)?handleQueryStudentCourse(searchFlag===\"studentName\"?{page:1,studentName:value,studentId:\"\"}:{page:1,studentName:\"\",studentId:value}):handleQueryStudentCourse({page:1,studentName:\"\",studentId:\"\"});setPresentPage(1);},enterButton:true,style:{width:200}}))),/*#__PURE__*/React.createElement(_Table,{rowKey:function rowKey(e){return e.studentCourseId;},dataSource:_toConsumableArray(studentCourses),columns:columns,pagination:{current:presentPage,total:studentCourseTotal,onChange:function onChange(e){handleQueryStudentCourse({page:e,studentName:\"\",studentId:\"\"});setPresentPage(e);setSelectedKey([]);}},rowSelection:{selectedRowKeys:selectedKey,onChange:function onChange(selectedRowKeys,selectedRows){setSelected(selectedRows);setSelectedKey(selectedRowKeys);selectedRowKeys.length>0?setDeleteBtn(false):setDeleteBtn(true);}}}));};export default connect(function(state){return{studentCourseFlag:state.getIn([\"admin\",\"labCourse\",\"studentCourseFlag\"]),studentCourses:state.getIn([\"admin\",\"labCourse\",\"studentCourses\"]),studentCourseTotal:state.getIn([\"admin\",\"labCourse\",\"studentCourseTotal\"]),userId:state.getIn([\"userMana\",\"common\",\"userId\"])};},function(dispatch){return{handleQueryStudentCourse:function handleQueryStudentCourse(args){dispatch(admin.queryStudentCourse(args));},handleDeleteStudentCourse:function handleDeleteStudentCourse(args){dispatch(admin.deleteStudentCourse(args));}};})(StudentCourse);","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/components/Administrator/StudentCourse.js"],"names":["React","useEffect","useState","connect","admin","confirm","Option","Search","Reg","StudentCourse","props","userId","studentCourseFlag","studentCourses","studentCourseTotal","handleQueryStudentCourse","handleDeleteStudentCourse","deleteBtn","setDeleteBtn","searchFlag","setSearchFlag","presentPage","setPresentPage","arr","setArr","selected","setSelected","selectedKey","setSelectedKey","page","studentName","studentId","Math","ceil","columns","title","dataIndex","key","margin","display","onOk","map","e","push","studentCourseId","studentCourseIdList","onCancel","flexWrap","width","value","test","current","total","onChange","selectedRowKeys","selectedRows","length","state","getIn","dispatch","args","queryStudentCourse","deleteStudentCourse"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table, Button, Modal, Icon, Select, Input} from \"antd\";\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\r\nconst StudentCourse = props => {\r\n    const { userId, studentCourseFlag, studentCourses, studentCourseTotal, handleQueryStudentCourse, handleDeleteStudentCourse } = props;\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [searchFlag, setSearchFlag] = useState(\"studentName\");\r\n    const [presentPage, setPresentPage] =useState(1);\r\n    const [arr, setArr] = useState([]);\r\n    const [selected, setSelected] = useState();\r\n    const [selectedKey, setSelectedKey] = useState();\r\n    useEffect(()=>{\r\n        handleQueryStudentCourse(\r\n            presentPage === 1 ?\r\n                {page: 1, studentName: \"\", studentId: \"\"} :\r\n                (Math.ceil(studentCourseTotal / 10) > presentPage ?\r\n                        {page: presentPage, studentName: \"\", studentId: \"\",} :\r\n                        {page: presentPage - 1, studentName: \"\", studentId: \"\",}\r\n                ));\r\n    },[studentCourseFlag]);\r\n    const columns = [\r\n        { title: \"课程名\", dataIndex: \"courseName\", key: \"courseName\"},\r\n        { title: \"课程编号\", dataIndex: \"courseNumber\", key: \"courseNumber\"},\r\n        { title: \"学号\", dataIndex: \"studentId\", key: \"studentId\" },\r\n        { title: \"学生姓名\", dataIndex: \"studentName\", key: \"studentName\"},\r\n        { title: \"添加时间\", dataIndex: \"addTime\", key: \"addTime\"},\r\n    ];\r\n    return (\r\n        <div style={{ margin: \"0.625rem\" }}>\r\n            <div style={{display: \"flex\"}}>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{margin: \"0 0.625rem\"}}\r\n                    onClick={()=>confirm({\r\n                        title: '确认删除吗?',\r\n                        onOk(){\r\n                            selected.map(e=> (\r\n                                arr.push(e.studentCourseId)\r\n                            ));\r\n                            handleDeleteStudentCourse({\r\n                                studentCourseIdList: arr,\r\n                            });\r\n                            setSelectedKey([]);\r\n                            setArr([]);\r\n                            setDeleteBtn(true);\r\n                        },\r\n                        onCancel(){\r\n\r\n                        }\r\n\r\n                    })}\r\n                >\r\n                    <Icon type={\"delete\"} />\r\n                    删除课程\r\n                </Button>\r\n                <div  style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\"}}>\r\n                    <Select\r\n                        defaultValue={\"studentName\"}\r\n                        style={{ width: \"4.375rem\" }}\r\n                        onChange={e=>setSearchFlag(e)}\r\n                    >\r\n                        <Option value={\"studentName\"}>姓名</Option>\r\n                        <Option value={\"studentId\"}>学号</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder=\"请输入搜索内容\"\r\n                        onSearch={(value) =>{\r\n                            Reg.test(value) ?\r\n                                handleQueryStudentCourse(\r\n                                    searchFlag === \"studentName\" ? {\r\n                                        page: 1,\r\n                                        studentName: value,\r\n                                        studentId: \"\",\r\n                                    } : {\r\n                                        page: 1,\r\n                                        studentName: \"\",\r\n                                        studentId: value,\r\n                                    }\r\n                                ) :\r\n                                handleQueryStudentCourse({\r\n                                    page: 1,\r\n                                    studentName: \"\",\r\n                                    studentId: \"\",\r\n                                });\r\n                            setPresentPage(1);\r\n                        }}\r\n                        enterButton\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Table\r\n                rowKey={e=>e.studentCourseId}\r\n                dataSource={[...studentCourses]}\r\n                columns={columns}\r\n                pagination={{\r\n                    current: presentPage,\r\n                    total: studentCourseTotal,\r\n                    onChange: (e) => {\r\n                        handleQueryStudentCourse({ page: e, studentName: \"\", studentId: \"\",});\r\n                        setPresentPage(e);\r\n                        setSelectedKey([]);\r\n                    }\r\n                }}\r\n                rowSelection ={{\r\n                    selectedRowKeys: selectedKey,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        setSelected(selectedRows);\r\n                        setSelectedKey(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        studentCourseFlag: state.getIn([\"admin\", \"labCourse\", \"studentCourseFlag\"]),\r\n        studentCourses: state.getIn([\"admin\", \"labCourse\", \"studentCourses\"]),\r\n        studentCourseTotal: state.getIn([\"admin\", \"labCourse\", \"studentCourseTotal\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleQueryStudentCourse(args){\r\n            dispatch(admin.queryStudentCourse(args))\r\n        },\r\n        handleDeleteStudentCourse(args){\r\n            dispatch(admin.deleteStudentCourse(args))\r\n        }\r\n\r\n    }),\r\n)(StudentCourse);\r\n"]},"metadata":{},"sourceType":"module"}