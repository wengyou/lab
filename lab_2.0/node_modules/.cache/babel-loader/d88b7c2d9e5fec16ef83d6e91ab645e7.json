{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport _toConsumableArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _slicedToArray from \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\projects\\\\lab\\\\lab_2.0\\\\src\\\\components\\\\Administrator\\\\StudentCourse.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as admin from \"../../redux/actionCreators/admin\";\nvar confirm = _Modal.confirm;\nvar Option = _Select.Option;\nvar Search = _Input.Search;\nvar Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\n\nvar StudentCourse = function StudentCourse(props) {\n  var studentCourseFlag = props.studentCourseFlag,\n      studentCourses = props.studentCourses,\n      studentCourseTotal = props.studentCourseTotal,\n      handleQueryStudentCourse = props.handleQueryStudentCourse,\n      handleDeleteStudentCourse = props.handleDeleteStudentCourse;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      deleteBtn = _useState2[0],\n      setDeleteBtn = _useState2[1];\n\n  var _useState3 = useState(\"studentName\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchFlag = _useState4[0],\n      setSearchFlag = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      presentPage = _useState6[0],\n      setPresentPage = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      arr = _useState8[0],\n      setArr = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selected = _useState10[0],\n      setSelected = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedKey = _useState12[0],\n      setSelectedKey = _useState12[1];\n\n  useEffect(function () {\n    handleQueryStudentCourse(presentPage === 1 ? {\n      page: 1,\n      studentName: \"\",\n      studentId: \"\"\n    } : Math.ceil(studentCourseTotal / 10) > presentPage ? {\n      page: presentPage,\n      studentName: \"\",\n      studentId: \"\"\n    } : {\n      page: presentPage - 1,\n      studentName: \"\",\n      studentId: \"\"\n    });\n  }, [studentCourseFlag]);\n  var columns = [{\n    title: \"课程名\",\n    dataIndex: \"courseName\",\n    key: \"courseName\"\n  }, {\n    title: \"课程编号\",\n    dataIndex: \"courseNumber\",\n    key: \"courseNumber\"\n  }, {\n    title: \"学号\",\n    dataIndex: \"studentId\",\n    key: \"studentId\"\n  }, {\n    title: \"学生姓名\",\n    dataIndex: \"studentName\",\n    key: \"studentName\"\n  }, {\n    title: \"添加时间\",\n    dataIndex: \"addTime\",\n    key: \"addTime\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.625rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    disabled: deleteBtn,\n    style: {\n      margin: \"0 0.625rem\"\n    },\n    onClick: function onClick() {\n      return confirm({\n        title: '确认删除吗?',\n        onOk: function onOk() {\n          selected.map(function (e) {\n            return arr.push(e.studentCourseId);\n          });\n          handleDeleteStudentCourse({\n            studentCourseIdList: arr\n          });\n          setSelectedKey([]);\n          setArr([]);\n          setDeleteBtn(true);\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    type: \"delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), \"\\u5220\\u9664\\u8BFE\\u7A0B\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      width: \"20rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    defaultValue: \"studentName\",\n    style: {\n      width: \"4.375rem\"\n    },\n    onChange: function onChange(e) {\n      return setSearchFlag(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"studentName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"\\u59D3\\u540D\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"studentId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"\\u5B66\\u53F7\")), /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u641C\\u7D22\\u5185\\u5BB9\",\n    onSearch: function onSearch(value) {\n      Reg.test(value) ? handleQueryStudentCourse(searchFlag === \"studentName\" ? {\n        page: 1,\n        studentName: value,\n        studentId: \"\"\n      } : {\n        page: 1,\n        studentName: \"\",\n        studentId: value\n      }) : handleQueryStudentCourse({\n        page: 1,\n        studentName: \"\",\n        studentId: \"\"\n      });\n      setPresentPage(1);\n    },\n    enterButton: true,\n    style: {\n      width: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(_Table, {\n    rowKey: function rowKey(e) {\n      return e.studentCourseId;\n    },\n    dataSource: _toConsumableArray(studentCourses),\n    columns: columns,\n    pagination: {\n      current: presentPage,\n      total: studentCourseTotal,\n      onChange: function onChange(e) {\n        handleQueryStudentCourse({\n          page: e,\n          studentName: \"\",\n          studentId: \"\"\n        });\n        setPresentPage(e);\n        setSelectedKey([]);\n      }\n    },\n    rowSelection: {\n      selectedRowKeys: selectedKey,\n      onChange: function onChange(selectedRowKeys, selectedRows) {\n        setSelected(selectedRows);\n        setSelectedKey(selectedRowKeys);\n        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    studentCourseFlag: state.getIn([\"admin\", \"labCourse\", \"studentCourseFlag\"]),\n    studentCourses: state.getIn([\"admin\", \"labCourse\", \"studentCourses\"]),\n    studentCourseTotal: state.getIn([\"admin\", \"labCourse\", \"studentCourseTotal\"]),\n    userId: state.getIn([\"userMana\", \"common\", \"userId\"])\n  };\n}, function (dispatch) {\n  return {\n    handleQueryStudentCourse: function handleQueryStudentCourse(args) {\n      dispatch(admin.queryStudentCourse(args));\n    },\n    handleDeleteStudentCourse: function handleDeleteStudentCourse(args) {\n      dispatch(admin.deleteStudentCourse(args));\n    }\n  };\n})(StudentCourse);","map":{"version":3,"sources":["C:/projects/lab/lab_2.0/src/components/Administrator/StudentCourse.js"],"names":["React","useEffect","useState","connect","admin","confirm","Option","Search","Reg","StudentCourse","props","studentCourseFlag","studentCourses","studentCourseTotal","handleQueryStudentCourse","handleDeleteStudentCourse","deleteBtn","setDeleteBtn","searchFlag","setSearchFlag","presentPage","setPresentPage","arr","setArr","selected","setSelected","selectedKey","setSelectedKey","page","studentName","studentId","Math","ceil","columns","title","dataIndex","key","margin","display","onOk","map","e","push","studentCourseId","studentCourseIdList","onCancel","flexWrap","width","value","test","current","total","onChange","selectedRowKeys","selectedRows","length","state","getIn","userId","dispatch","args","queryStudentCourse","deleteStudentCourse"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Table, Button, Modal, Icon, Select, Input} from \"antd\";\r\nimport * as admin from \"../../redux/actionCreators/admin\";\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst Reg = /^[\\s\\S]*.*[^\\s][\\s\\S]*$/;\r\nconst StudentCourse = props => {\r\n    const { studentCourseFlag, studentCourses, studentCourseTotal, handleQueryStudentCourse, handleDeleteStudentCourse } = props;\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [searchFlag, setSearchFlag] = useState(\"studentName\");\r\n    const [presentPage, setPresentPage] =useState(1);\r\n    const [arr, setArr] = useState([]);\r\n    const [selected, setSelected] = useState();\r\n    const [selectedKey, setSelectedKey] = useState();\r\n    useEffect(()=>{\r\n        handleQueryStudentCourse(\r\n            presentPage === 1 ?\r\n                {page: 1, studentName: \"\", studentId: \"\"} :\r\n                (Math.ceil(studentCourseTotal / 10) > presentPage ?\r\n                        {page: presentPage, studentName: \"\", studentId: \"\",} :\r\n                        {page: presentPage - 1, studentName: \"\", studentId: \"\",}\r\n                ));\r\n    },[studentCourseFlag]);\r\n    const columns = [\r\n        { title: \"课程名\", dataIndex: \"courseName\", key: \"courseName\"},\r\n        { title: \"课程编号\", dataIndex: \"courseNumber\", key: \"courseNumber\"},\r\n        { title: \"学号\", dataIndex: \"studentId\", key: \"studentId\" },\r\n        { title: \"学生姓名\", dataIndex: \"studentName\", key: \"studentName\"},\r\n        { title: \"添加时间\", dataIndex: \"addTime\", key: \"addTime\"},\r\n    ];\r\n    return (\r\n        <div style={{ margin: \"0.625rem\" }}>\r\n            <div style={{display: \"flex\"}}>\r\n                <Button\r\n                    disabled={deleteBtn}\r\n                    style={{margin: \"0 0.625rem\"}}\r\n                    onClick={()=>confirm({\r\n                        title: '确认删除吗?',\r\n                        onOk(){\r\n                            selected.map(e=> (\r\n                                arr.push(e.studentCourseId)\r\n                            ));\r\n                            handleDeleteStudentCourse({\r\n                                studentCourseIdList: arr,\r\n                            });\r\n                            setSelectedKey([]);\r\n                            setArr([]);\r\n                            setDeleteBtn(true);\r\n                        },\r\n                        onCancel(){\r\n\r\n                        }\r\n\r\n                    })}\r\n                >\r\n                    <Icon type={\"delete\"} />\r\n                    删除课程\r\n                </Button>\r\n                <div  style={{display: \"flex\", flexWrap: \"nowrap\", width: \"20rem\"}}>\r\n                    <Select\r\n                        defaultValue={\"studentName\"}\r\n                        style={{ width: \"4.375rem\" }}\r\n                        onChange={e=>setSearchFlag(e)}\r\n                    >\r\n                        <Option value={\"studentName\"}>姓名</Option>\r\n                        <Option value={\"studentId\"}>学号</Option>\r\n                    </Select>\r\n                    <Search\r\n                        placeholder=\"请输入搜索内容\"\r\n                        onSearch={(value) =>{\r\n                            Reg.test(value) ?\r\n                                handleQueryStudentCourse(\r\n                                    searchFlag === \"studentName\" ? {\r\n                                        page: 1,\r\n                                        studentName: value,\r\n                                        studentId: \"\",\r\n                                    } : {\r\n                                        page: 1,\r\n                                        studentName: \"\",\r\n                                        studentId: value,\r\n                                    }\r\n                                ) :\r\n                                handleQueryStudentCourse({\r\n                                    page: 1,\r\n                                    studentName: \"\",\r\n                                    studentId: \"\",\r\n                                });\r\n                            setPresentPage(1);\r\n                        }}\r\n                        enterButton\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Table\r\n                rowKey={e=>e.studentCourseId}\r\n                dataSource={[...studentCourses]}\r\n                columns={columns}\r\n                pagination={{\r\n                    current: presentPage,\r\n                    total: studentCourseTotal,\r\n                    onChange: (e) => {\r\n                        handleQueryStudentCourse({ page: e, studentName: \"\", studentId: \"\",});\r\n                        setPresentPage(e);\r\n                        setSelectedKey([]);\r\n                    }\r\n                }}\r\n                rowSelection ={{\r\n                    selectedRowKeys: selectedKey,\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                        setSelected(selectedRows);\r\n                        setSelectedKey(selectedRowKeys);\r\n                        selectedRowKeys.length > 0 ? setDeleteBtn(false) : setDeleteBtn(true);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default connect(\r\n    state => ({\r\n        studentCourseFlag: state.getIn([\"admin\", \"labCourse\", \"studentCourseFlag\"]),\r\n        studentCourses: state.getIn([\"admin\", \"labCourse\", \"studentCourses\"]),\r\n        studentCourseTotal: state.getIn([\"admin\", \"labCourse\", \"studentCourseTotal\"]),\r\n        userId: state.getIn([\"userMana\", \"common\", \"userId\"]),\r\n    }),\r\n    dispatch => ({\r\n        handleQueryStudentCourse(args){\r\n            dispatch(admin.queryStudentCourse(args))\r\n        },\r\n        handleDeleteStudentCourse(args){\r\n            dispatch(admin.deleteStudentCourse(args))\r\n        }\r\n\r\n    }),\r\n)(StudentCourse);\r\n"]},"metadata":{},"sourceType":"module"}